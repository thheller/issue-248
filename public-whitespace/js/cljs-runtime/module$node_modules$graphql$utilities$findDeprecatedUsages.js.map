{
"version":3,
"file":"module$node_modules$graphql$utilities$findDeprecatedUsages.js",
"lineCount":34,
"mappings":"AAAAA,cAAA,CAAe,4DAAf,CAAA,GAA+E,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,OAAhB,EAAwBC,MAAxB,EAA+BC,OAA/B,CAAwC;AAG/HC,QAAAC,eAAA,CAAsBF,OAAtB,EAA+B,YAA/B,EAA6C,CAC3CG,MAAO,IADoC,CAA7C,CAAA;AAGAH,SAAAI,qBAAA,GAA+BA,oBAA/B;AAEA,MAAIC,gBAAgBP,OAAA,CAAQ,gDAAR,CAApB;AAEA,MAAIQ,WAAWR,OAAA,CAAQ,8CAAR,CAAf;AAEA,MAAIS,cAAcT,OAAA,CAAQ,6CAAR,CAAlB;AAEA,MAAIU,UAAUV,OAAA,CAAQ,yCAAR,CAAd;AAEA,MAAIW,YAAYX,OAAA,CAAQ,gDAAR,CAAhB;AAOAM,UAASA,qBAAoB,CAACM,MAAD,EAASC,GAAT,CAAc;AACzC,QAAIC,SAAS,EAAb;AACA,QAAIC,WAAW,IAAIJ,SAAAK,SAAJ,CAAuBJ,MAAvB,CAAf;AAEA,KAAC,CAAA,EAAGJ,QAAAS,MAAJ,EAAoBJ,GAApB,EAAyB,CAAC,CAAA,EAAGL,QAAAU,kBAAJ,EAAgCH,QAAhC,EAA0C,CACjEI,MAAOA,QAASA,MAAK,CAACC,IAAD,CAAO;AAC1B,UAAIC,WAAWN,QAAAO,YAAA,EAAf;AACA,UAAID,QAAJ,IAAgBA,QAAAE,aAAhB,CAAuC;AACrC,YAAIC,aAAaT,QAAAU,cAAA,EAAjB;AACA,YAAID,UAAJ,CAAgB;AACd,cAAIE,SAASL,QAAAM,kBAAb;AACAb,gBAAAc,KAAA,CAAY,IAAIrB,aAAAsB,aAAJ,CAA+B,YAA/B,GAA8CL,UAAAM,KAA9C,GAAgE,GAAhE,GAAsET,QAAAS,KAAtE,GAAsF,iBAAtF,IAA2GJ,MAAA,GAAS,GAAT,GAAeA,MAAf,GAAwB,EAAnI,GAAwI,CAACN,IAAD,CAAxI,CAAZ,CAAA;AAFc;AAFqB;AAFb,KADqC,EAWjEW,UAAWA,QAASA,UAAS,CAACX,IAAD,CAAO;AAClC,UAAIY,UAAUjB,QAAAkB,aAAA,EAAd;AACA,UAAID,OAAJ,IAAeA,OAAAT,aAAf,CAAqC;AACnC,YAAIW,OAAO,CAAC,CAAA,EAAGzB,WAAA0B,aAAJ,EAA8BpB,QAAAqB,aAAA,EAA9B,CAAX;AACA,YAAIF,IAAJ,CAAU;AACR,cAAIR,SAASM,OAAAL,kBAAb;AACAb,gBAAAc,KAAA,CAAY,IAAIrB,aAAAsB,aAAJ,CAA+B,iBAA/B,GAAmDK,IAAAJ,KAAnD,GAA+D,GAA/D,GAAqEE,OAAAF,KAArE,GAAoF,iBAApF,IAAyGJ,MAAA,GAAS,GAAT,GAAeA,MAAf,GAAwB,EAAjI,GAAsI,CAACN,IAAD,CAAtI,CAAZ,CAAA;AAFQ;AAFyB;AAFH,KAX6B,CAA1C,CAAzB,CAAA;AAuBA,WAAON,MAAP;AA3ByC;AAvBoF,CAA/H;;",
"sources":["node_modules/graphql/utilities/findDeprecatedUsages.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$utilities$findDeprecatedUsages\"] = function(global,process,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findDeprecatedUsages = findDeprecatedUsages;\n\nvar _GraphQLError = require('../error/GraphQLError');\n\nvar _visitor = require('../language/visitor');\n\nvar _definition = require('../type/definition');\n\nvar _schema = require('../type/schema');\n\nvar _TypeInfo = require('./TypeInfo');\n\n/**\n * A validation rule which reports deprecated usages.\n *\n * Returns a list of GraphQLError instances describing each deprecated use.\n */\nfunction findDeprecatedUsages(schema, ast) {\n  var errors = [];\n  var typeInfo = new _TypeInfo.TypeInfo(schema);\n\n  (0, _visitor.visit)(ast, (0, _visitor.visitWithTypeInfo)(typeInfo, {\n    Field: function Field(node) {\n      var fieldDef = typeInfo.getFieldDef();\n      if (fieldDef && fieldDef.isDeprecated) {\n        var parentType = typeInfo.getParentType();\n        if (parentType) {\n          var reason = fieldDef.deprecationReason;\n          errors.push(new _GraphQLError.GraphQLError('The field ' + parentType.name + '.' + fieldDef.name + ' is deprecated.' + (reason ? ' ' + reason : ''), [node]));\n        }\n      }\n    },\n    EnumValue: function EnumValue(node) {\n      var enumVal = typeInfo.getEnumValue();\n      if (enumVal && enumVal.isDeprecated) {\n        var type = (0, _definition.getNamedType)(typeInfo.getInputType());\n        if (type) {\n          var reason = enumVal.deprecationReason;\n          errors.push(new _GraphQLError.GraphQLError('The enum value ' + type.name + '.' + enumVal.name + ' is deprecated.' + (reason ? ' ' + reason : ''), [node]));\n        }\n      }\n    }\n  }));\n\n  return errors;\n} /**\n   * Copyright (c) 2015-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   *  strict\n   */\n};"],
"names":["shadow$provide","global","process","require","module","exports","Object","defineProperty","value","findDeprecatedUsages","_GraphQLError","_visitor","_definition","_schema","_TypeInfo","schema","ast","errors","typeInfo","TypeInfo","visit","visitWithTypeInfo","Field","node","fieldDef","getFieldDef","isDeprecated","parentType","getParentType","reason","deprecationReason","push","GraphQLError","name","EnumValue","enumVal","getEnumValue","type","getNamedType","getInputType"]
}
