shadow$provide["module$node_modules$graphql$validation$rules$KnownTypeNames"] = function(global, process, require, module, exports) {
  Object.defineProperty(exports, "__esModule", {value:true});
  exports.unknownTypeMessage = unknownTypeMessage;
  exports.KnownTypeNames = KnownTypeNames;
  var _error = require("module$node_modules$graphql$error$index");
  var _suggestionList = require("module$node_modules$graphql$jsutils$suggestionList");
  var _suggestionList2 = _interopRequireDefault(_suggestionList);
  var _quotedOrList = require("module$node_modules$graphql$jsutils$quotedOrList");
  var _quotedOrList2 = _interopRequireDefault(_quotedOrList);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default:obj};
  }
  function unknownTypeMessage(typeName, suggestedTypes) {
    var message = 'Unknown type "' + typeName + '".';
    if (suggestedTypes.length) {
      message += " Did you mean " + (0, _quotedOrList2.default)(suggestedTypes) + "?";
    }
    return message;
  }
  function KnownTypeNames(context) {
    return {ObjectTypeDefinition:function ObjectTypeDefinition() {
      return false;
    }, InterfaceTypeDefinition:function InterfaceTypeDefinition() {
      return false;
    }, UnionTypeDefinition:function UnionTypeDefinition() {
      return false;
    }, InputObjectTypeDefinition:function InputObjectTypeDefinition() {
      return false;
    }, NamedType:function NamedType(node) {
      var schema = context.getSchema();
      var typeName = node.name.value;
      var type = schema.getType(typeName);
      if (!type) {
        context.reportError(new _error.GraphQLError(unknownTypeMessage(typeName, (0, _suggestionList2.default)(typeName, Object.keys(schema.getTypeMap()))), [node]));
      }
    }};
  }
};

//# sourceMappingURL=module$node_modules$graphql$validation$rules$KnownTypeNames.js.map
