{
"version":3,
"file":"module$node_modules$graphql$validation$rules$UniqueVariableNames.js",
"lineCount":23,
"mappings":"AAAAA,cAAA,CAAe,kEAAf,CAAA,GAAqF,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,OAAhB,EAAwBC,MAAxB,EAA+BC,OAA/B,CAAwC;AAGrIC,QAAAC,eAAA,CAAsBF,OAAtB,EAA+B,YAA/B,EAA6C,CAC3CG,MAAO,IADoC,CAA7C,CAAA;AAGAH,SAAAI,yBAAA,GAAmCA,wBAAnC;AACAJ,SAAAK,oBAAA,GAA8BA,mBAA9B;AAEA,MAAIC,SAASR,OAAA,CAAQ,yCAAR,CAAb;AAEAM,UAASA,yBAAwB,CAACG,YAAD,CAAe;AAC9C,WAAO,wCAAP,GAAkDA,YAAlD,GAAiE,IAAjE;AAD8C;AAkBhDF,UAASA,oBAAmB,CAACG,OAAD,CAAU;AACpC,QAAIC,qBAAqBR,MAAAS,OAAA,CAAc,IAAd,CAAzB;AACA,WAAO,CACLC,oBAAqBA,QAASA,oBAAmB,EAAG;AAClDF,wBAAA,GAAqBR,MAAAS,OAAA,CAAc,IAAd,CAArB;AADkD,KAD/C,EAILE,mBAAoBA,QAASA,mBAAkB,CAACC,IAAD,CAAO;AACpD,UAAIN,eAAeM,IAAAC,SAAAC,KAAAZ,MAAnB;AACA,UAAIM,kBAAA,CAAmBF,YAAnB,CAAJ;AACEC,eAAAQ,YAAA,CAAoB,IAAIV,MAAAW,aAAJ,CAAwBb,wBAAA,CAAyBG,YAAzB,CAAxB,EAAgE,CAACE,kBAAA,CAAmBF,YAAnB,CAAD,EAAmCM,IAAAC,SAAAC,KAAnC,CAAhE,CAApB,CAAA;AADF;AAGEN,0BAAA,CAAmBF,YAAnB,CAAA,GAAmCM,IAAAC,SAAAC,KAAnC;AAHF;AAFoD,KAJjD,CAAP;AAFoC;AA7B+F,CAArI;;",
"sources":["node_modules/graphql/validation/rules/UniqueVariableNames.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$validation$rules$UniqueVariableNames\"] = function(global,process,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.duplicateVariableMessage = duplicateVariableMessage;\nexports.UniqueVariableNames = UniqueVariableNames;\n\nvar _error = require('../../error');\n\nfunction duplicateVariableMessage(variableName) {\n  return 'There can be only one variable named \"' + variableName + '\".';\n}\n\n/**\n * Unique variable names\n *\n * A GraphQL operation is only valid if all its variables are uniquely named.\n */\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nfunction UniqueVariableNames(context) {\n  var knownVariableNames = Object.create(null);\n  return {\n    OperationDefinition: function OperationDefinition() {\n      knownVariableNames = Object.create(null);\n    },\n    VariableDefinition: function VariableDefinition(node) {\n      var variableName = node.variable.name.value;\n      if (knownVariableNames[variableName]) {\n        context.reportError(new _error.GraphQLError(duplicateVariableMessage(variableName), [knownVariableNames[variableName], node.variable.name]));\n      } else {\n        knownVariableNames[variableName] = node.variable.name;\n      }\n    }\n  };\n}\n};"],
"names":["shadow$provide","global","process","require","module","exports","Object","defineProperty","value","duplicateVariableMessage","UniqueVariableNames","_error","variableName","context","knownVariableNames","create","OperationDefinition","VariableDefinition","node","variable","name","reportError","GraphQLError"]
}
