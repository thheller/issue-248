{
"version":3,
"file":"module$node_modules$graphql$utilities$separateOperations.js",
"lineCount":55,
"mappings":"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",
"sources":["node_modules/graphql/utilities/separateOperations.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$utilities$separateOperations\"] = function(global,process,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.separateOperations = separateOperations;\n\nvar _visitor = require('../language/visitor');\n\n/**\n * separateOperations accepts a single AST document which may contain many\n * operations and fragments and returns a collection of AST documents each of\n * which contains a single operation as well the fragment definitions it\n * refers to.\n */\nfunction separateOperations(documentAST) {\n  var operations = [];\n  var fragments = Object.create(null);\n  var positions = new Map();\n  var depGraph = Object.create(null);\n  var fromName = void 0;\n  var idx = 0;\n\n  // Populate metadata and build a dependency graph.\n  (0, _visitor.visit)(documentAST, {\n    OperationDefinition: function OperationDefinition(node) {\n      fromName = opName(node);\n      operations.push(node);\n      positions.set(node, idx++);\n    },\n    FragmentDefinition: function FragmentDefinition(node) {\n      fromName = node.name.value;\n      fragments[fromName] = node;\n      positions.set(node, idx++);\n    },\n    FragmentSpread: function FragmentSpread(node) {\n      var toName = node.name.value;\n      (depGraph[fromName] || (depGraph[fromName] = Object.create(null)))[toName] = true;\n    }\n  });\n\n  // For each operation, produce a new synthesized AST which includes only what\n  // is necessary for completing that operation.\n  var separatedDocumentASTs = Object.create(null);\n  operations.forEach(function (operation) {\n    var operationName = opName(operation);\n    var dependencies = Object.create(null);\n    collectTransitiveDependencies(dependencies, depGraph, operationName);\n\n    // The list of definition nodes to be included for this operation, sorted\n    // to retain the same order as the original document.\n    var definitions = [operation];\n    Object.keys(dependencies).forEach(function (name) {\n      definitions.push(fragments[name]);\n    });\n    definitions.sort(function (n1, n2) {\n      return (positions.get(n1) || 0) - (positions.get(n2) || 0);\n    });\n\n    separatedDocumentASTs[operationName] = {\n      kind: 'Document',\n      definitions: definitions\n    };\n  });\n\n  return separatedDocumentASTs;\n} /**\n   * Copyright (c) 2015-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   *  strict\n   */\n\n// Provides the empty string for anonymous operations.\nfunction opName(operation) {\n  return operation.name ? operation.name.value : '';\n}\n\n// From a dependency graph, collects a list of transitive dependencies by\n// recursing through a dependency graph.\nfunction collectTransitiveDependencies(collected, depGraph, fromName) {\n  var immediateDeps = depGraph[fromName];\n  if (immediateDeps) {\n    Object.keys(immediateDeps).forEach(function (toName) {\n      if (!collected[toName]) {\n        collected[toName] = true;\n        collectTransitiveDependencies(collected, depGraph, toName);\n      }\n    });\n  }\n}\n};"],
"names":["shadow$provide","global","process","require","module","exports","Object","defineProperty","value","separateOperations","_visitor","documentAST","operations","fragments","create","positions","Map","depGraph","fromName","idx","visit","OperationDefinition","node","opName","push","set","FragmentDefinition","name","FragmentSpread","toName","separatedDocumentASTs","forEach","operation","operationName","dependencies","collectTransitiveDependencies","definitions","keys","sort","n1","n2","get","kind","collected","immediateDeps"]
}
