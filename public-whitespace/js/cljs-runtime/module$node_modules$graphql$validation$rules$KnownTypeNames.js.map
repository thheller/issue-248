{
"version":3,
"file":"module$node_modules$graphql$validation$rules$KnownTypeNames.js",
"lineCount":39,
"mappings":"AAAAA,cAAA,CAAe,6DAAf,CAAA,GAAgF,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,OAAhB,EAAwBC,MAAxB,EAA+BC,OAA/B,CAAwC;AAGhIC,QAAAC,eAAA,CAAsBF,OAAtB,EAA+B,YAA/B,EAA6C,CAC3CG,MAAO,IADoC,CAA7C,CAAA;AAGAH,SAAAI,mBAAA,GAA6BA,kBAA7B;AACAJ,SAAAK,eAAA,GAAyBA,cAAzB;AAEA,MAAIC,SAASR,OAAA,CAAQ,yCAAR,CAAb;AAEA,MAAIS,kBAAkBT,OAAA,CAAQ,oDAAR,CAAtB;AAEA,MAAIU,mBAAmBC,sBAAA,CAAuBF,eAAvB,CAAvB;AAEA,MAAIG,gBAAgBZ,OAAA,CAAQ,kDAAR,CAApB;AAEA,MAAIa,iBAAiBF,sBAAA,CAAuBC,aAAvB,CAArB;AAEAD,UAASA,uBAAsB,CAACG,GAAD,CAAM;AAAE,WAAOA,GAAA,IAAOA,GAAAC,WAAP,GAAwBD,GAAxB,GAA8B,CAAEE,QAASF,GAAX,CAArC;AAAF;AAWrCR,UAASA,mBAAkB,CAACW,QAAD,EAAWC,cAAX,CAA2B;AACpD,QAAIC,UAAU,gBAAVA,GAA6BF,QAA7BE,GAAwC,IAA5C;AACA,QAAID,cAAAE,OAAJ;AACED,aAAA,IAAW,gBAAX,GAA8B,CAAC,CAAA,EAAGN,cAAAG,QAAJ,EAA4BE,cAA5B,CAA9B,GAA4E,GAA5E;AADF;AAGA,WAAOC,OAAP;AALoD;AActDZ,UAASA,eAAc,CAACc,OAAD,CAAU;AAC/B,WAAO,CAILC,qBAAsBA,QAASA,qBAAoB,EAAG;AACpD,aAAO,KAAP;AADoD,KAJjD,EAOLC,wBAAyBA,QAASA,wBAAuB,EAAG;AAC1D,aAAO,KAAP;AAD0D,KAPvD,EAULC,oBAAqBA,QAASA,oBAAmB,EAAG;AAClD,aAAO,KAAP;AADkD,KAV/C,EAaLC,0BAA2BA,QAASA,0BAAyB,EAAG;AAC9D,aAAO,KAAP;AAD8D,KAb3D,EAgBLC,UAAWA,QAASA,UAAS,CAACC,IAAD,CAAO;AAClC,UAAIC,SAASP,OAAAQ,UAAA,EAAb;AACA,UAAIZ,WAAWU,IAAAG,KAAAzB,MAAf;AACA,UAAI0B,OAAOH,MAAAI,QAAA,CAAef,QAAf,CAAX;AACA,UAAI,CAACc,IAAL;AACEV,eAAAY,YAAA,CAAoB,IAAIzB,MAAA0B,aAAJ,CAAwB5B,kBAAA,CAAmBW,QAAnB,EAA6B,CAAC,CAAA,EAAGP,gBAAAM,QAAJ,EAA8BC,QAA9B,EAAwCd,MAAAgC,KAAA,CAAYP,MAAAQ,WAAA,EAAZ,CAAxC,CAA7B,CAAxB,EAAiI,CAACT,IAAD,CAAjI,CAApB,CAAA;AADF;AAJkC,KAhB/B,CAAP;AAD+B;AA5C+F,CAAhI;;",
"sources":["node_modules/graphql/validation/rules/KnownTypeNames.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$validation$rules$KnownTypeNames\"] = function(global,process,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.unknownTypeMessage = unknownTypeMessage;\nexports.KnownTypeNames = KnownTypeNames;\n\nvar _error = require('../../error');\n\nvar _suggestionList = require('../../jsutils/suggestionList');\n\nvar _suggestionList2 = _interopRequireDefault(_suggestionList);\n\nvar _quotedOrList = require('../../jsutils/quotedOrList');\n\nvar _quotedOrList2 = _interopRequireDefault(_quotedOrList);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nfunction unknownTypeMessage(typeName, suggestedTypes) {\n  var message = 'Unknown type \"' + typeName + '\".';\n  if (suggestedTypes.length) {\n    message += ' Did you mean ' + (0, _quotedOrList2.default)(suggestedTypes) + '?';\n  }\n  return message;\n}\n\n/**\n * Known type names\n *\n * A GraphQL document is only valid if referenced types (specifically\n * variable definitions and fragment conditions) are defined by the type schema.\n */\nfunction KnownTypeNames(context) {\n  return {\n    // TODO: when validating IDL, re-enable these. Experimental version does not\n    // add unreferenced types, resulting in false-positive errors. Squelched\n    // errors for now.\n    ObjectTypeDefinition: function ObjectTypeDefinition() {\n      return false;\n    },\n    InterfaceTypeDefinition: function InterfaceTypeDefinition() {\n      return false;\n    },\n    UnionTypeDefinition: function UnionTypeDefinition() {\n      return false;\n    },\n    InputObjectTypeDefinition: function InputObjectTypeDefinition() {\n      return false;\n    },\n    NamedType: function NamedType(node) {\n      var schema = context.getSchema();\n      var typeName = node.name.value;\n      var type = schema.getType(typeName);\n      if (!type) {\n        context.reportError(new _error.GraphQLError(unknownTypeMessage(typeName, (0, _suggestionList2.default)(typeName, Object.keys(schema.getTypeMap()))), [node]));\n      }\n    }\n  };\n}\n};"],
"names":["shadow$provide","global","process","require","module","exports","Object","defineProperty","value","unknownTypeMessage","KnownTypeNames","_error","_suggestionList","_suggestionList2","_interopRequireDefault","_quotedOrList","_quotedOrList2","obj","__esModule","default","typeName","suggestedTypes","message","length","context","ObjectTypeDefinition","InterfaceTypeDefinition","UnionTypeDefinition","InputObjectTypeDefinition","NamedType","node","schema","getSchema","name","type","getType","reportError","GraphQLError","keys","getTypeMap"]
}
