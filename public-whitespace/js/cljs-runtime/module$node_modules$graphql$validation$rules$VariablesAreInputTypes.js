shadow$provide["module$node_modules$graphql$validation$rules$VariablesAreInputTypes"] = function(global, process, require, module, exports) {
  Object.defineProperty(exports, "__esModule", {value:true});
  exports.nonInputTypeOnVarMessage = nonInputTypeOnVarMessage;
  exports.VariablesAreInputTypes = VariablesAreInputTypes;
  var _error = require("module$node_modules$graphql$error$index");
  var _printer = require("module$node_modules$graphql$language$printer");
  var _definition = require("module$node_modules$graphql$type$definition");
  var _typeFromAST = require("module$node_modules$graphql$utilities$typeFromAST");
  function nonInputTypeOnVarMessage(variableName, typeName) {
    return 'Variable "$' + variableName + '" cannot be non-input type "' + typeName + '".';
  }
  function VariablesAreInputTypes(context) {
    return {VariableDefinition:function VariableDefinition(node) {
      var type = (0, _typeFromAST.typeFromAST)(context.getSchema(), node.type);
      if (type && !(0, _definition.isInputType)(type)) {
        var variableName = node.variable.name.value;
        context.reportError(new _error.GraphQLError(nonInputTypeOnVarMessage(variableName, (0, _printer.print)(node.type)), [node.type]));
      }
    }};
  }
};

//# sourceMappingURL=module$node_modules$graphql$validation$rules$VariablesAreInputTypes.js.map
