{
"version":3,
"file":"module$node_modules$graphql$utilities$getOperationAST.js",
"lineCount":25,
"mappings":"AAAAA,cAAA,CAAe,uDAAf,CAAA,GAA0E,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,OAAhB,EAAwBC,MAAxB,EAA+BC,OAA/B,CAAwC;AAG1HC,QAAAC,eAAA,CAAsBF,OAAtB,EAA+B,YAA/B,EAA6C,CAC3CG,MAAO,IADoC,CAA7C,CAAA;AAGAH,SAAAI,gBAAA,GAA0BA,eAA1B;AAEA,MAAIC,SAASP,OAAA,CAAQ,4CAAR,CAAb;AAOAM,UAASA,gBAAe,CAACE,WAAD,EAAcC,aAAd,CAA6B;AACnD,QAAIC,YAAY,IAAhB;AACA,SAAK,IAAIC,IAAI,CAAb,EAAgBA,CAAhB,GAAoBH,WAAAI,YAAAC,OAApB,EAAoDF,CAAA,EAApD,CAAyD;AACvD,UAAIG,aAAaN,WAAAI,YAAA,CAAwBD,CAAxB,CAAjB;AACA,UAAIG,UAAAC,KAAJ,KAAwBR,MAAAS,KAAAC,qBAAxB;AACE,YAAI,CAACR,aAAL,CAAoB;AAIlB,cAAIC,SAAJ;AACE,mBAAO,IAAP;AADF;AAGAA,mBAAA,GAAYI,UAAZ;AAPkB,SAApB;AAQO,cAAIA,UAAAI,KAAJ,IAAuBJ,UAAAI,KAAAb,MAAvB,KAAiDI,aAAjD;AACL,mBAAOK,UAAP;AADK;AARP;AADF;AAFuD;AAgBzD,WAAOJ,SAAP;AAlBmD;AAfqE,CAA1H;;",
"sources":["node_modules/graphql/utilities/getOperationAST.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$utilities$getOperationAST\"] = function(global,process,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getOperationAST = getOperationAST;\n\nvar _kinds = require('../language/kinds');\n\n/**\n * Returns an operation AST given a document AST and optionally an operation\n * name. If a name is not provided, an operation is only returned if only one is\n * provided in the document.\n */\nfunction getOperationAST(documentAST, operationName) {\n  var operation = null;\n  for (var i = 0; i < documentAST.definitions.length; i++) {\n    var definition = documentAST.definitions[i];\n    if (definition.kind === _kinds.Kind.OPERATION_DEFINITION) {\n      if (!operationName) {\n        // If no operation name was provided, only return an Operation if there\n        // is one defined in the document. Upon encountering the second, return\n        // null.\n        if (operation) {\n          return null;\n        }\n        operation = definition;\n      } else if (definition.name && definition.name.value === operationName) {\n        return definition;\n      }\n    }\n  }\n  return operation;\n} /**\n   * Copyright (c) 2015-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   *  strict\n   */\n};"],
"names":["shadow$provide","global","process","require","module","exports","Object","defineProperty","value","getOperationAST","_kinds","documentAST","operationName","operation","i","definitions","length","definition","kind","Kind","OPERATION_DEFINITION","name"]
}
