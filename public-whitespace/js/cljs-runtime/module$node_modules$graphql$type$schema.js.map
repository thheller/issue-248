{
"version":3,
"file":"module$node_modules$graphql$type$schema.js",
"lineCount":167,
"mappings":"AAAAA,cAAA,CAAe,yCAAf,CAAA,GAA4D,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,OAAhB,EAAwBC,MAAxB,EAA+BC,OAA/B,CAAwC;AAG5GC,QAAAC,eAAA,CAAsBF,OAAtB,EAA+B,YAA/B,EAA6C,CAC3CG,MAAO,IADoC,CAA7C,CAAA;AAGAH,SAAAI,cAAA,GAAwBC,SAAxB;AAEA,MAAIC,UAAU,MAAOC,OAAP,KAAkB,UAAlB,IAAgC,MAAOA,OAAAC,SAAvC,KAA2D,QAA3D,GAAsE,QAAS,CAACC,GAAD,CAAM;AAAE,WAAO,MAAOA,IAAd;AAAF,GAArF,GAA8G,QAAS,CAACA,GAAD,CAAM;AAAE,WAAOA,GAAA,IAAO,MAAOF,OAAd,KAAyB,UAAzB,IAAuCE,GAAAC,YAAvC,KAA2DH,MAA3D,IAAqEE,GAArE,KAA6EF,MAAAI,UAA7E,GAAgG,QAAhG,GAA2G,MAAOF,IAAzH;AAAF,GAA3I;AAEAT,SAAAY,SAAA,GAAmBA,QAAnB;AAEA,MAAIC,cAAcf,OAAA,CAAQ,6CAAR,CAAlB;AAEA,MAAIgB,cAAchB,OAAA,CAAQ,6CAAR,CAAlB;AAEA,MAAIiB,iBAAiBjB,OAAA,CAAQ,gDAAR,CAArB;AAEA,MAAIkB,QAAQlB,OAAA,CAAQ,0CAAR,CAAZ;AAEA,MAAImB,SAASC,sBAAA,CAAuBF,KAAvB,CAAb;AAEA,MAAIG,cAAcrB,OAAA,CAAQ,gDAAR,CAAlB;AAEA,MAAIsB,eAAeF,sBAAA,CAAuBC,WAAvB,CAAnB;AAEA,MAAIE,aAAavB,OAAA,CAAQ,+CAAR,CAAjB;AAEA,MAAIwB,cAAcJ,sBAAA,CAAuBG,UAAvB,CAAlB;AAEA,MAAIE,gBAAgBzB,OAAA,CAAQ,kDAAR,CAApB;AAEA,MAAI0B,iBAAiBN,sBAAA,CAAuBK,aAAvB,CAArB;AAEAL,UAASA,uBAAsB,CAACT,GAAD,CAAM;AAAE,WAAOA,GAAA,IAAOA,GAAAgB,WAAP,GAAwBhB,GAAxB,GAA8B,CAAEiB,QAASjB,GAAX,CAArC;AAAF;AAErCkB,UAASA,gBAAe,CAACC,QAAD,EAAWC,WAAX,CAAwB;AAAE,QAAI,EAAED,QAAF,YAAsBC,WAAtB,CAAJ;AAA0C,YAAM,IAAIC,SAAJ,CAAc,mCAAd,CAAN;AAA1C;AAAF;AAehDlB,UAASA,SAAQ,CAACmB,MAAD,CAAS;AACxB,WAAO,CAAC,CAAA,EAAGX,YAAAM,QAAJ,EAA0BK,MAA1B,EAAkC3B,aAAlC,CAAP;AADwB;AA+B1B,MAAIA,gBAAgBJ,OAAAI,cAAhBA,GAAwC,QAAS,EAAG;AAEtDA,YAASA,cAAa,CAAC4B,MAAD,CAAS;AAC7B,UAAIC,QAAQ,IAAZ;AAEAN,qBAAA,CAAgB,IAAhB,EAAsBvB,aAAtB,CAAA;AAIA,UAAI4B,MAAJ,IAAcA,MAAAE,YAAd;AACE,YAAAC,mBAAA,GAA0B,EAA1B;AADF,YAEO;AAGL,WAAG,MAAOH,OAAP,KAAkB,WAAlB,GAAgC,WAAhC,GAA8C1B,OAAA,CAAQ0B,MAAR,CAAjD,MAAsE,QAAtE,CAAA,GAAkF,CAAC,CAAA,EAAGV,WAAAI,QAAJ,EAAyB,CAAzB,EAA4B,oCAA5B,CAAlF,GAAsJ,IAAK,EAA3J;AACA,UAAE,CAACM,MAAAI,MAAH,IAAmBC,KAAAC,QAAA,CAAcN,MAAAI,MAAd,CAAnB,CAAA,GAAkD,CAAC,CAAA,EAAGd,WAAAI,QAAJ,EAAyB,CAAzB,EAA4B,6CAA5B,GAA4Ea,MAAA,CAAOP,MAAAI,MAAP,CAA5E,GAAmG,GAAnG,CAAlD,GAA4J,IAAK,EAAjK;AACA,UAAE,CAACJ,MAAAQ,WAAH,IAAwBH,KAAAC,QAAA,CAAcN,MAAAQ,WAAd,CAAxB,CAAA,GAA4D,CAAC,CAAA,EAAGlB,WAAAI,QAAJ,EAAyB,CAAzB,EAA4B,kDAA5B,IAAkFa,MAAA,CAAOP,MAAAQ,WAAP,CAAlF,GAA8G,GAA9G,EAA5D,GAAkL,IAAK,EAAvL;AACA,UAAE,CAACR,MAAAS,mBAAH,IAAgCJ,KAAAC,QAAA,CAAcN,MAAAS,mBAAd,CAAhC,CAAA,GAA4E,CAAC,CAAA,EAAGnB,WAAAI,QAAJ,EAAyB,CAAzB,EAA4B,0DAA5B,IAA0Fa,MAAA,CAAOP,MAAAS,mBAAP,CAA1F,GAA8H,GAA9H,EAA5E,GAAkN,IAAK,EAAvN;AANK;AASP,UAAAC,qBAAA,GAA4BV,MAAAS,mBAA5B;AACA,UAAAE,WAAA,GAAkBX,MAAAY,MAAlB;AACA,UAAAC,cAAA,GAAqBb,MAAAc,SAArB;AACA,UAAAC,kBAAA,GAAyBf,MAAAgB,aAAzB;AAEA,UAAAlC,YAAA,GAAmBkB,MAAAQ,WAAnB,IAAwC1B,WAAAmC,oBAAxC;AACA,UAAAC,QAAA,GAAelB,MAAAkB,QAAf;AAGA,UAAIC,eAAe,CAAC,IAAAC,aAAA,EAAD,EAAsB,IAAAC,gBAAA,EAAtB,EAA8C,IAAAC,oBAAA,EAA9C,EAA0EvC,cAAAwC,SAA1E,CAAnB;AAEA,UAAInB,QAAQJ,MAAAI,MAAZ;AACA,UAAIA,KAAJ;AACEe,oBAAA,GAAeA,YAAAK,OAAA,CAAoBpB,KAApB,CAAf;AADF;AAKA,UAAIqB,UAAUxD,MAAAyD,OAAA,CAAc,IAAd,CAAd;AAGAD,aAAA,GAAUN,YAAAQ,OAAA,CAAoBC,cAApB,EAAoCH,OAApC,CAAV;AAGAA,aAAA,GAAU,IAAA3C,YAAA6C,OAAA,CAAwBE,uBAAxB,EAAiDJ,OAAjD,CAAV;AAGA,UAAAK,SAAA,GAAgBL,OAAhB;AAGA,UAAAM,iBAAA,GAAwB9D,MAAAyD,OAAA,CAAc,IAAd,CAAxB;AACAzD,YAAA+D,KAAA,CAAY,IAAAF,SAAZ,CAAAG,QAAA,CAAmC,QAAS,CAACC,QAAD,CAAW;AACrD,YAAIC,OAAOlC,KAAA6B,SAAA,CAAeI,QAAf,CAAX;AACA,YAAI,CAAC,CAAA,EAAGrD,WAAAuD,aAAJ,EAA8BD,IAA9B,CAAJ;AACEA,cAAAE,cAAA,EAAAJ,QAAA,CAA6B,QAAS,CAACK,KAAD,CAAQ;AAC5C,gBAAI,CAAC,CAAA,EAAGzD,WAAA0D,gBAAJ,EAAiCD,KAAjC,CAAJ,CAA6C;AAC3C,kBAAIE,QAAQvC,KAAA8B,iBAAA,CAAuBO,KAAAG,KAAvB,CAAZ;AACA,kBAAID,KAAJ;AACEA,qBAAAE,KAAA,CAAWP,IAAX,CAAA;AADF;AAGElC,qBAAA8B,iBAAA,CAAuBO,KAAAG,KAAvB,CAAA,GAAqC,CAACN,IAAD,CAArC;AAHF;AAF2C;AADD,WAA9C,CAAA;AADF;AAFqD,OAAvD,CAAA;AAhD6B;AAmE/B/D,iBAAAO,UAAAyC,aAAA,GAAuCuB,QAASvB,aAAY,EAAG;AAC7D,aAAO,IAAAT,WAAP;AAD6D,KAA/D;AAIAvC,iBAAAO,UAAA0C,gBAAA,GAA0CuB,QAASvB,gBAAe,EAAG;AACnE,aAAO,IAAAR,cAAP;AADmE,KAArE;AAIAzC,iBAAAO,UAAA2C,oBAAA,GAA8CuB,QAASvB,oBAAmB,EAAG;AAC3E,aAAO,IAAAP,kBAAP;AAD2E,KAA7E;AAIA3C,iBAAAO,UAAAmE,WAAA,GAAqCC,QAASD,WAAU,EAAG;AACzD,aAAO,IAAAhB,SAAP;AADyD,KAA3D;AAIA1D,iBAAAO,UAAAqE,QAAA,GAAkCC,QAASD,QAAO,CAACP,IAAD,CAAO;AACvD,aAAO,IAAAK,WAAA,EAAA,CAAkBL,IAAlB,CAAP;AADuD,KAAzD;AAIArE,iBAAAO,UAAAuE,iBAAA,GAA2CC,QAASD,iBAAgB,CAACE,YAAD,CAAe;AACjF,UAAI,CAAC,CAAA,EAAGvE,WAAAwE,YAAJ,EAA6BD,YAA7B,CAAJ;AACE,eAAOA,YAAAE,SAAA,EAAP;AADF;AAGA,aAAO,IAAAvB,iBAAA,CAAsBqB,YAAAX,KAAtB,CAAP;AAJiF,KAAnF;AAOArE,iBAAAO,UAAA4E,eAAA,GAAyCC,QAASD,eAAc,CAACH,YAAD,EAAeK,YAAf,CAA6B;AAC3F,UAAIC,kBAAkB,IAAAC,iBAAtB;AACA,UAAI,CAACD,eAAL;AACE,YAAAC,iBAAA,GAAwBD,eAAxB,GAA0CzF,MAAAyD,OAAA,CAAc,IAAd,CAA1C;AADF;AAIA,UAAI,CAACgC,eAAA,CAAgBN,YAAAX,KAAhB,CAAL,CAAyC;AACvC,YAAImB,gBAAgB,IAAAV,iBAAA,CAAsBE,YAAtB,CAApB;AACA,SAAC/C,KAAAC,QAAA,CAAcsD,aAAd,CAAD,GAAgC,CAAC,CAAA,EAAGtE,WAAAI,QAAJ,EAAyB,CAAzB,EAA4B,iDAA5B,GAAgF0D,YAAAX,KAAhF,GAAoG,GAApG,GAA0G,mEAA1G,GAAgL,mCAAhL,CAAhC,GAAuP,IAAK,EAA5P;AACAiB,uBAAA,CAAgBN,YAAAX,KAAhB,CAAA,GAAqCmB,aAAAjC,OAAA,CAAqB,QAAS,CAACkC,GAAD,EAAM1B,IAAN,CAAY;AAC7E,iBAAO0B,GAAA,CAAI1B,IAAAM,KAAJ,CAAA,GAAiB,IAAjB,EAAuBoB,GAA9B;AAD6E,SAA1C,EAElC5F,MAAAyD,OAAA,CAAc,IAAd,CAFkC,CAArC;AAHuC;AAQzC,aAAOoC,OAAA,CAAQJ,eAAA,CAAgBN,YAAAX,KAAhB,CAAA,CAAmCgB,YAAAhB,KAAnC,CAAR,CAAP;AAd2F,KAA7F;AAiBArE,iBAAAO,UAAAoF,cAAA,GAAwCC,QAASD,cAAa,EAAG;AAC/D,aAAO,IAAAjF,YAAP;AAD+D,KAAjE;AAIAV,iBAAAO,UAAAsF,aAAA,GAAuCC,QAASD,aAAY,CAACxB,IAAD,CAAO;AACjE,aAAO,CAAC,CAAA,EAAGxD,MAAAS,QAAJ,EAAoB,IAAAqE,cAAA,EAApB,EAA0C,QAAS,CAACI,SAAD,CAAY;AACpE,eAAOA,SAAA1B,KAAP,KAA0BA,IAA1B;AADoE,OAA/D,CAAP;AADiE,KAAnE;AAMA,WAAOrE,aAAP;AA3HsD,GAAZ,EAA5C;AA8HAwD,UAASA,eAAc,CAACiC,GAAD,EAAM1B,IAAN,CAAY;AACjC,QAAI,CAACA,IAAL;AACE,aAAO0B,GAAP;AADF;AAGA,QAAI,CAAC,CAAA,EAAGhF,WAAAuF,eAAJ,EAAgCjC,IAAhC,CAAJ;AACE,aAAOP,cAAA,CAAeiC,GAAf,EAAoB1B,IAAAkC,OAApB,CAAP;AADF;AAGA,QAAIR,GAAA,CAAI1B,IAAAM,KAAJ,CAAJ,CAAoB;AAClB,QAAEoB,GAAA,CAAI1B,IAAAM,KAAJ,CAAF,KAAqBN,IAArB,CAAA,GAA6B,CAAC,CAAA,EAAG7C,WAAAI,QAAJ,EAAyB,CAAzB,EAA4B,+DAA5B,IAA+F,eAA/F,GAAiHyC,IAAAM,KAAjH,GAA6H,IAA7H,EAA7B,GAAmK,IAAK,EAAxK;AACA,aAAOoB,GAAP;AAFkB;AAIpBA,OAAA,CAAI1B,IAAAM,KAAJ,CAAA,GAAiBN,IAAjB;AAEA,QAAImC,aAAaT,GAAjB;AAEA,QAAI,CAAC,CAAA,EAAGhF,WAAAwE,YAAJ,EAA6BlB,IAA7B,CAAJ;AACEmC,gBAAA,GAAanC,IAAAmB,SAAA,EAAA3B,OAAA,CAAuBC,cAAvB,EAAuC0C,UAAvC,CAAb;AADF;AAIA,QAAI,CAAC,CAAA,EAAGzF,WAAAuD,aAAJ,EAA8BD,IAA9B,CAAJ;AACEmC,gBAAA,GAAanC,IAAAE,cAAA,EAAAV,OAAA,CAA4BC,cAA5B,EAA4C0C,UAA5C,CAAb;AADF;AAIA,QAAI,CAAC,CAAA,EAAGzF,WAAAuD,aAAJ,EAA8BD,IAA9B,CAAJ,IAA2C,CAAC,CAAA,EAAGtD,WAAA0D,gBAAJ,EAAiCJ,IAAjC,CAA3C;AACE,OAAC,CAAA,EAAG3C,cAAAE,QAAJ,EAA4ByC,IAAAoC,UAAA,EAA5B,CAAAtC,QAAA,CAAsD,QAAS,CAACuC,KAAD,CAAQ;AACrE,YAAIA,KAAAC,KAAJ,CAAgB;AACd,cAAIC,gBAAgBF,KAAAC,KAAAZ,IAAA,CAAe,QAAS,CAACc,GAAD,CAAM;AAChD,mBAAOA,GAAAxC,KAAP;AADgD,WAA9B,CAApB;AAGAmC,oBAAA,GAAaI,aAAA/C,OAAA,CAAqBC,cAArB,EAAqC0C,UAArC,CAAb;AAJc;AAMhBA,kBAAA,GAAa1C,cAAA,CAAe0C,UAAf,EAA2BE,KAAArC,KAA3B,CAAb;AAPqE,OAAvE,CAAA;AADF;AAYA,QAAI,CAAC,CAAA,EAAGtD,WAAA+F,kBAAJ,EAAmCzC,IAAnC,CAAJ;AACE,OAAC,CAAA,EAAG3C,cAAAE,QAAJ,EAA4ByC,IAAAoC,UAAA,EAA5B,CAAAtC,QAAA,CAAsD,QAAS,CAACuC,KAAD,CAAQ;AACrEF,kBAAA,GAAa1C,cAAA,CAAe0C,UAAf,EAA2BE,KAAArC,KAA3B,CAAb;AADqE,OAAvE,CAAA;AADF;AAMA,WAAOmC,UAAP;AAzCiC;AA4CnCzC,UAASA,wBAAuB,CAACgC,GAAD,EAAMM,SAAN,CAAiB;AAE/C,QAAI,CAAC,CAAC,CAAA,EAAGrF,WAAA+F,YAAJ,EAA6BV,SAA7B,CAAL;AACE,aAAON,GAAP;AADF;AAGA,WAAOM,SAAAM,KAAA9C,OAAA,CAAsB,QAAS,CAACmD,IAAD,EAAOH,GAAP,CAAY;AAChD,aAAO/C,cAAA,CAAekD,IAAf,EAAqBH,GAAAxC,KAArB,CAAP;AADgD,KAA3C,EAEJ0B,GAFI,CAAP;AAL+C;AA5P2D,CAA5G;;",
"sources":["node_modules/graphql/type/schema.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$type$schema\"] = function(global,process,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GraphQLSchema = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.isSchema = isSchema;\n\nvar _definition = require('./definition');\n\nvar _directives = require('./directives');\n\nvar _introspection = require('./introspection');\n\nvar _find = require('../jsutils/find');\n\nvar _find2 = _interopRequireDefault(_find);\n\nvar _instanceOf = require('../jsutils/instanceOf');\n\nvar _instanceOf2 = _interopRequireDefault(_instanceOf);\n\nvar _invariant = require('../jsutils/invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _objectValues = require('../jsutils/objectValues');\n\nvar _objectValues2 = _interopRequireDefault(_objectValues);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } } /**\n                                                                                                                                                           * Copyright (c) 2015-present, Facebook, Inc.\n                                                                                                                                                           *\n                                                                                                                                                           * This source code is licensed under the MIT license found in the\n                                                                                                                                                           * LICENSE file in the root directory of this source tree.\n                                                                                                                                                           *\n                                                                                                                                                           *  strict\n                                                                                                                                                           */\n\n// eslint-disable-next-line no-redeclare\n\n\n/**\n * Test if the given value is a GraphQL schema.\n */\nfunction isSchema(schema) {\n  return (0, _instanceOf2.default)(schema, GraphQLSchema);\n}\n\n/**\n * Schema Definition\n *\n * A Schema is created by supplying the root types of each type of operation,\n * query and mutation (optional). A schema definition is then supplied to the\n * validator and executor.\n *\n * Example:\n *\n *     const MyAppSchema = new GraphQLSchema({\n *       query: MyAppQueryRootType,\n *       mutation: MyAppMutationRootType,\n *     })\n *\n * Note: If an array of `directives` are provided to GraphQLSchema, that will be\n * the exact list of directives represented and allowed. If `directives` is not\n * provided then a default set of the specified directives (e.g. @include and\n * @skip) will be used. If you wish to provide *additional* directives to these\n * specified directives, you must explicitly declare them. Example:\n *\n *     const MyAppSchema = new GraphQLSchema({\n *       ...\n *       directives: specifiedDirectives.concat([ myCustomDirective ]),\n *     })\n *\n */\n\nvar GraphQLSchema = exports.GraphQLSchema = function () {\n  // Used as a cache for validateSchema().\n  function GraphQLSchema(config) {\n    var _this = this;\n\n    _classCallCheck(this, GraphQLSchema);\n\n    // If this schema was built from a source known to be valid, then it may be\n    // marked with assumeValid to avoid an additional type system validation.\n    if (config && config.assumeValid) {\n      this.__validationErrors = [];\n    } else {\n      // Otherwise check for common mistakes during construction to produce\n      // clear and early error messages.\n      !((typeof config === 'undefined' ? 'undefined' : _typeof(config)) === 'object') ? (0, _invariant2.default)(0, 'Must provide configuration object.') : void 0;\n      !(!config.types || Array.isArray(config.types)) ? (0, _invariant2.default)(0, '\"types\" must be Array if provided but got: ' + String(config.types) + '.') : void 0;\n      !(!config.directives || Array.isArray(config.directives)) ? (0, _invariant2.default)(0, '\"directives\" must be Array if provided but got: ' + (String(config.directives) + '.')) : void 0;\n      !(!config.allowedLegacyNames || Array.isArray(config.allowedLegacyNames)) ? (0, _invariant2.default)(0, '\"allowedLegacyNames\" must be Array if provided but got: ' + (String(config.allowedLegacyNames) + '.')) : void 0;\n    }\n\n    this.__allowedLegacyNames = config.allowedLegacyNames;\n    this._queryType = config.query;\n    this._mutationType = config.mutation;\n    this._subscriptionType = config.subscription;\n    // Provide specified directives (e.g. @include and @skip) by default.\n    this._directives = config.directives || _directives.specifiedDirectives;\n    this.astNode = config.astNode;\n\n    // Build type map now to detect any errors within this schema.\n    var initialTypes = [this.getQueryType(), this.getMutationType(), this.getSubscriptionType(), _introspection.__Schema];\n\n    var types = config.types;\n    if (types) {\n      initialTypes = initialTypes.concat(types);\n    }\n\n    // Keep track of all types referenced within the schema.\n    var typeMap = Object.create(null);\n\n    // First by deeply visiting all initial types.\n    typeMap = initialTypes.reduce(typeMapReducer, typeMap);\n\n    // Then by deeply visiting all directive types.\n    typeMap = this._directives.reduce(typeMapDirectiveReducer, typeMap);\n\n    // Storing the resulting map for reference by the schema.\n    this._typeMap = typeMap;\n\n    // Keep track of all implementations by interface name.\n    this._implementations = Object.create(null);\n    Object.keys(this._typeMap).forEach(function (typeName) {\n      var type = _this._typeMap[typeName];\n      if ((0, _definition.isObjectType)(type)) {\n        type.getInterfaces().forEach(function (iface) {\n          if ((0, _definition.isInterfaceType)(iface)) {\n            var impls = _this._implementations[iface.name];\n            if (impls) {\n              impls.push(type);\n            } else {\n              _this._implementations[iface.name] = [type];\n            }\n          }\n        });\n      }\n    });\n  }\n  // Referenced by validateSchema().\n\n\n  GraphQLSchema.prototype.getQueryType = function getQueryType() {\n    return this._queryType;\n  };\n\n  GraphQLSchema.prototype.getMutationType = function getMutationType() {\n    return this._mutationType;\n  };\n\n  GraphQLSchema.prototype.getSubscriptionType = function getSubscriptionType() {\n    return this._subscriptionType;\n  };\n\n  GraphQLSchema.prototype.getTypeMap = function getTypeMap() {\n    return this._typeMap;\n  };\n\n  GraphQLSchema.prototype.getType = function getType(name) {\n    return this.getTypeMap()[name];\n  };\n\n  GraphQLSchema.prototype.getPossibleTypes = function getPossibleTypes(abstractType) {\n    if ((0, _definition.isUnionType)(abstractType)) {\n      return abstractType.getTypes();\n    }\n    return this._implementations[abstractType.name];\n  };\n\n  GraphQLSchema.prototype.isPossibleType = function isPossibleType(abstractType, possibleType) {\n    var possibleTypeMap = this._possibleTypeMap;\n    if (!possibleTypeMap) {\n      this._possibleTypeMap = possibleTypeMap = Object.create(null);\n    }\n\n    if (!possibleTypeMap[abstractType.name]) {\n      var possibleTypes = this.getPossibleTypes(abstractType);\n      !Array.isArray(possibleTypes) ? (0, _invariant2.default)(0, 'Could not find possible implementing types for ' + abstractType.name + ' ' + 'in schema. Check that schema.types is defined and is an array of ' + 'all possible types in the schema.') : void 0;\n      possibleTypeMap[abstractType.name] = possibleTypes.reduce(function (map, type) {\n        return map[type.name] = true, map;\n      }, Object.create(null));\n    }\n\n    return Boolean(possibleTypeMap[abstractType.name][possibleType.name]);\n  };\n\n  GraphQLSchema.prototype.getDirectives = function getDirectives() {\n    return this._directives;\n  };\n\n  GraphQLSchema.prototype.getDirective = function getDirective(name) {\n    return (0, _find2.default)(this.getDirectives(), function (directive) {\n      return directive.name === name;\n    });\n  };\n\n  return GraphQLSchema;\n}();\n\nfunction typeMapReducer(map, type) {\n  if (!type) {\n    return map;\n  }\n  if ((0, _definition.isWrappingType)(type)) {\n    return typeMapReducer(map, type.ofType);\n  }\n  if (map[type.name]) {\n    !(map[type.name] === type) ? (0, _invariant2.default)(0, 'Schema must contain unique named types but contains multiple ' + ('types named \"' + type.name + '\".')) : void 0;\n    return map;\n  }\n  map[type.name] = type;\n\n  var reducedMap = map;\n\n  if ((0, _definition.isUnionType)(type)) {\n    reducedMap = type.getTypes().reduce(typeMapReducer, reducedMap);\n  }\n\n  if ((0, _definition.isObjectType)(type)) {\n    reducedMap = type.getInterfaces().reduce(typeMapReducer, reducedMap);\n  }\n\n  if ((0, _definition.isObjectType)(type) || (0, _definition.isInterfaceType)(type)) {\n    (0, _objectValues2.default)(type.getFields()).forEach(function (field) {\n      if (field.args) {\n        var fieldArgTypes = field.args.map(function (arg) {\n          return arg.type;\n        });\n        reducedMap = fieldArgTypes.reduce(typeMapReducer, reducedMap);\n      }\n      reducedMap = typeMapReducer(reducedMap, field.type);\n    });\n  }\n\n  if ((0, _definition.isInputObjectType)(type)) {\n    (0, _objectValues2.default)(type.getFields()).forEach(function (field) {\n      reducedMap = typeMapReducer(reducedMap, field.type);\n    });\n  }\n\n  return reducedMap;\n}\n\nfunction typeMapDirectiveReducer(map, directive) {\n  // Directives are not validated until validateSchema() is called.\n  if (!(0, _directives.isDirective)(directive)) {\n    return map;\n  }\n  return directive.args.reduce(function (_map, arg) {\n    return typeMapReducer(_map, arg.type);\n  }, map);\n}\n};"],
"names":["shadow$provide","global","process","require","module","exports","Object","defineProperty","value","GraphQLSchema","undefined","_typeof","Symbol","iterator","obj","constructor","prototype","isSchema","_definition","_directives","_introspection","_find","_find2","_interopRequireDefault","_instanceOf","_instanceOf2","_invariant","_invariant2","_objectValues","_objectValues2","__esModule","default","_classCallCheck","instance","Constructor","TypeError","schema","config","_this","assumeValid","__validationErrors","types","Array","isArray","String","directives","allowedLegacyNames","__allowedLegacyNames","_queryType","query","_mutationType","mutation","_subscriptionType","subscription","specifiedDirectives","astNode","initialTypes","getQueryType","getMutationType","getSubscriptionType","__Schema","concat","typeMap","create","reduce","typeMapReducer","typeMapDirectiveReducer","_typeMap","_implementations","keys","forEach","typeName","type","isObjectType","getInterfaces","iface","isInterfaceType","impls","name","push","GraphQLSchema.prototype.getQueryType","GraphQLSchema.prototype.getMutationType","GraphQLSchema.prototype.getSubscriptionType","getTypeMap","GraphQLSchema.prototype.getTypeMap","getType","GraphQLSchema.prototype.getType","getPossibleTypes","GraphQLSchema.prototype.getPossibleTypes","abstractType","isUnionType","getTypes","isPossibleType","GraphQLSchema.prototype.isPossibleType","possibleType","possibleTypeMap","_possibleTypeMap","possibleTypes","map","Boolean","getDirectives","GraphQLSchema.prototype.getDirectives","getDirective","GraphQLSchema.prototype.getDirective","directive","isWrappingType","ofType","reducedMap","getFields","field","args","fieldArgTypes","arg","isInputObjectType","isDirective","_map"]
}
