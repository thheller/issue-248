{
"version":3,
"file":"module$node_modules$graphql$jsutils$promiseReduce.js",
"lineCount":17,
"mappings":"AAAAA,cAAA,CAAe,mDAAf,CAAA,GAAsE,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,OAAhB,EAAwBC,MAAxB,EAA+BC,OAA/B,CAAwC;AAGtHC,QAAAC,eAAA,CAAsBF,OAAtB,EAA+B,YAA/B,EAA6C,CAC3CG,MAAO,IADoC,CAA7C,CAAA;AAGAH,SAAAI,QAAA,GAAkBC,aAAlB;AAEA,MAAIC,aAAaR,OAAA,CAAQ,+CAAR,CAAjB;AAEA,MAAIS,cAAcC,sBAAA,CAAuBF,UAAvB,CAAlB;AAEAE,UAASA,uBAAsB,CAACC,GAAD,CAAM;AAAE,WAAOA,GAAA,IAAOA,GAAAC,WAAP,GAAwBD,GAAxB,GAA8B,CAAEL,QAASK,GAAX,CAArC;AAAF;AASrCJ,UAASA,cAAa,CAACM,MAAD,EAASC,QAAT,EAAmBC,YAAnB,CAAiC;AACrD,WAAOF,MAAAG,OAAA,CAAc,QAAS,CAACC,QAAD,EAAWZ,KAAX,CAAkB;AAC9C,aAAO,CAAC,CAAA,EAAGI,WAAAH,QAAJ,EAAyBW,QAAzB,CAAA,GAAqCA,QAAAC,KAAA,CAAc,QAAS,CAACC,QAAD,CAAW;AAC5E,eAAOL,QAAA,CAASK,QAAT,EAAmBd,KAAnB,CAAP;AAD4E,OAAlC,CAArC,GAEFS,QAAA,CAASG,QAAT,EAAmBZ,KAAnB,CAFL;AAD8C,KAAzC,EAIJU,YAJI,CAAP;AADqD;AArB+D,CAAtH;;",
"sources":["node_modules/graphql/jsutils/promiseReduce.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$jsutils$promiseReduce\"] = function(global,process,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = promiseReduce;\n\nvar _isPromise = require('./isPromise');\n\nvar _isPromise2 = _interopRequireDefault(_isPromise);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Similar to Array.prototype.reduce(), however the reducing callback may return\n * a Promise, in which case reduction will continue after each promise resolves.\n *\n * If the callback does not return a Promise, then this function will also not\n * return a Promise.\n */\nfunction promiseReduce(values, callback, initialValue) {\n  return values.reduce(function (previous, value) {\n    return (0, _isPromise2.default)(previous) ? previous.then(function (resolved) {\n      return callback(resolved, value);\n    }) : callback(previous, value);\n  }, initialValue);\n} /**\n   * Copyright (c) 2015-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   *  strict\n   */\n};"],
"names":["shadow$provide","global","process","require","module","exports","Object","defineProperty","value","default","promiseReduce","_isPromise","_isPromise2","_interopRequireDefault","obj","__esModule","values","callback","initialValue","reduce","previous","then","resolved"]
}
