{
"version":3,
"file":"module$node_modules$graphql$validation$validate.js",
"lineCount":31,
"mappings":"AAAAA,cAAA,CAAe,iDAAf,CAAA,GAAoE,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,OAAhB,EAAwBC,MAAxB,EAA+BC,OAA/B,CAAwC;AAGpHC,QAAAC,eAAA,CAAsBF,OAAtB,EAA+B,YAA/B,EAA6C,CAC3CG,MAAO,IADoC,CAA7C,CAAA;AAGAH,SAAAI,SAAA,GAAmBA,QAAnB;AAEA,MAAIC,aAAaP,OAAA,CAAQ,+CAAR,CAAjB;AAEA,MAAIQ,cAAcC,sBAAA,CAAuBF,UAAvB,CAAlB;AAEA,MAAIG,SAASV,OAAA,CAAQ,yCAAR,CAAb;AAEA,MAAIW,WAAWX,OAAA,CAAQ,8CAAR,CAAf;AAEA,MAAIY,UAAUZ,OAAA,CAAQ,yCAAR,CAAd;AAEA,MAAIa,YAAYb,OAAA,CAAQ,2CAAR,CAAhB;AAEA,MAAIc,YAAYd,OAAA,CAAQ,gDAAR,CAAhB;AAEA,MAAIe,kBAAkBf,OAAA,CAAQ,uDAAR,CAAtB;AAEA,MAAIgB,qBAAqBhB,OAAA,CAAQ,0DAAR,CAAzB;AAEA,MAAIiB,sBAAsBR,sBAAA,CAAuBO,kBAAvB,CAA1B;AAEAP,UAASA,uBAAsB,CAACS,GAAD,CAAM;AAAE,WAAOA,GAAA,IAAOA,GAAAC,WAAP,GAAwBD,GAAxB,GAA8B,CAAEE,QAASF,GAAX,CAArC;AAAF;AA2BrCZ,UAASA,SAAQ,CAACe,MAAD,EAASC,GAAT,EAAcC,KAAd,EAAqBC,QAArB,CAA+B;AAC9C,KAACF,GAAD,GAAO,CAAC,CAAA,EAAGd,WAAAY,QAAJ,EAAyB,CAAzB,EAA4B,uBAA5B,CAAP,GAA8D,IAAK,EAAnE;AAEA,KAAC,CAAA,EAAGP,SAAAY,kBAAJ,EAAiCJ,MAAjC,CAAA;AACA,WAAOK,eAAA,CAAgBL,MAAhB,EAAwBG,QAAxB,IAAoC,IAAIV,SAAAa,SAAJ,CAAuBN,MAAvB,CAApC,EAAoEC,GAApE,EAAyEC,KAAzE,IAAkFR,eAAAa,eAAlF,CAAP;AAJ8C;AAahDF,UAASA,gBAAe,CAACL,MAAD,EAASG,QAAT,EAAmBK,WAAnB,EAAgCN,KAAhC,CAAuC;AAC7D,QAAIO,UAAU,IAAIb,mBAAAG,QAAJ,CAAgCC,MAAhC,EAAwCQ,WAAxC,EAAqDL,QAArD,CAAd;AACA,QAAIO,WAAWR,KAAAS,IAAA,CAAU,QAAS,CAACC,IAAD,CAAO;AACvC,aAAOA,IAAA,CAAKH,OAAL,CAAP;AADuC,KAA1B,CAAf;AAIA,KAAC,CAAA,EAAGnB,QAAAuB,MAAJ,EAAoBL,WAApB,EAAiC,CAAC,CAAA,EAAGlB,QAAAwB,kBAAJ,EAAgCX,QAAhC,EAA0C,CAAC,CAAA,EAAGb,QAAAyB,gBAAJ,EAA8BL,QAA9B,CAA1C,CAAjC,CAAA;AACA,WAAOD,OAAAO,UAAA,EAAP;AAP6D;AApEqD,CAApH;;",
"sources":["node_modules/graphql/validation/validate.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$validation$validate\"] = function(global,process,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validate = validate;\n\nvar _invariant = require('../jsutils/invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _error = require('../error');\n\nvar _visitor = require('../language/visitor');\n\nvar _schema = require('../type/schema');\n\nvar _validate = require('../type/validate');\n\nvar _TypeInfo = require('../utilities/TypeInfo');\n\nvar _specifiedRules = require('./specifiedRules');\n\nvar _ValidationContext = require('./ValidationContext');\n\nvar _ValidationContext2 = _interopRequireDefault(_ValidationContext);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Implements the \"Validation\" section of the spec.\n *\n * Validation runs synchronously, returning an array of encountered errors, or\n * an empty array if no errors were encountered and the document is valid.\n *\n * A list of specific validation rules may be provided. If not provided, the\n * default list of rules defined by the GraphQL specification will be used.\n *\n * Each validation rules is a function which returns a visitor\n * (see the language/visitor API). Visitor methods are expected to return\n * GraphQLErrors, or Arrays of GraphQLErrors when invalid.\n *\n * Optionally a custom TypeInfo instance may be provided. If not provided, one\n * will be created from the provided schema.\n */\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nfunction validate(schema, ast, rules, typeInfo) {\n  !ast ? (0, _invariant2.default)(0, 'Must provide document') : void 0;\n  // If the schema used for validation is invalid, throw an error.\n  (0, _validate.assertValidSchema)(schema);\n  return visitUsingRules(schema, typeInfo || new _TypeInfo.TypeInfo(schema), ast, rules || _specifiedRules.specifiedRules);\n}\n\n/**\n * This uses a specialized visitor which runs multiple visitors in parallel,\n * while maintaining the visitor skip and break API.\n *\n * @internal\n */\nfunction visitUsingRules(schema, typeInfo, documentAST, rules) {\n  var context = new _ValidationContext2.default(schema, documentAST, typeInfo);\n  var visitors = rules.map(function (rule) {\n    return rule(context);\n  });\n  // Visit the whole document with each instance of all provided rules.\n  (0, _visitor.visit)(documentAST, (0, _visitor.visitWithTypeInfo)(typeInfo, (0, _visitor.visitInParallel)(visitors)));\n  return context.getErrors();\n}\n};"],
"names":["shadow$provide","global","process","require","module","exports","Object","defineProperty","value","validate","_invariant","_invariant2","_interopRequireDefault","_error","_visitor","_schema","_validate","_TypeInfo","_specifiedRules","_ValidationContext","_ValidationContext2","obj","__esModule","default","schema","ast","rules","typeInfo","assertValidSchema","visitUsingRules","TypeInfo","specifiedRules","documentAST","context","visitors","map","rule","visit","visitWithTypeInfo","visitInParallel","getErrors"]
}
