{
"version":3,
"file":"module$node_modules$graphql$validation$rules$KnownFragmentNames.js",
"lineCount":19,
"mappings":"AAAAA,cAAA,CAAe,iEAAf,CAAA,GAAoF,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,OAAhB,EAAwBC,MAAxB,EAA+BC,OAA/B,CAAwC;AAGpIC,QAAAC,eAAA,CAAsBF,OAAtB,EAA+B,YAA/B,EAA6C,CAC3CG,MAAO,IADoC,CAA7C,CAAA;AAGAH,SAAAI,uBAAA,GAAiCA,sBAAjC;AACAJ,SAAAK,mBAAA,GAA6BA,kBAA7B;AAEA,MAAIC,SAASR,OAAA,CAAQ,yCAAR,CAAb;AAWAM,UAASA,uBAAsB,CAACG,QAAD,CAAW;AACxC,WAAO,oBAAP,GAA8BA,QAA9B,GAAyC,IAAzC;AADwC;AAU1CF,UAASA,mBAAkB,CAACG,OAAD,CAAU;AACnC,WAAO,CACLC,eAAgBA,QAASA,eAAc,CAACC,IAAD,CAAO;AAC5C,UAAIC,eAAeD,IAAAE,KAAAT,MAAnB;AACA,UAAIU,WAAWL,OAAAM,YAAA,CAAoBH,YAApB,CAAf;AACA,UAAI,CAACE,QAAL;AACEL,eAAAO,YAAA,CAAoB,IAAIT,MAAAU,aAAJ,CAAwBZ,sBAAA,CAAuBO,YAAvB,CAAxB,EAA8D,CAACD,IAAAE,KAAD,CAA9D,CAApB,CAAA;AADF;AAH4C,KADzC,CAAP;AADmC;AA9B+F,CAApI;;",
"sources":["node_modules/graphql/validation/rules/KnownFragmentNames.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$validation$rules$KnownFragmentNames\"] = function(global,process,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.unknownFragmentMessage = unknownFragmentMessage;\nexports.KnownFragmentNames = KnownFragmentNames;\n\nvar _error = require('../../error');\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nfunction unknownFragmentMessage(fragName) {\n  return 'Unknown fragment \"' + fragName + '\".';\n}\n\n/**\n * Known fragment names\n *\n * A GraphQL document is only valid if all `...Fragment` fragment spreads refer\n * to fragments defined in the same document.\n */\nfunction KnownFragmentNames(context) {\n  return {\n    FragmentSpread: function FragmentSpread(node) {\n      var fragmentName = node.name.value;\n      var fragment = context.getFragment(fragmentName);\n      if (!fragment) {\n        context.reportError(new _error.GraphQLError(unknownFragmentMessage(fragmentName), [node.name]));\n      }\n    }\n  };\n}\n};"],
"names":["shadow$provide","global","process","require","module","exports","Object","defineProperty","value","unknownFragmentMessage","KnownFragmentNames","_error","fragName","context","FragmentSpread","node","fragmentName","name","fragment","getFragment","reportError","GraphQLError"]
}
