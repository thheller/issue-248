{
"version":3,
"file":"module$node_modules$graphql$validation$rules$ValuesOfCorrectType.js",
"lineCount":116,
"mappings":"AAAAA,cAAA,CAAe,kEAAf,CAAA,GAAqF,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,OAAhB,EAAwBC,MAAxB,EAA+BC,OAA/B,CAAwC;AAGrIC,QAAAC,eAAA,CAAsBF,OAAtB,EAA+B,YAA/B,EAA6C,CAC3CG,MAAO,IADoC,CAA7C,CAAA;AAGAH,SAAAI,gBAAA,GAA0BA,eAA1B;AACAJ,SAAAK,qBAAA,GAA+BA,oBAA/B;AACAL,SAAAM,oBAAA,GAA8BA,mBAA9B;AACAN,SAAAO,oBAAA,GAA8BA,mBAA9B;AAEA,MAAIC,SAASV,OAAA,CAAQ,yCAAR,CAAb;AAEA,MAAIW,WAAWX,OAAA,CAAQ,8CAAR,CAAf;AAEA,MAAIY,cAAcZ,OAAA,CAAQ,6CAAR,CAAlB;AAEA,MAAIa,aAAab,OAAA,CAAQ,+CAAR,CAAjB;AAEA,MAAIc,cAAcC,sBAAA,CAAuBF,UAAvB,CAAlB;AAEA,MAAIG,UAAUhB,OAAA,CAAQ,4CAAR,CAAd;AAEA,MAAIiB,WAAWF,sBAAA,CAAuBC,OAAvB,CAAf;AAEA,MAAIE,UAAUlB,OAAA,CAAQ,4CAAR,CAAd;AAEA,MAAImB,WAAWJ,sBAAA,CAAuBG,OAAvB,CAAf;AAEA,MAAIE,kBAAkBpB,OAAA,CAAQ,oDAAR,CAAtB;AAEA,MAAIqB,mBAAmBN,sBAAA,CAAuBK,eAAvB,CAAvB;AAEAL,UAASA,uBAAsB,CAACO,GAAD,CAAM;AAAE,WAAOA,GAAA,IAAOA,GAAAC,WAAP,GAAwBD,GAAxB,GAA8B,CAAEE,QAASF,GAAX,CAArC;AAAF;AAWrChB,UAASA,gBAAe,CAACmB,QAAD,EAAWC,SAAX,EAAsBC,OAAtB,CAA+B;AACrD,WAAO,gBAAP,GAA0BF,QAA1B,GAAqC,UAArC,GAAkDC,SAAlD,IAA+DC,OAAA,GAAU,IAAV,GAAiBA,OAAjB,GAA2B,GAA1F;AADqD;AAIvDpB,UAASA,qBAAoB,CAACkB,QAAD,EAAWG,SAAX,EAAsBC,aAAtB,CAAqC;AAChE,WAAO,QAAP,GAAkBJ,QAAlB,GAA6B,GAA7B,GAAmCG,SAAnC,GAA+C,oBAA/C,IAAuEC,aAAvE,GAAuF,oBAAvF;AADgE;AAIlErB,UAASA,oBAAmB,CAACiB,QAAD,EAAWG,SAAX,EAAsBD,OAAtB,CAA+B;AACzD,WAAO,SAAP,GAAmBC,SAAnB,GAA+B,2BAA/B,GAA6DH,QAA7D,IAAyEE,OAAA,GAAU,IAAV,GAAiBA,OAAjB,GAA2B,GAApG;AADyD;AAU3DlB,UAASA,oBAAmB,CAACqB,OAAD,CAAU;AACpC,WAAO,CACLC,UAAWA,QAASA,UAAS,CAACC,IAAD,CAAO;AAClC,UAAIC,OAAOH,OAAAI,aAAA,EAAX;AACA,UAAI,CAAC,CAAA,EAAGtB,WAAAuB,cAAJ,EAA+BF,IAA/B,CAAJ;AACEH,eAAAM,YAAA,CAAoB,IAAI1B,MAAA2B,aAAJ,CAAwB/B,eAAA,CAAgBgC,MAAA,CAAOL,IAAP,CAAhB,EAA8B,CAAC,CAAA,EAAGtB,QAAA4B,MAAJ,EAAoBP,IAApB,CAA9B,CAAxB,EAAkFA,IAAlF,CAApB,CAAA;AADF;AAFkC,KAD/B,EAOLQ,UAAWA,QAASA,UAAS,CAACR,IAAD,CAAO;AAGlC,UAAIC,OAAO,CAAC,CAAA,EAAGrB,WAAA6B,gBAAJ,EAAiCX,OAAAY,mBAAA,EAAjC,CAAX;AACA,UAAI,CAAC,CAAC,CAAA,EAAG9B,WAAA+B,WAAJ,EAA4BV,IAA5B,CAAL,CAAwC;AACtCW,qBAAA,CAAcd,OAAd,EAAuBE,IAAvB,CAAA;AACA,eAAO,KAAP;AAFsC;AAJN,KAP/B,EAgBLa,YAAaA,QAASA,YAAW,CAACb,IAAD,CAAO;AACtC,UAAIC,OAAO,CAAC,CAAA,EAAGrB,WAAAkC,aAAJ,EAA8BhB,OAAAI,aAAA,EAA9B,CAAX;AACA,UAAI,CAAC,CAAC,CAAA,EAAGtB,WAAAmC,kBAAJ,EAAmCd,IAAnC,CAAL,CAA+C;AAC7CW,qBAAA,CAAcd,OAAd,EAAuBE,IAAvB,CAAA;AACA,eAAO,KAAP;AAF6C;AAK/C,UAAIgB,cAAcf,IAAAgB,UAAA,EAAlB;AACA,UAAIC,eAAe,CAAC,CAAA,EAAGjC,QAAAO,QAAJ,EAAsBQ,IAAAmB,OAAtB,EAAmC,QAAS,CAACC,KAAD,CAAQ;AACrE,eAAOA,KAAAC,KAAAhD,MAAP;AADqE,OAApD,CAAnB;AAGAF,YAAAmD,KAAA,CAAYN,WAAZ,CAAAO,QAAA,CAAiC,QAAS,CAAC3B,SAAD,CAAY;AACpD,YAAI4B,YAAYR,WAAA,CAAYpB,SAAZ,CAAAK,KAAhB;AACA,YAAIwB,YAAYP,YAAA,CAAatB,SAAb,CAAhB;AACA,YAAI,CAAC6B,SAAL,IAAkB,CAAC,CAAA,EAAG7C,WAAAuB,cAAJ,EAA+BqB,SAA/B,CAAlB;AACE1B,iBAAAM,YAAA,CAAoB,IAAI1B,MAAA2B,aAAJ,CAAwB9B,oBAAA,CAAqB0B,IAAAoB,KAArB,EAAgCzB,SAAhC,EAA2CU,MAAA,CAAOkB,SAAP,CAA3C,CAAxB,EAAuFxB,IAAvF,CAApB,CAAA;AADF;AAHoD,OAAtD,CAAA;AAXsC,KAhBnC,EAmCL0B,YAAaA,QAASA,YAAW,CAAC1B,IAAD,CAAO;AACtC,UAAI2B,aAAa,CAAC,CAAA,EAAG/C,WAAAkC,aAAJ,EAA8BhB,OAAAY,mBAAA,EAA9B,CAAjB;AACA,UAAIc,YAAY1B,OAAAI,aAAA,EAAhB;AACA,UAAI,CAACsB,SAAL,IAAkB,CAAC,CAAA,EAAG5C,WAAAmC,kBAAJ,EAAmCY,UAAnC,CAAlB,CAAkE;AAChE,YAAIC,cAAc,CAAC,CAAA,EAAGvC,gBAAAG,QAAJ,EAA8BQ,IAAAqB,KAAAhD,MAA9B,EAA+CF,MAAAmD,KAAA,CAAYK,UAAAV,UAAA,EAAZ,CAA/C,CAAlB;AACA,YAAIY,aAAaD,WAAAE,OAAA,KAAuB,CAAvB,GAA2B,eAA3B,GAA6C,CAAC,CAAA,EAAG3C,QAAAK,QAAJ,EAAsBoC,WAAtB,CAA7C,GAAkF,GAAlF,GAAwFG,SAAzG;AACAjC,eAAAM,YAAA,CAAoB,IAAI1B,MAAA2B,aAAJ,CAAwB7B,mBAAA,CAAoBmD,UAAAN,KAApB,EAAqCrB,IAAAqB,KAAAhD,MAArC,EAAsDwD,UAAtD,CAAxB,EAA2F7B,IAA3F,CAApB,CAAA;AAHgE;AAH5B,KAnCnC,EA4CLgC,UAAWA,QAASA,UAAS,CAAChC,IAAD,CAAO;AAClC,UAAIC,OAAO,CAAC,CAAA,EAAGrB,WAAAkC,aAAJ,EAA8BhB,OAAAI,aAAA,EAA9B,CAAX;AACA,UAAI,CAAC,CAAC,CAAA,EAAGtB,WAAAqD,WAAJ,EAA4BhC,IAA5B,CAAL;AACEW,qBAAA,CAAcd,OAAd,EAAuBE,IAAvB,CAAA;AADF;AAEO,YAAI,CAACC,IAAAiC,SAAA,CAAclC,IAAA3B,MAAd,CAAL;AACLyB,iBAAAM,YAAA,CAAoB,IAAI1B,MAAA2B,aAAJ,CAAwB/B,eAAA,CAAgB2B,IAAAoB,KAAhB,EAA2B,CAAC,CAAA,EAAG1C,QAAA4B,MAAJ,EAAoBP,IAApB,CAA3B,EAAsDmC,kBAAA,CAAmBlC,IAAnB,EAAyBD,IAAzB,CAAtD,CAAxB,EAA+GA,IAA/G,CAApB,CAAA;AADK;AAFP;AAFkC,KA5C/B,EAqDLoC,SAAUA,QAASA,SAAQ,CAACpC,IAAD,CAAO;AAChC,aAAOY,aAAA,CAAcd,OAAd,EAAuBE,IAAvB,CAAP;AADgC,KArD7B,EAwDLqC,WAAYA,QAASA,WAAU,CAACrC,IAAD,CAAO;AACpC,aAAOY,aAAA,CAAcd,OAAd,EAAuBE,IAAvB,CAAP;AADoC,KAxDjC,EA2DLsC,YAAaA,QAASA,YAAW,CAACtC,IAAD,CAAO;AACtC,aAAOY,aAAA,CAAcd,OAAd,EAAuBE,IAAvB,CAAP;AADsC,KA3DnC,EA8DLuC,aAAcA,QAASA,aAAY,CAACvC,IAAD,CAAO;AACxC,aAAOY,aAAA,CAAcd,OAAd,EAAuBE,IAAvB,CAAP;AADwC,KA9DrC,CAAP;AADoC;AAyEtCY,UAASA,cAAa,CAACd,OAAD,EAAUE,IAAV,CAAgB;AAEpC,QAAIwC,eAAe1C,OAAAI,aAAA,EAAnB;AACA,QAAI,CAACsC,YAAL;AACE;AADF;AAIA,QAAIvC,OAAO,CAAC,CAAA,EAAGrB,WAAAkC,aAAJ,EAA8B0B,YAA9B,CAAX;AAEA,QAAI,CAAC,CAAC,CAAA,EAAG5D,WAAA6D,aAAJ,EAA8BxC,IAA9B,CAAL,CAA0C;AACxCH,aAAAM,YAAA,CAAoB,IAAI1B,MAAA2B,aAAJ,CAAwB/B,eAAA,CAAgBgC,MAAA,CAAOkC,YAAP,CAAhB,EAAsC,CAAC,CAAA,EAAG7D,QAAA4B,MAAJ,EAAoBP,IAApB,CAAtC,EAAiEmC,kBAAA,CAAmBlC,IAAnB,EAAyBD,IAAzB,CAAjE,CAAxB,EAA0HA,IAA1H,CAApB,CAAA;AACA;AAFwC;AAO1C,OAAI;AACF,UAAI0C,cAAczC,IAAA0C,aAAA,CAAkB3C,IAAlB,EAAwB+B,SAAxB,CAAlB;AACA,UAAI,CAAC,CAAA,EAAGjD,WAAAU,QAAJ,EAAyBkD,WAAzB,CAAJ;AACE5C,eAAAM,YAAA,CAAoB,IAAI1B,MAAA2B,aAAJ,CAAwB/B,eAAA,CAAgBgC,MAAA,CAAOkC,YAAP,CAAhB,EAAsC,CAAC,CAAA,EAAG7D,QAAA4B,MAAJ,EAAoBP,IAApB,CAAtC,CAAxB,EAA0FA,IAA1F,CAApB,CAAA;AADF;AAFE,KAKF,QAAO4C,KAAP,CAAc;AAEd9C,aAAAM,YAAA,CAAoB,IAAI1B,MAAA2B,aAAJ,CAAwB/B,eAAA,CAAgBgC,MAAA,CAAOkC,YAAP,CAAhB,EAAsC,CAAC,CAAA,EAAG7D,QAAA4B,MAAJ,EAAoBP,IAApB,CAAtC,EAAiE4C,KAAAjD,QAAjE,CAAxB,EAAyGK,IAAzG,EAA+G+B,SAA/G,EAA0HA,SAA1H,EAAqIA,SAArI,EAAgJa,KAAhJ,CAApB,CAAA;AAFc;AArBoB;AA2BtCT,UAASA,mBAAkB,CAAClC,IAAD,EAAOD,IAAP,CAAa;AACtC,QAAI,CAAC,CAAA,EAAGpB,WAAAqD,WAAJ,EAA4BhC,IAA5B,CAAJ,CAAuC;AACrC,UAAI2B,cAAc,CAAC,CAAA,EAAGvC,gBAAAG,QAAJ,EAA8B,CAAC,CAAA,EAAGb,QAAA4B,MAAJ,EAAoBP,IAApB,CAA9B,EAAyDC,IAAA4C,UAAA,EAAAC,IAAA,CAAqB,QAAS,CAACzE,KAAD,CAAQ;AAC/G,eAAOA,KAAAgD,KAAP;AAD+G,OAAtC,CAAzD,CAAlB;AAGA,UAAIO,WAAAE,OAAJ,KAA2B,CAA3B;AACE,eAAO,8BAAP,GAAwC,CAAC,CAAA,EAAG3C,QAAAK,QAAJ,EAAsBoC,WAAtB,CAAxC,GAA6E,GAA7E;AADF;AAJqC;AADD;AAlK6F,CAArI;;",
"sources":["node_modules/graphql/validation/rules/ValuesOfCorrectType.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$validation$rules$ValuesOfCorrectType\"] = function(global,process,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.badValueMessage = badValueMessage;\nexports.requiredFieldMessage = requiredFieldMessage;\nexports.unknownFieldMessage = unknownFieldMessage;\nexports.ValuesOfCorrectType = ValuesOfCorrectType;\n\nvar _error = require('../../error');\n\nvar _printer = require('../../language/printer');\n\nvar _definition = require('../../type/definition');\n\nvar _isInvalid = require('../../jsutils/isInvalid');\n\nvar _isInvalid2 = _interopRequireDefault(_isInvalid);\n\nvar _keyMap = require('../../jsutils/keyMap');\n\nvar _keyMap2 = _interopRequireDefault(_keyMap);\n\nvar _orList = require('../../jsutils/orList');\n\nvar _orList2 = _interopRequireDefault(_orList);\n\nvar _suggestionList = require('../../jsutils/suggestionList');\n\nvar _suggestionList2 = _interopRequireDefault(_suggestionList);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nfunction badValueMessage(typeName, valueName, message) {\n  return 'Expected type ' + typeName + ', found ' + valueName + (message ? '; ' + message : '.');\n}\n\nfunction requiredFieldMessage(typeName, fieldName, fieldTypeName) {\n  return 'Field ' + typeName + '.' + fieldName + ' of required type ' + (fieldTypeName + ' was not provided.');\n}\n\nfunction unknownFieldMessage(typeName, fieldName, message) {\n  return 'Field \"' + fieldName + '\" is not defined by type ' + typeName + (message ? '; ' + message : '.');\n}\n\n/**\n * Value literals of correct type\n *\n * A GraphQL document is only valid if all value literals are of the type\n * expected at their position.\n */\nfunction ValuesOfCorrectType(context) {\n  return {\n    NullValue: function NullValue(node) {\n      var type = context.getInputType();\n      if ((0, _definition.isNonNullType)(type)) {\n        context.reportError(new _error.GraphQLError(badValueMessage(String(type), (0, _printer.print)(node)), node));\n      }\n    },\n    ListValue: function ListValue(node) {\n      // Note: TypeInfo will traverse into a list's item type, so look to the\n      // parent input type to check if it is a list.\n      var type = (0, _definition.getNullableType)(context.getParentInputType());\n      if (!(0, _definition.isListType)(type)) {\n        isValidScalar(context, node);\n        return false; // Don't traverse further.\n      }\n    },\n    ObjectValue: function ObjectValue(node) {\n      var type = (0, _definition.getNamedType)(context.getInputType());\n      if (!(0, _definition.isInputObjectType)(type)) {\n        isValidScalar(context, node);\n        return false; // Don't traverse further.\n      }\n      // Ensure every required field exists.\n      var inputFields = type.getFields();\n      var fieldNodeMap = (0, _keyMap2.default)(node.fields, function (field) {\n        return field.name.value;\n      });\n      Object.keys(inputFields).forEach(function (fieldName) {\n        var fieldType = inputFields[fieldName].type;\n        var fieldNode = fieldNodeMap[fieldName];\n        if (!fieldNode && (0, _definition.isNonNullType)(fieldType)) {\n          context.reportError(new _error.GraphQLError(requiredFieldMessage(type.name, fieldName, String(fieldType)), node));\n        }\n      });\n    },\n    ObjectField: function ObjectField(node) {\n      var parentType = (0, _definition.getNamedType)(context.getParentInputType());\n      var fieldType = context.getInputType();\n      if (!fieldType && (0, _definition.isInputObjectType)(parentType)) {\n        var suggestions = (0, _suggestionList2.default)(node.name.value, Object.keys(parentType.getFields()));\n        var didYouMean = suggestions.length !== 0 ? 'Did you mean ' + (0, _orList2.default)(suggestions) + '?' : undefined;\n        context.reportError(new _error.GraphQLError(unknownFieldMessage(parentType.name, node.name.value, didYouMean), node));\n      }\n    },\n    EnumValue: function EnumValue(node) {\n      var type = (0, _definition.getNamedType)(context.getInputType());\n      if (!(0, _definition.isEnumType)(type)) {\n        isValidScalar(context, node);\n      } else if (!type.getValue(node.value)) {\n        context.reportError(new _error.GraphQLError(badValueMessage(type.name, (0, _printer.print)(node), enumTypeSuggestion(type, node)), node));\n      }\n    },\n\n    IntValue: function IntValue(node) {\n      return isValidScalar(context, node);\n    },\n    FloatValue: function FloatValue(node) {\n      return isValidScalar(context, node);\n    },\n    StringValue: function StringValue(node) {\n      return isValidScalar(context, node);\n    },\n    BooleanValue: function BooleanValue(node) {\n      return isValidScalar(context, node);\n    }\n  };\n}\n\n/**\n * Any value literal may be a valid representation of a Scalar, depending on\n * that scalar type.\n */\nfunction isValidScalar(context, node) {\n  // Report any error at the full type expected by the location.\n  var locationType = context.getInputType();\n  if (!locationType) {\n    return;\n  }\n\n  var type = (0, _definition.getNamedType)(locationType);\n\n  if (!(0, _definition.isScalarType)(type)) {\n    context.reportError(new _error.GraphQLError(badValueMessage(String(locationType), (0, _printer.print)(node), enumTypeSuggestion(type, node)), node));\n    return;\n  }\n\n  // Scalars determine if a literal value is valid via parseLiteral() which\n  // may throw or return an invalid value to indicate failure.\n  try {\n    var parseResult = type.parseLiteral(node, undefined /* variables */);\n    if ((0, _isInvalid2.default)(parseResult)) {\n      context.reportError(new _error.GraphQLError(badValueMessage(String(locationType), (0, _printer.print)(node)), node));\n    }\n  } catch (error) {\n    // Ensure a reference to the original error is maintained.\n    context.reportError(new _error.GraphQLError(badValueMessage(String(locationType), (0, _printer.print)(node), error.message), node, undefined, undefined, undefined, error));\n  }\n}\n\nfunction enumTypeSuggestion(type, node) {\n  if ((0, _definition.isEnumType)(type)) {\n    var suggestions = (0, _suggestionList2.default)((0, _printer.print)(node), type.getValues().map(function (value) {\n      return value.name;\n    }));\n    if (suggestions.length !== 0) {\n      return 'Did you mean the enum value ' + (0, _orList2.default)(suggestions) + '?';\n    }\n  }\n}\n};"],
"names":["shadow$provide","global","process","require","module","exports","Object","defineProperty","value","badValueMessage","requiredFieldMessage","unknownFieldMessage","ValuesOfCorrectType","_error","_printer","_definition","_isInvalid","_isInvalid2","_interopRequireDefault","_keyMap","_keyMap2","_orList","_orList2","_suggestionList","_suggestionList2","obj","__esModule","default","typeName","valueName","message","fieldName","fieldTypeName","context","NullValue","node","type","getInputType","isNonNullType","reportError","GraphQLError","String","print","ListValue","getNullableType","getParentInputType","isListType","isValidScalar","ObjectValue","getNamedType","isInputObjectType","inputFields","getFields","fieldNodeMap","fields","field","name","keys","forEach","fieldType","fieldNode","ObjectField","parentType","suggestions","didYouMean","length","undefined","EnumValue","isEnumType","getValue","enumTypeSuggestion","IntValue","FloatValue","StringValue","BooleanValue","locationType","isScalarType","parseResult","parseLiteral","error","getValues","map"]
}
