shadow$provide["module$node_modules$graphql$validation$rules$UniqueDirectivesPerLocation"] = function(global, process, require, module, exports) {
  Object.defineProperty(exports, "__esModule", {value:true});
  exports.duplicateDirectiveMessage = duplicateDirectiveMessage;
  exports.UniqueDirectivesPerLocation = UniqueDirectivesPerLocation;
  var _error = require("module$node_modules$graphql$error$index");
  function duplicateDirectiveMessage(directiveName) {
    return 'The directive "' + directiveName + '" can only be used once at ' + "this location.";
  }
  function UniqueDirectivesPerLocation(context) {
    return {enter:function enter(node) {
      var directives = node.directives;
      if (directives) {
        var knownDirectives = Object.create(null);
        directives.forEach(function(directive) {
          var directiveName = directive.name.value;
          if (knownDirectives[directiveName]) {
            context.reportError(new _error.GraphQLError(duplicateDirectiveMessage(directiveName), [knownDirectives[directiveName], directive]));
          } else {
            knownDirectives[directiveName] = directive;
          }
        });
      }
    }};
  }
};

//# sourceMappingURL=module$node_modules$graphql$validation$rules$UniqueDirectivesPerLocation.js.map
