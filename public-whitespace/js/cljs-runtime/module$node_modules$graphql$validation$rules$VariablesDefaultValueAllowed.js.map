{
"version":3,
"file":"module$node_modules$graphql$validation$rules$VariablesDefaultValueAllowed.js",
"lineCount":26,
"mappings":"AAAAA,cAAA,CAAe,2EAAf,CAAA,GAA8F,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,OAAhB,EAAwBC,MAAxB,EAA+BC,OAA/B,CAAwC;AAG9IC,QAAAC,eAAA,CAAsBF,OAAtB,EAA+B,YAA/B,EAA6C,CAC3CG,MAAO,IADoC,CAA7C,CAAA;AAGAH,SAAAI,6BAAA,GAAuCA,4BAAvC;AACAJ,SAAAK,6BAAA,GAAuCA,4BAAvC;AAEA,MAAIC,SAASR,OAAA,CAAQ,yCAAR,CAAb;AAEA,MAAIS,cAAcT,OAAA,CAAQ,6CAAR,CAAlB;AAEAM,UAASA,6BAA4B,CAACI,OAAD,EAAUC,IAAV,EAAgBC,SAAhB,CAA2B;AAC9D,WAAO,aAAP,GAAuBF,OAAvB,GAAiC,aAAjC,GAAiDG,MAAA,CAAOF,IAAP,CAAjD,GAAgE,oBAAhE,GAAuF,kCAAvF,IAA6H,iCAA7H,GAAiKE,MAAA,CAAOD,SAAP,CAAjK,GAAqL,IAArL;AAD8D;AAmBhEL,UAASA,6BAA4B,CAACO,OAAD,CAAU;AAC7C,WAAO,CACLC,mBAAoBA,QAASA,mBAAkB,CAACC,IAAD,CAAO;AACpD,UAAIC,OAAOD,IAAAE,SAAAD,KAAAZ,MAAX;AACA,UAAIc,eAAeH,IAAAG,aAAnB;AACA,UAAIR,OAAOG,OAAAM,aAAA,EAAX;AACA,UAAI,CAAC,CAAA,EAAGX,WAAAY,cAAJ,EAA+BV,IAA/B,CAAJ,IAA4CQ,YAA5C;AACEL,eAAAQ,YAAA,CAAoB,IAAId,MAAAe,aAAJ,CAAwBjB,4BAAA,CAA6BW,IAA7B,EAAmCN,IAAnC,EAAyCA,IAAAa,OAAzC,CAAxB,EAA+E,CAACL,YAAD,CAA/E,CAApB,CAAA;AADF;AAGA,aAAO,KAAP;AAPoD,KADjD,EAWLM,aAAcA,QAASA,aAAY,EAAG;AACpC,aAAO,KAAP;AADoC,KAXjC,EAcLC,mBAAoBA,QAASA,mBAAkB,EAAG;AAChD,aAAO,KAAP;AADgD,KAd7C,CAAP;AAD6C;AAhC+F,CAA9I;;",
"sources":["node_modules/graphql/validation/rules/VariablesDefaultValueAllowed.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$validation$rules$VariablesDefaultValueAllowed\"] = function(global,process,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.defaultForRequiredVarMessage = defaultForRequiredVarMessage;\nexports.VariablesDefaultValueAllowed = VariablesDefaultValueAllowed;\n\nvar _error = require('../../error');\n\nvar _definition = require('../../type/definition');\n\nfunction defaultForRequiredVarMessage(varName, type, guessType) {\n  return 'Variable \"$' + varName + '\" of type \"' + String(type) + '\" is required and ' + 'will not use the default value. ' + ('Perhaps you meant to use type \"' + String(guessType) + '\".');\n}\n\n/**\n * Variable's default value is allowed\n *\n * A GraphQL document is only valid if all variable default values are allowed\n * due to a variable not being required.\n */\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nfunction VariablesDefaultValueAllowed(context) {\n  return {\n    VariableDefinition: function VariableDefinition(node) {\n      var name = node.variable.name.value;\n      var defaultValue = node.defaultValue;\n      var type = context.getInputType();\n      if ((0, _definition.isNonNullType)(type) && defaultValue) {\n        context.reportError(new _error.GraphQLError(defaultForRequiredVarMessage(name, type, type.ofType), [defaultValue]));\n      }\n      return false; // Do not traverse further.\n    },\n\n    SelectionSet: function SelectionSet() {\n      return false;\n    },\n    FragmentDefinition: function FragmentDefinition() {\n      return false;\n    }\n  };\n}\n};"],
"names":["shadow$provide","global","process","require","module","exports","Object","defineProperty","value","defaultForRequiredVarMessage","VariablesDefaultValueAllowed","_error","_definition","varName","type","guessType","String","context","VariableDefinition","node","name","variable","defaultValue","getInputType","isNonNullType","reportError","GraphQLError","ofType","SelectionSet","FragmentDefinition"]
}
