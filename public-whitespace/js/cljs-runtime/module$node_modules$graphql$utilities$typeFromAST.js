shadow$provide["module$node_modules$graphql$utilities$typeFromAST"] = function(global, process, require, module, exports) {
  Object.defineProperty(exports, "__esModule", {value:true});
  exports.typeFromAST = typeFromAST;
  var _kinds = require("module$node_modules$graphql$language$kinds");
  var _definition = require("module$node_modules$graphql$type$definition");
  function typeFromAST(schema, typeNode) {
    var innerType = void 0;
    if (typeNode.kind === _kinds.Kind.LIST_TYPE) {
      innerType = typeFromAST(schema, typeNode.type);
      return innerType && (0, _definition.GraphQLList)(innerType);
    }
    if (typeNode.kind === _kinds.Kind.NON_NULL_TYPE) {
      innerType = typeFromAST(schema, typeNode.type);
      return innerType && (0, _definition.GraphQLNonNull)(innerType);
    }
    if (typeNode.kind === _kinds.Kind.NAMED_TYPE) {
      return schema.getType(typeNode.name.value);
    }
    throw new Error("Unexpected type kind: " + typeNode.kind + ".");
  }
};

//# sourceMappingURL=module$node_modules$graphql$utilities$typeFromAST.js.map
