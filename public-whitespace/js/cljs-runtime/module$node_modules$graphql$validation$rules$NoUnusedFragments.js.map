{
"version":3,
"file":"module$node_modules$graphql$validation$rules$NoUnusedFragments.js",
"lineCount":34,
"mappings":"AAAAA,cAAA,CAAe,gEAAf,CAAA,GAAmF,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,OAAhB,EAAwBC,MAAxB,EAA+BC,OAA/B,CAAwC;AAGnIC,QAAAC,eAAA,CAAsBF,OAAtB,EAA+B,YAA/B,EAA6C,CAC3CG,MAAO,IADoC,CAA7C,CAAA;AAGAH,SAAAI,kBAAA,GAA4BA,iBAA5B;AACAJ,SAAAK,kBAAA,GAA4BA,iBAA5B;AAEA,MAAIC,SAASR,OAAA,CAAQ,yCAAR,CAAb;AAWAM,UAASA,kBAAiB,CAACG,QAAD,CAAW;AACnC,WAAO,YAAP,GAAsBA,QAAtB,GAAiC,kBAAjC;AADmC;AAUrCF,UAASA,kBAAiB,CAACG,OAAD,CAAU;AAClC,QAAIC,gBAAgB,EAApB;AACA,QAAIC,eAAe,EAAnB;AAEA,WAAO,CACLC,oBAAqBA,QAASA,oBAAmB,CAACC,IAAD,CAAO;AACtDH,mBAAAI,KAAA,CAAmBD,IAAnB,CAAA;AACA,aAAO,KAAP;AAFsD,KADnD,EAKLE,mBAAoBA,QAASA,mBAAkB,CAACF,IAAD,CAAO;AACpDF,kBAAAG,KAAA,CAAkBD,IAAlB,CAAA;AACA,aAAO,KAAP;AAFoD,KALjD,EAULG,SAAU,CACRC,MAAOA,QAASA,MAAK,EAAG;AACtB,UAAIC,mBAAmBhB,MAAAiB,OAAA,CAAc,IAAd,CAAvB;AACAT,mBAAAU,QAAA,CAAsB,QAAS,CAACC,SAAD,CAAY;AACzCZ,eAAAa,kCAAA,CAA0CD,SAA1C,CAAAD,QAAA,CAA6D,QAAS,CAACG,QAAD,CAAW;AAC/EL,0BAAA,CAAiBK,QAAAC,KAAApB,MAAjB,CAAA,GAAwC,IAAxC;AAD+E,SAAjF,CAAA;AADyC,OAA3C,CAAA;AAMAO,kBAAAS,QAAA,CAAqB,QAAS,CAACK,WAAD,CAAc;AAC1C,YAAIjB,WAAWiB,WAAAD,KAAApB,MAAf;AACA,YAAIc,gBAAA,CAAiBV,QAAjB,CAAJ,KAAmC,IAAnC;AACEC,iBAAAiB,YAAA,CAAoB,IAAInB,MAAAoB,aAAJ,CAAwBtB,iBAAA,CAAkBG,QAAlB,CAAxB,EAAqD,CAACiB,WAAD,CAArD,CAApB,CAAA;AADF;AAF0C,OAA5C,CAAA;AARsB,KADhB,CAVL,CAAP;AAJkC;AA9B+F,CAAnI;;",
"sources":["node_modules/graphql/validation/rules/NoUnusedFragments.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$validation$rules$NoUnusedFragments\"] = function(global,process,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.unusedFragMessage = unusedFragMessage;\nexports.NoUnusedFragments = NoUnusedFragments;\n\nvar _error = require('../../error');\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nfunction unusedFragMessage(fragName) {\n  return 'Fragment \"' + fragName + '\" is never used.';\n}\n\n/**\n * No unused fragments\n *\n * A GraphQL document is only valid if all fragment definitions are spread\n * within operations, or spread within other fragments spread within operations.\n */\nfunction NoUnusedFragments(context) {\n  var operationDefs = [];\n  var fragmentDefs = [];\n\n  return {\n    OperationDefinition: function OperationDefinition(node) {\n      operationDefs.push(node);\n      return false;\n    },\n    FragmentDefinition: function FragmentDefinition(node) {\n      fragmentDefs.push(node);\n      return false;\n    },\n\n    Document: {\n      leave: function leave() {\n        var fragmentNameUsed = Object.create(null);\n        operationDefs.forEach(function (operation) {\n          context.getRecursivelyReferencedFragments(operation).forEach(function (fragment) {\n            fragmentNameUsed[fragment.name.value] = true;\n          });\n        });\n\n        fragmentDefs.forEach(function (fragmentDef) {\n          var fragName = fragmentDef.name.value;\n          if (fragmentNameUsed[fragName] !== true) {\n            context.reportError(new _error.GraphQLError(unusedFragMessage(fragName), [fragmentDef]));\n          }\n        });\n      }\n    }\n  };\n}\n};"],
"names":["shadow$provide","global","process","require","module","exports","Object","defineProperty","value","unusedFragMessage","NoUnusedFragments","_error","fragName","context","operationDefs","fragmentDefs","OperationDefinition","node","push","FragmentDefinition","Document","leave","fragmentNameUsed","create","forEach","operation","getRecursivelyReferencedFragments","fragment","name","fragmentDef","reportError","GraphQLError"]
}
