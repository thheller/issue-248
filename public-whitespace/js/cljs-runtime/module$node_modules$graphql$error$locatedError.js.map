{
"version":3,
"file":"module$node_modules$graphql$error$locatedError.js",
"lineCount":12,
"mappings":"AAAAA,cAAA,CAAe,gDAAf,CAAA,GAAmE,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,OAAhB,EAAwBC,MAAxB,EAA+BC,OAA/B,CAAwC;AAGnHC,QAAAC,eAAA,CAAsBF,OAAtB,EAA+B,YAA/B,EAA6C,CAC3CG,MAAO,IADoC,CAA7C,CAAA;AAGAH,SAAAI,aAAA,GAAuBA,YAAvB;AAEA,MAAIC,gBAAgBP,OAAA,CAAQ,gDAAR,CAApB;AAOAM,UAASA,aAAY,CAACE,aAAD,EAAgBC,KAAhB,EAAuBC,IAAvB,CAA6B;AAIhD,QAAIF,aAAJ,IAAqBG,KAAAC,QAAA,CAAcJ,aAAAE,KAAd,CAArB;AACE,aAAOF,aAAP;AADF;AAIA,WAAO,IAAID,aAAAM,aAAJ,CAA+BL,aAA/B,IAAgDA,aAAAM,QAAhD,EAAuEN,aAAvE,IAAwFA,aAAAC,MAAxF,IAA+GA,KAA/G,EAAsHD,aAAtH,IAAuIA,aAAAO,OAAvI,EAA6JP,aAA7J,IAA8KA,aAAAQ,UAA9K,EAAuMN,IAAvM,EAA6MF,aAA7M,CAAP;AARgD;AAfiE,CAAnH;;",
"sources":["node_modules/graphql/error/locatedError.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$error$locatedError\"] = function(global,process,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.locatedError = locatedError;\n\nvar _GraphQLError = require('./GraphQLError');\n\n/**\n * Given an arbitrary Error, presumably thrown while attempting to execute a\n * GraphQL operation, produce a new GraphQLError aware of the location in the\n * document responsible for the original Error.\n */\nfunction locatedError(originalError, nodes, path) {\n  // Note: this uses a brand-check to support GraphQL errors originating from\n  // other contexts.\n  // $FlowFixMe(>=0.68.0)\n  if (originalError && Array.isArray(originalError.path)) {\n    return originalError;\n  }\n\n  return new _GraphQLError.GraphQLError(originalError && originalError.message, originalError && originalError.nodes || nodes, originalError && originalError.source, originalError && originalError.positions, path, originalError);\n} /**\n   * Copyright (c) 2015-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   *  strict\n   */\n};"],
"names":["shadow$provide","global","process","require","module","exports","Object","defineProperty","value","locatedError","_GraphQLError","originalError","nodes","path","Array","isArray","GraphQLError","message","source","positions"]
}
