{
"version":3,
"file":"module$node_modules$graphql$utilities$valueFromASTUntyped.js",
"lineCount":41,
"mappings":"AAAAA,cAAA,CAAe,2DAAf,CAAA,GAA8E,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,OAAhB,EAAwBC,MAAxB,EAA+BC,OAA/B,CAAwC;AAG9HC,QAAAC,eAAA,CAAsBF,OAAtB,EAA+B,YAA/B,EAA6C,CAC3CG,MAAO,IADoC,CAA7C,CAAA;AAGAH,SAAAI,oBAAA,GAA8BA,mBAA9B;AAEA,MAAIC,aAAaP,OAAA,CAAQ,+CAAR,CAAjB;AAEA,MAAIQ,cAAcC,sBAAA,CAAuBF,UAAvB,CAAlB;AAEA,MAAIG,aAAaV,OAAA,CAAQ,+CAAR,CAAjB;AAEA,MAAIW,cAAcF,sBAAA,CAAuBC,UAAvB,CAAlB;AAEA,MAAIE,SAASZ,OAAA,CAAQ,4CAAR,CAAb;AAEAS,UAASA,uBAAsB,CAACI,GAAD,CAAM;AAAE,WAAOA,GAAA,IAAOA,GAAAC,WAAP,GAAwBD,GAAxB,GAA8B,CAAEE,QAASF,GAAX,CAArC;AAAF;AAkBrCP,UAASA,oBAAmB,CAACU,SAAD,EAAYC,SAAZ,CAAuB;AACjD,WAAQD,SAAAE,KAAR;AACE,WAAKN,MAAAO,KAAAC,KAAL;AACE,eAAO,IAAP;AACF,WAAKR,MAAAO,KAAAE,IAAL;AACE,eAAOC,QAAA,CAASN,SAAAX,MAAT,EAA0B,EAA1B,CAAP;AACF,WAAKO,MAAAO,KAAAI,MAAL;AACE,eAAOC,UAAA,CAAWR,SAAAX,MAAX,CAAP;AACF,WAAKO,MAAAO,KAAAM,OAAL;AACA,WAAKb,MAAAO,KAAAO,KAAL;AACA,WAAKd,MAAAO,KAAAQ,QAAL;AACE,eAAOX,SAAAX,MAAP;AACF,WAAKO,MAAAO,KAAAS,KAAL;AACE,eAAOZ,SAAAa,OAAAC,IAAA,CAAqB,QAAS,CAACC,IAAD,CAAO;AAC1C,iBAAOzB,mBAAA,CAAoByB,IAApB,EAA0Bd,SAA1B,CAAP;AAD0C,SAArC,CAAP;AAGF,WAAKL,MAAAO,KAAAa,OAAL;AACE,eAAO,CAAC,CAAA,EAAGxB,WAAAO,QAAJ,EAAyBC,SAAAiB,OAAzB,EAA2C,QAAS,CAACC,KAAD,CAAQ;AACjE,iBAAOA,KAAAC,KAAA9B,MAAP;AADiE,SAA5D,EAEJ,QAAS,CAAC6B,KAAD,CAAQ;AAClB,iBAAO5B,mBAAA,CAAoB4B,KAAA7B,MAApB,EAAiCY,SAAjC,CAAP;AADkB,SAFb,CAAP;AAKF,WAAKL,MAAAO,KAAAiB,SAAL;AACE,YAAIC,eAAerB,SAAAmB,KAAA9B,MAAnB;AACA,eAAOY,SAAA,IAAa,CAAC,CAAC,CAAA,EAAGN,WAAAI,QAAJ,EAAyBE,SAAA,CAAUoB,YAAV,CAAzB,CAAd,GAAkEpB,SAAA,CAAUoB,YAAV,CAAlE,GAA4FC,SAAnG;AAvBJ;AA0BA,UAAM,IAAIC,KAAJ,CAAU,yBAAV,GAAsCvB,SAAAE,KAAtC,CAAN;AA3BiD;AApC2E,CAA9H;;",
"sources":["node_modules/graphql/utilities/valueFromASTUntyped.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$utilities$valueFromASTUntyped\"] = function(global,process,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.valueFromASTUntyped = valueFromASTUntyped;\n\nvar _keyValMap = require('../jsutils/keyValMap');\n\nvar _keyValMap2 = _interopRequireDefault(_keyValMap);\n\nvar _isInvalid = require('../jsutils/isInvalid');\n\nvar _isInvalid2 = _interopRequireDefault(_isInvalid);\n\nvar _kinds = require('../language/kinds');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Produces a JavaScript value given a GraphQL Value AST.\n *\n * Unlike `valueFromAST()`, no type is provided. The resulting JavaScript value\n * will reflect the provided GraphQL value AST.\n *\n * | GraphQL Value        | JavaScript Value |\n * | -------------------- | ---------------- |\n * | Input Object         | Object           |\n * | List                 | Array            |\n * | Boolean              | Boolean          |\n * | String / Enum        | String           |\n * | Int / Float          | Number           |\n * | Null                 | null             |\n *\n */\nfunction valueFromASTUntyped(valueNode, variables) {\n  switch (valueNode.kind) {\n    case _kinds.Kind.NULL:\n      return null;\n    case _kinds.Kind.INT:\n      return parseInt(valueNode.value, 10);\n    case _kinds.Kind.FLOAT:\n      return parseFloat(valueNode.value);\n    case _kinds.Kind.STRING:\n    case _kinds.Kind.ENUM:\n    case _kinds.Kind.BOOLEAN:\n      return valueNode.value;\n    case _kinds.Kind.LIST:\n      return valueNode.values.map(function (node) {\n        return valueFromASTUntyped(node, variables);\n      });\n    case _kinds.Kind.OBJECT:\n      return (0, _keyValMap2.default)(valueNode.fields, function (field) {\n        return field.name.value;\n      }, function (field) {\n        return valueFromASTUntyped(field.value, variables);\n      });\n    case _kinds.Kind.VARIABLE:\n      var variableName = valueNode.name.value;\n      return variables && !(0, _isInvalid2.default)(variables[variableName]) ? variables[variableName] : undefined;\n  }\n  /* istanbul ignore next */\n  throw new Error('Unexpected value kind: ' + valueNode.kind);\n} /**\n   * Copyright (c) 2015-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   *  strict\n   */\n};"],
"names":["shadow$provide","global","process","require","module","exports","Object","defineProperty","value","valueFromASTUntyped","_keyValMap","_keyValMap2","_interopRequireDefault","_isInvalid","_isInvalid2","_kinds","obj","__esModule","default","valueNode","variables","kind","Kind","NULL","INT","parseInt","FLOAT","parseFloat","STRING","ENUM","BOOLEAN","LIST","values","map","node","OBJECT","fields","field","name","VARIABLE","variableName","undefined","Error"]
}
