{
"version":3,
"file":"module$node_modules$graphql$subscription$mapAsyncIterator.js",
"lineCount":58,
"mappings":"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",
"sources":["node_modules/graphql/subscription/mapAsyncIterator.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$subscription$mapAsyncIterator\"] = function(global,process,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = mapAsyncIterator;\n\nvar _iterall = require('iterall');\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; } /**\n                                                                                                                                                                                                                   * Copyright (c) 2017-present, Facebook, Inc.\n                                                                                                                                                                                                                   *\n                                                                                                                                                                                                                   * This source code is licensed under the MIT license found in the\n                                                                                                                                                                                                                   * LICENSE file in the root directory of this source tree.\n                                                                                                                                                                                                                   *\n                                                                                                                                                                                                                   *  strict\n                                                                                                                                                                                                                   */\n\n/**\n * Given an AsyncIterable and a callback function, return an AsyncIterator\n * which produces values mapped via calling the callback function.\n */\nfunction mapAsyncIterator(iterable, callback, rejectCallback) {\n  var iterator = (0, _iterall.getAsyncIterator)(iterable);\n  var $return = void 0;\n  var abruptClose = void 0;\n  // $FlowFixMe(>=0.68.0)\n  if (typeof iterator.return === 'function') {\n    $return = iterator.return;\n    abruptClose = function abruptClose(error) {\n      var rethrow = function rethrow() {\n        return Promise.reject(error);\n      };\n      return $return.call(iterator).then(rethrow, rethrow);\n    };\n  }\n\n  function mapResult(result) {\n    return result.done ? result : asyncMapValue(result.value, callback).then(iteratorResult, abruptClose);\n  }\n\n  var mapReject = void 0;\n  if (rejectCallback) {\n    // Capture rejectCallback to ensure it cannot be null.\n    var reject = rejectCallback;\n    mapReject = function mapReject(error) {\n      return asyncMapValue(error, reject).then(iteratorResult, abruptClose);\n    };\n  }\n\n  /* TODO: Flow doesn't support symbols as keys:\n     https://github.com/facebook/flow/issues/3258 */\n  return _defineProperty({\n    next: function next() {\n      return iterator.next().then(mapResult, mapReject);\n    },\n    return: function _return() {\n      return $return ? $return.call(iterator).then(mapResult, mapReject) : Promise.resolve({ value: undefined, done: true });\n    },\n    throw: function _throw(error) {\n      // $FlowFixMe(>=0.68.0)\n      if (typeof iterator.throw === 'function') {\n        return iterator.throw(error).then(mapResult, mapReject);\n      }\n      return Promise.reject(error).catch(abruptClose);\n    }\n  }, _iterall.$$asyncIterator, function () {\n    return this;\n  });\n}\n\nfunction asyncMapValue(value, callback) {\n  return new Promise(function (resolve) {\n    return resolve(callback(value));\n  });\n}\n\nfunction iteratorResult(value) {\n  return { value: value, done: false };\n}\n};"],
"names":["shadow$provide","global","process","require","module","exports","Object","defineProperty","value","default","mapAsyncIterator","_iterall","_defineProperty","obj","key","enumerable","configurable","writable","iterable","callback","rejectCallback","iterator","getAsyncIterator","$return","abruptClose","return","error","rethrow","Promise","reject","call","then","mapResult","result","done","asyncMapValue","iteratorResult","mapReject","next","_return","resolve","undefined","throw","_throw","catch","$$asyncIterator"]
}
