{
"version":3,
"file":"module$node_modules$graphql$validation$rules$KnownArgumentNames.js",
"lineCount":56,
"mappings":"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",
"sources":["node_modules/graphql/validation/rules/KnownArgumentNames.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$validation$rules$KnownArgumentNames\"] = function(global,process,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.unknownArgMessage = unknownArgMessage;\nexports.unknownDirectiveArgMessage = unknownDirectiveArgMessage;\nexports.KnownArgumentNames = KnownArgumentNames;\n\nvar _error = require('../../error');\n\nvar _suggestionList = require('../../jsutils/suggestionList');\n\nvar _suggestionList2 = _interopRequireDefault(_suggestionList);\n\nvar _quotedOrList = require('../../jsutils/quotedOrList');\n\nvar _quotedOrList2 = _interopRequireDefault(_quotedOrList);\n\nvar _kinds = require('../../language/kinds');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction unknownArgMessage(argName, fieldName, typeName, suggestedArgs) {\n  var message = 'Unknown argument \"' + argName + '\" on field \"' + fieldName + '\" of ' + ('type \"' + typeName + '\".');\n  if (suggestedArgs.length) {\n    message += ' Did you mean ' + (0, _quotedOrList2.default)(suggestedArgs) + '?';\n  }\n  return message;\n} /**\n   * Copyright (c) 2015-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   *  strict\n   */\n\nfunction unknownDirectiveArgMessage(argName, directiveName, suggestedArgs) {\n  var message = 'Unknown argument \"' + argName + '\" on directive \"@' + directiveName + '\".';\n  if (suggestedArgs.length) {\n    message += ' Did you mean ' + (0, _quotedOrList2.default)(suggestedArgs) + '?';\n  }\n  return message;\n}\n\n/**\n * Known argument names\n *\n * A GraphQL field is only valid if all supplied arguments are defined by\n * that field.\n */\nfunction KnownArgumentNames(context) {\n  return {\n    Argument: function Argument(node, key, parent, path, ancestors) {\n      var argDef = context.getArgument();\n      if (!argDef) {\n        var argumentOf = ancestors[ancestors.length - 1];\n        if (argumentOf.kind === _kinds.Kind.FIELD) {\n          var fieldDef = context.getFieldDef();\n          var parentType = context.getParentType();\n          if (fieldDef && parentType) {\n            context.reportError(new _error.GraphQLError(unknownArgMessage(node.name.value, fieldDef.name, parentType.name, (0, _suggestionList2.default)(node.name.value, fieldDef.args.map(function (arg) {\n              return arg.name;\n            }))), [node]));\n          }\n        } else if (argumentOf.kind === _kinds.Kind.DIRECTIVE) {\n          var directive = context.getDirective();\n          if (directive) {\n            context.reportError(new _error.GraphQLError(unknownDirectiveArgMessage(node.name.value, directive.name, (0, _suggestionList2.default)(node.name.value, directive.args.map(function (arg) {\n              return arg.name;\n            }))), [node]));\n          }\n        }\n      }\n    }\n  };\n}\n};"],
"names":["shadow$provide","global","process","require","module","exports","Object","defineProperty","value","unknownArgMessage","unknownDirectiveArgMessage","KnownArgumentNames","_error","_suggestionList","_suggestionList2","_interopRequireDefault","_quotedOrList","_quotedOrList2","_kinds","obj","__esModule","default","argName","fieldName","typeName","suggestedArgs","message","length","directiveName","context","Argument","node","key","parent","path","ancestors","argDef","getArgument","argumentOf","kind","Kind","FIELD","fieldDef","getFieldDef","parentType","getParentType","reportError","GraphQLError","name","args","map","arg","DIRECTIVE","directive","getDirective"]
}
