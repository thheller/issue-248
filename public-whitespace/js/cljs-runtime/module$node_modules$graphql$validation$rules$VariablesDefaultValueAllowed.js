shadow$provide["module$node_modules$graphql$validation$rules$VariablesDefaultValueAllowed"] = function(global, process, require, module, exports) {
  Object.defineProperty(exports, "__esModule", {value:true});
  exports.defaultForRequiredVarMessage = defaultForRequiredVarMessage;
  exports.VariablesDefaultValueAllowed = VariablesDefaultValueAllowed;
  var _error = require("module$node_modules$graphql$error$index");
  var _definition = require("module$node_modules$graphql$type$definition");
  function defaultForRequiredVarMessage(varName, type, guessType) {
    return 'Variable "$' + varName + '" of type "' + String(type) + '" is required and ' + "will not use the default value. " + ('Perhaps you meant to use type "' + String(guessType) + '".');
  }
  function VariablesDefaultValueAllowed(context) {
    return {VariableDefinition:function VariableDefinition(node) {
      var name = node.variable.name.value;
      var defaultValue = node.defaultValue;
      var type = context.getInputType();
      if ((0, _definition.isNonNullType)(type) && defaultValue) {
        context.reportError(new _error.GraphQLError(defaultForRequiredVarMessage(name, type, type.ofType), [defaultValue]));
      }
      return false;
    }, SelectionSet:function SelectionSet() {
      return false;
    }, FragmentDefinition:function FragmentDefinition() {
      return false;
    }};
  }
};

//# sourceMappingURL=module$node_modules$graphql$validation$rules$VariablesDefaultValueAllowed.js.map
