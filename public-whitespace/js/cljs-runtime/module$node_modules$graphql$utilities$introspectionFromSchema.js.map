{
"version":3,
"file":"module$node_modules$graphql$utilities$introspectionFromSchema.js",
"lineCount":20,
"mappings":"AAAAA,cAAA,CAAe,+DAAf,CAAA,GAAkF,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,OAAhB,EAAwBC,MAAxB,EAA+BC,OAA/B,CAAwC;AAGlIC,QAAAC,eAAA,CAAsBF,OAAtB,EAA+B,YAA/B,EAA6C,CAC3CG,MAAO,IADoC,CAA7C,CAAA;AAGAH,SAAAI,wBAAA,GAAkCA,uBAAlC;AAEA,MAAIC,aAAaP,OAAA,CAAQ,+CAAR,CAAjB;AAEA,MAAIQ,cAAcC,sBAAA,CAAuBF,UAAvB,CAAlB;AAEA,MAAIG,sBAAsBV,OAAA,CAAQ,0DAAR,CAA1B;AAEA,MAAIW,UAAUX,OAAA,CAAQ,yCAAR,CAAd;AAEA,MAAIY,WAAWZ,OAAA,CAAQ,+CAAR,CAAf;AAEA,MAAIa,UAAUb,OAAA,CAAQ,6CAAR,CAAd;AAEAS,UAASA,uBAAsB,CAACK,GAAD,CAAM;AAAE,WAAOA,GAAA,IAAOA,GAAAC,WAAP,GAAwBD,GAAxB,GAA8B,CAAEE,QAASF,GAAX,CAArC;AAAF;AAWrCR,UAASA,wBAAuB,CAACW,MAAD,EAASC,OAAT,CAAkB;AAChD,QAAIC,WAAW,CAAC,CAAA,EAAGN,OAAAO,MAAJ,EAAmB,CAAC,CAAA,EAAGV,mBAAAW,sBAAJ,EAA+CH,OAA/C,CAAnB,CAAf;AACA,QAAII,SAAS,CAAC,CAAA,EAAGV,QAAAW,QAAJ,EAAsBN,MAAtB,EAA8BE,QAA9B,CAAb;AACA,MAAE,CAACG,MAAAE,KAAH,IAAkB,CAACF,MAAAG,OAAnB,IAAoCH,MAAAI,KAApC,CAAA,GAAmD,CAAC,CAAA,EAAGlB,WAAAQ,QAAJ,EAAyB,CAAzB,CAAnD,GAAiF,IAAK,EAAtF;AACA,WAAOM,MAAAI,KAAP;AAJgD;AA/BgF,CAAlI;;",
"sources":["node_modules/graphql/utilities/introspectionFromSchema.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$utilities$introspectionFromSchema\"] = function(global,process,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.introspectionFromSchema = introspectionFromSchema;\n\nvar _invariant = require('../jsutils/invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _introspectionQuery = require('./introspectionQuery');\n\nvar _schema = require('../type/schema');\n\nvar _execute = require('../execution/execute');\n\nvar _parser = require('../language/parser');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Build an IntrospectionQuery from a GraphQLSchema\n *\n * IntrospectionQuery is useful for utilities that care about type and field\n * relationships, but do not need to traverse through those relationships.\n *\n * This is the inverse of buildClientSchema. The primary use case is outside\n * of the server context, for instance when doing schema comparisons.\n */\nfunction introspectionFromSchema(schema, options) {\n  var queryAST = (0, _parser.parse)((0, _introspectionQuery.getIntrospectionQuery)(options));\n  var result = (0, _execute.execute)(schema, queryAST);\n  !(!result.then && !result.errors && result.data) ? (0, _invariant2.default)(0) : void 0;\n  return result.data;\n} /**\n   * Copyright (c) 2015-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   *  strict\n   */\n};"],
"names":["shadow$provide","global","process","require","module","exports","Object","defineProperty","value","introspectionFromSchema","_invariant","_invariant2","_interopRequireDefault","_introspectionQuery","_schema","_execute","_parser","obj","__esModule","default","schema","options","queryAST","parse","getIntrospectionQuery","result","execute","then","errors","data"]
}
