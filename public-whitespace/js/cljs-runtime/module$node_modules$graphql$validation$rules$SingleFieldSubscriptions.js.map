{
"version":3,
"file":"module$node_modules$graphql$validation$rules$SingleFieldSubscriptions.js",
"lineCount":19,
"mappings":"AAAAA,cAAA,CAAe,uEAAf,CAAA,GAA0F,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,OAAhB,EAAwBC,MAAxB,EAA+BC,OAA/B,CAAwC;AAG1IC,QAAAC,eAAA,CAAsBF,OAAtB,EAA+B,YAA/B,EAA6C,CAC3CG,MAAO,IADoC,CAA7C,CAAA;AAGAH,SAAAI,uBAAA,GAAiCA,sBAAjC;AACAJ,SAAAK,yBAAA,GAAmCA,wBAAnC;AAEA,MAAIC,SAASR,OAAA,CAAQ,yCAAR,CAAb;AAWAM,UAASA,uBAAsB,CAACG,IAAD,CAAO;AACpC,YAAQA,IAAA,GAAO,gBAAP,GAA0BA,IAA1B,GAAiC,IAAjC,GAAwC,yBAAhD,IAA6E,uCAA7E;AADoC;AAStCF,UAASA,yBAAwB,CAACG,OAAD,CAAU;AACzC,WAAO,CACLC,oBAAqBA,QAASA,oBAAmB,CAACC,IAAD,CAAO;AACtD,UAAIA,IAAAC,UAAJ,KAAuB,cAAvB;AACE,YAAID,IAAAE,aAAAC,WAAAC,OAAJ,KAA4C,CAA5C;AACEN,iBAAAO,YAAA,CAAoB,IAAIT,MAAAU,aAAJ,CAAwBZ,sBAAA,CAAuBM,IAAAH,KAAvB,IAAoCG,IAAAH,KAAAJ,MAApC,CAAxB,EAA8EO,IAAAE,aAAAC,WAAAI,MAAA,CAAmC,CAAnC,CAA9E,CAApB,CAAA;AADF;AADF;AADsD,KADnD,CAAP;AADyC;AA7B+F,CAA1I;;",
"sources":["node_modules/graphql/validation/rules/SingleFieldSubscriptions.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$validation$rules$SingleFieldSubscriptions\"] = function(global,process,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.singleFieldOnlyMessage = singleFieldOnlyMessage;\nexports.SingleFieldSubscriptions = SingleFieldSubscriptions;\n\nvar _error = require('../../error');\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nfunction singleFieldOnlyMessage(name) {\n  return (name ? 'Subscription \"' + name + '\" ' : 'Anonymous Subscription ') + 'must select only one top level field.';\n}\n\n/**\n * Subscriptions must only include one field.\n *\n * A GraphQL subscription is valid only if it contains a single root field.\n */\nfunction SingleFieldSubscriptions(context) {\n  return {\n    OperationDefinition: function OperationDefinition(node) {\n      if (node.operation === 'subscription') {\n        if (node.selectionSet.selections.length !== 1) {\n          context.reportError(new _error.GraphQLError(singleFieldOnlyMessage(node.name && node.name.value), node.selectionSet.selections.slice(1)));\n        }\n      }\n    }\n  };\n}\n};"],
"names":["shadow$provide","global","process","require","module","exports","Object","defineProperty","value","singleFieldOnlyMessage","SingleFieldSubscriptions","_error","name","context","OperationDefinition","node","operation","selectionSet","selections","length","reportError","GraphQLError","slice"]
}
