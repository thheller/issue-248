shadow$provide["module$node_modules$graphql$error$GraphQLError"] = function(global, process, require, module, exports) {
  Object.defineProperty(exports, "__esModule", {value:true});
  exports.GraphQLError = GraphQLError;
  var _printError = require("module$node_modules$graphql$error$printError");
  var _location = require("module$node_modules$graphql$language$location");
  function GraphQLError(message, nodes, source, positions, path, originalError, extensions) {
    var _nodes = Array.isArray(nodes) ? nodes.length !== 0 ? nodes : undefined : nodes ? [nodes] : undefined;
    var _source = source;
    if (!_source && _nodes) {
      var node = _nodes[0];
      _source = node && node.loc && node.loc.source;
    }
    var _positions = positions;
    if (!_positions && _nodes) {
      _positions = _nodes.reduce(function(list, node) {
        if (node.loc) {
          list.push(node.loc.start);
        }
        return list;
      }, []);
    }
    if (_positions && _positions.length === 0) {
      _positions = undefined;
    }
    var _locations = void 0;
    if (positions && source) {
      _locations = positions.map(function(pos) {
        return (0, _location.getLocation)(source, pos);
      });
    } else {
      if (_nodes) {
        _locations = _nodes.reduce(function(list, node) {
          if (node.loc) {
            list.push((0, _location.getLocation)(node.loc.source, node.loc.start));
          }
          return list;
        }, []);
      }
    }
    Object.defineProperties(this, {message:{value:message, enumerable:true, writable:true}, locations:{value:_locations || undefined, enumerable:true}, path:{value:path || undefined, enumerable:true}, nodes:{value:_nodes || undefined}, source:{value:_source || undefined}, positions:{value:_positions || undefined}, originalError:{value:originalError}, extensions:{value:extensions || originalError && originalError.extensions}});
    if (originalError && originalError.stack) {
      Object.defineProperty(this, "stack", {value:originalError.stack, writable:true, configurable:true});
    } else {
      if (Error.captureStackTrace) {
        Error.captureStackTrace(this, GraphQLError);
      } else {
        Object.defineProperty(this, "stack", {value:Error().stack, writable:true, configurable:true});
      }
    }
  }
  GraphQLError.prototype = Object.create(Error.prototype, {constructor:{value:GraphQLError}, name:{value:"GraphQLError"}, toString:{value:function toString() {
    return (0, _printError.printError)(this);
  }}});
};

//# sourceMappingURL=module$node_modules$graphql$error$GraphQLError.js.map
