{
"version":3,
"file":"module$node_modules$graphql$validation$rules$UniqueOperationNames.js",
"lineCount":26,
"mappings":"AAAAA,cAAA,CAAe,mEAAf,CAAA,GAAsF,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,OAAhB,EAAwBC,MAAxB,EAA+BC,OAA/B,CAAwC;AAGtIC,QAAAC,eAAA,CAAsBF,OAAtB,EAA+B,YAA/B,EAA6C,CAC3CG,MAAO,IADoC,CAA7C,CAAA;AAGAH,SAAAI,8BAAA,GAAwCA,6BAAxC;AACAJ,SAAAK,qBAAA,GAA+BA,oBAA/B;AAEA,MAAIC,SAASR,OAAA,CAAQ,yCAAR,CAAb;AAWAM,UAASA,8BAA6B,CAACG,aAAD,CAAgB;AACpD,WAAO,yCAAP,GAAmDA,aAAnD,GAAmE,IAAnE;AADoD;AAStDF,UAASA,qBAAoB,CAACG,OAAD,CAAU;AACrC,QAAIC,sBAAsBR,MAAAS,OAAA,CAAc,IAAd,CAA1B;AACA,WAAO,CACLC,oBAAqBA,QAASA,oBAAmB,CAACC,IAAD,CAAO;AACtD,UAAIL,gBAAgBK,IAAAC,KAApB;AACA,UAAIN,aAAJ;AACE,YAAIE,mBAAA,CAAoBF,aAAAJ,MAApB,CAAJ;AACEK,iBAAAM,YAAA,CAAoB,IAAIR,MAAAS,aAAJ,CAAwBX,6BAAA,CAA8BG,aAAAJ,MAA9B,CAAxB,EAA4E,CAACM,mBAAA,CAAoBF,aAAAJ,MAApB,CAAD,EAA2CI,aAA3C,CAA5E,CAApB,CAAA;AADF;AAGEE,6BAAA,CAAoBF,aAAAJ,MAApB,CAAA,GAA2CI,aAA3C;AAHF;AADF;AAOA,aAAO,KAAP;AATsD,KADnD,EAaLS,mBAAoBA,QAASA,mBAAkB,EAAG;AAChD,aAAO,KAAP;AADgD,KAb7C,CAAP;AAFqC;AA7B+F,CAAtI;;",
"sources":["node_modules/graphql/validation/rules/UniqueOperationNames.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$validation$rules$UniqueOperationNames\"] = function(global,process,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.duplicateOperationNameMessage = duplicateOperationNameMessage;\nexports.UniqueOperationNames = UniqueOperationNames;\n\nvar _error = require('../../error');\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nfunction duplicateOperationNameMessage(operationName) {\n  return 'There can be only one operation named \"' + operationName + '\".';\n}\n\n/**\n * Unique operation names\n *\n * A GraphQL document is only valid if all defined operations have unique names.\n */\nfunction UniqueOperationNames(context) {\n  var knownOperationNames = Object.create(null);\n  return {\n    OperationDefinition: function OperationDefinition(node) {\n      var operationName = node.name;\n      if (operationName) {\n        if (knownOperationNames[operationName.value]) {\n          context.reportError(new _error.GraphQLError(duplicateOperationNameMessage(operationName.value), [knownOperationNames[operationName.value], operationName]));\n        } else {\n          knownOperationNames[operationName.value] = operationName;\n        }\n      }\n      return false;\n    },\n\n    FragmentDefinition: function FragmentDefinition() {\n      return false;\n    }\n  };\n}\n};"],
"names":["shadow$provide","global","process","require","module","exports","Object","defineProperty","value","duplicateOperationNameMessage","UniqueOperationNames","_error","operationName","context","knownOperationNames","create","OperationDefinition","node","name","reportError","GraphQLError","FragmentDefinition"]
}
