{
"version":3,
"file":"module$node_modules$graphql$validation$ValidationContext.js",
"lineCount":148,
"mappings":"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",
"sources":["node_modules/graphql/validation/ValidationContext.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$validation$ValidationContext\"] = function(global,process,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _error = require('../error');\n\nvar _visitor = require('../language/visitor');\n\nvar _kinds = require('../language/kinds');\n\nvar _schema = require('../type/schema');\n\nvar _TypeInfo = require('../utilities/TypeInfo');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } } /**\n                                                                                                                                                           * Copyright (c) 2015-present, Facebook, Inc.\n                                                                                                                                                           *\n                                                                                                                                                           * This source code is licensed under the MIT license found in the\n                                                                                                                                                           * LICENSE file in the root directory of this source tree.\n                                                                                                                                                           *\n                                                                                                                                                           *  strict\n                                                                                                                                                           */\n\n/**\n * An instance of this class is passed as the \"this\" context to all validators,\n * allowing access to commonly useful contextual information from within a\n * validation rule.\n */\nvar ValidationContext = function () {\n  function ValidationContext(schema, ast, typeInfo) {\n    _classCallCheck(this, ValidationContext);\n\n    this._schema = schema;\n    this._ast = ast;\n    this._typeInfo = typeInfo;\n    this._errors = [];\n    this._fragmentSpreads = new Map();\n    this._recursivelyReferencedFragments = new Map();\n    this._variableUsages = new Map();\n    this._recursiveVariableUsages = new Map();\n  }\n\n  ValidationContext.prototype.reportError = function reportError(error) {\n    this._errors.push(error);\n  };\n\n  ValidationContext.prototype.getErrors = function getErrors() {\n    return this._errors;\n  };\n\n  ValidationContext.prototype.getSchema = function getSchema() {\n    return this._schema;\n  };\n\n  ValidationContext.prototype.getDocument = function getDocument() {\n    return this._ast;\n  };\n\n  ValidationContext.prototype.getFragment = function getFragment(name) {\n    var fragments = this._fragments;\n    if (!fragments) {\n      this._fragments = fragments = this.getDocument().definitions.reduce(function (frags, statement) {\n        if (statement.kind === _kinds.Kind.FRAGMENT_DEFINITION) {\n          frags[statement.name.value] = statement;\n        }\n        return frags;\n      }, Object.create(null));\n    }\n    return fragments[name];\n  };\n\n  ValidationContext.prototype.getFragmentSpreads = function getFragmentSpreads(node) {\n    var spreads = this._fragmentSpreads.get(node);\n    if (!spreads) {\n      spreads = [];\n      var setsToVisit = [node];\n      while (setsToVisit.length !== 0) {\n        var set = setsToVisit.pop();\n        for (var i = 0; i < set.selections.length; i++) {\n          var selection = set.selections[i];\n          if (selection.kind === _kinds.Kind.FRAGMENT_SPREAD) {\n            spreads.push(selection);\n          } else if (selection.selectionSet) {\n            setsToVisit.push(selection.selectionSet);\n          }\n        }\n      }\n      this._fragmentSpreads.set(node, spreads);\n    }\n    return spreads;\n  };\n\n  ValidationContext.prototype.getRecursivelyReferencedFragments = function getRecursivelyReferencedFragments(operation) {\n    var fragments = this._recursivelyReferencedFragments.get(operation);\n    if (!fragments) {\n      fragments = [];\n      var collectedNames = Object.create(null);\n      var nodesToVisit = [operation.selectionSet];\n      while (nodesToVisit.length !== 0) {\n        var _node = nodesToVisit.pop();\n        var spreads = this.getFragmentSpreads(_node);\n        for (var i = 0; i < spreads.length; i++) {\n          var fragName = spreads[i].name.value;\n          if (collectedNames[fragName] !== true) {\n            collectedNames[fragName] = true;\n            var fragment = this.getFragment(fragName);\n            if (fragment) {\n              fragments.push(fragment);\n              nodesToVisit.push(fragment.selectionSet);\n            }\n          }\n        }\n      }\n      this._recursivelyReferencedFragments.set(operation, fragments);\n    }\n    return fragments;\n  };\n\n  ValidationContext.prototype.getVariableUsages = function getVariableUsages(node) {\n    var usages = this._variableUsages.get(node);\n    if (!usages) {\n      var newUsages = [];\n      var typeInfo = new _TypeInfo.TypeInfo(this._schema);\n      (0, _visitor.visit)(node, (0, _visitor.visitWithTypeInfo)(typeInfo, {\n        VariableDefinition: function VariableDefinition() {\n          return false;\n        },\n        Variable: function Variable(variable) {\n          newUsages.push({ node: variable, type: typeInfo.getInputType() });\n        }\n      }));\n      usages = newUsages;\n      this._variableUsages.set(node, usages);\n    }\n    return usages;\n  };\n\n  ValidationContext.prototype.getRecursiveVariableUsages = function getRecursiveVariableUsages(operation) {\n    var usages = this._recursiveVariableUsages.get(operation);\n    if (!usages) {\n      usages = this.getVariableUsages(operation);\n      var fragments = this.getRecursivelyReferencedFragments(operation);\n      for (var i = 0; i < fragments.length; i++) {\n        Array.prototype.push.apply(usages, this.getVariableUsages(fragments[i]));\n      }\n      this._recursiveVariableUsages.set(operation, usages);\n    }\n    return usages;\n  };\n\n  ValidationContext.prototype.getType = function getType() {\n    return this._typeInfo.getType();\n  };\n\n  ValidationContext.prototype.getParentType = function getParentType() {\n    return this._typeInfo.getParentType();\n  };\n\n  ValidationContext.prototype.getInputType = function getInputType() {\n    return this._typeInfo.getInputType();\n  };\n\n  ValidationContext.prototype.getParentInputType = function getParentInputType() {\n    return this._typeInfo.getParentInputType();\n  };\n\n  ValidationContext.prototype.getFieldDef = function getFieldDef() {\n    return this._typeInfo.getFieldDef();\n  };\n\n  ValidationContext.prototype.getDirective = function getDirective() {\n    return this._typeInfo.getDirective();\n  };\n\n  ValidationContext.prototype.getArgument = function getArgument() {\n    return this._typeInfo.getArgument();\n  };\n\n  return ValidationContext;\n}();\n\nexports.default = ValidationContext;\n};"],
"names":["shadow$provide","global","process","require","module","exports","Object","defineProperty","value","_error","_visitor","_kinds","_schema","_TypeInfo","_classCallCheck","instance","Constructor","TypeError","ValidationContext","schema","ast","typeInfo","_ast","_typeInfo","_errors","_fragmentSpreads","Map","_recursivelyReferencedFragments","_variableUsages","_recursiveVariableUsages","prototype","reportError","ValidationContext.prototype.reportError","error","push","getErrors","ValidationContext.prototype.getErrors","getSchema","ValidationContext.prototype.getSchema","getDocument","ValidationContext.prototype.getDocument","getFragment","ValidationContext.prototype.getFragment","name","fragments","_fragments","definitions","reduce","frags","statement","kind","Kind","FRAGMENT_DEFINITION","create","getFragmentSpreads","ValidationContext.prototype.getFragmentSpreads","node","spreads","get","setsToVisit","length","set","pop","i","selections","selection","FRAGMENT_SPREAD","selectionSet","getRecursivelyReferencedFragments","ValidationContext.prototype.getRecursivelyReferencedFragments","operation","collectedNames","nodesToVisit","_node","fragName","fragment","getVariableUsages","ValidationContext.prototype.getVariableUsages","usages","newUsages","TypeInfo","visit","visitWithTypeInfo","VariableDefinition","Variable","variable","type","getInputType","getRecursiveVariableUsages","ValidationContext.prototype.getRecursiveVariableUsages","Array","apply","getType","ValidationContext.prototype.getType","getParentType","ValidationContext.prototype.getParentType","ValidationContext.prototype.getInputType","getParentInputType","ValidationContext.prototype.getParentInputType","getFieldDef","ValidationContext.prototype.getFieldDef","getDirective","ValidationContext.prototype.getDirective","getArgument","ValidationContext.prototype.getArgument","default"]
}
