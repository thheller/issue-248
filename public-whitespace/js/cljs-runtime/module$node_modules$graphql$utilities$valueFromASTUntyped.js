shadow$provide["module$node_modules$graphql$utilities$valueFromASTUntyped"] = function(global, process, require, module, exports) {
  Object.defineProperty(exports, "__esModule", {value:true});
  exports.valueFromASTUntyped = valueFromASTUntyped;
  var _keyValMap = require("module$node_modules$graphql$jsutils$keyValMap");
  var _keyValMap2 = _interopRequireDefault(_keyValMap);
  var _isInvalid = require("module$node_modules$graphql$jsutils$isInvalid");
  var _isInvalid2 = _interopRequireDefault(_isInvalid);
  var _kinds = require("module$node_modules$graphql$language$kinds");
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default:obj};
  }
  function valueFromASTUntyped(valueNode, variables) {
    switch(valueNode.kind) {
      case _kinds.Kind.NULL:
        return null;
      case _kinds.Kind.INT:
        return parseInt(valueNode.value, 10);
      case _kinds.Kind.FLOAT:
        return parseFloat(valueNode.value);
      case _kinds.Kind.STRING:
      case _kinds.Kind.ENUM:
      case _kinds.Kind.BOOLEAN:
        return valueNode.value;
      case _kinds.Kind.LIST:
        return valueNode.values.map(function(node) {
          return valueFromASTUntyped(node, variables);
        });
      case _kinds.Kind.OBJECT:
        return (0, _keyValMap2.default)(valueNode.fields, function(field) {
          return field.name.value;
        }, function(field) {
          return valueFromASTUntyped(field.value, variables);
        });
      case _kinds.Kind.VARIABLE:
        var variableName = valueNode.name.value;
        return variables && !(0, _isInvalid2.default)(variables[variableName]) ? variables[variableName] : undefined;
    }
    throw new Error("Unexpected value kind: " + valueNode.kind);
  }
};

//# sourceMappingURL=module$node_modules$graphql$utilities$valueFromASTUntyped.js.map
