{
"version":3,
"file":"module$node_modules$graphql$validation$rules$UniqueInputFieldNames.js",
"lineCount":28,
"mappings":"AAAAA,cAAA,CAAe,oEAAf,CAAA,GAAuF,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,OAAhB,EAAwBC,MAAxB,EAA+BC,OAA/B,CAAwC;AAGvIC,QAAAC,eAAA,CAAsBF,OAAtB,EAA+B,YAA/B,EAA6C,CAC3CG,MAAO,IADoC,CAA7C,CAAA;AAGAH,SAAAI,2BAAA,GAAqCA,0BAArC;AACAJ,SAAAK,sBAAA,GAAgCA,qBAAhC;AAEA,MAAIC,SAASR,OAAA,CAAQ,yCAAR,CAAb;AAWAM,UAASA,2BAA0B,CAACG,SAAD,CAAY;AAC7C,WAAO,2CAAP,GAAqDA,SAArD,GAAiE,IAAjE;AAD6C;AAU/CF,UAASA,sBAAqB,CAACG,OAAD,CAAU;AACtC,QAAIC,iBAAiB,EAArB;AACA,QAAIC,aAAaT,MAAAU,OAAA,CAAc,IAAd,CAAjB;AAEA,WAAO,CACLC,YAAa,CACXC,MAAOA,QAASA,MAAK,EAAG;AACtBJ,oBAAAK,KAAA,CAAoBJ,UAApB,CAAA;AACAA,gBAAA,GAAaT,MAAAU,OAAA,CAAc,IAAd,CAAb;AAFsB,KADb,EAKXI,MAAOA,QAASA,MAAK,EAAG;AACtBL,gBAAA,GAAaD,cAAAO,IAAA,EAAb;AADsB,KALb,CADR,EAULC,YAAaA,QAASA,YAAW,CAACC,IAAD,CAAO;AACtC,UAAIX,YAAYW,IAAAC,KAAAhB,MAAhB;AACA,UAAIO,UAAA,CAAWH,SAAX,CAAJ;AACEC,eAAAY,YAAA,CAAoB,IAAId,MAAAe,aAAJ,CAAwBjB,0BAAA,CAA2BG,SAA3B,CAAxB,EAA+D,CAACG,UAAA,CAAWH,SAAX,CAAD,EAAwBW,IAAAC,KAAxB,CAA/D,CAApB,CAAA;AADF;AAGET,kBAAA,CAAWH,SAAX,CAAA,GAAwBW,IAAAC,KAAxB;AAHF;AAKA,aAAO,KAAP;AAPsC,KAVnC,CAAP;AAJsC;AA9B+F,CAAvI;;",
"sources":["node_modules/graphql/validation/rules/UniqueInputFieldNames.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$validation$rules$UniqueInputFieldNames\"] = function(global,process,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.duplicateInputFieldMessage = duplicateInputFieldMessage;\nexports.UniqueInputFieldNames = UniqueInputFieldNames;\n\nvar _error = require('../../error');\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nfunction duplicateInputFieldMessage(fieldName) {\n  return 'There can be only one input field named \"' + fieldName + '\".';\n}\n\n/**\n * Unique input field names\n *\n * A GraphQL input object value is only valid if all supplied fields are\n * uniquely named.\n */\nfunction UniqueInputFieldNames(context) {\n  var knownNameStack = [];\n  var knownNames = Object.create(null);\n\n  return {\n    ObjectValue: {\n      enter: function enter() {\n        knownNameStack.push(knownNames);\n        knownNames = Object.create(null);\n      },\n      leave: function leave() {\n        knownNames = knownNameStack.pop();\n      }\n    },\n    ObjectField: function ObjectField(node) {\n      var fieldName = node.name.value;\n      if (knownNames[fieldName]) {\n        context.reportError(new _error.GraphQLError(duplicateInputFieldMessage(fieldName), [knownNames[fieldName], node.name]));\n      } else {\n        knownNames[fieldName] = node.name;\n      }\n      return false;\n    }\n  };\n}\n};"],
"names":["shadow$provide","global","process","require","module","exports","Object","defineProperty","value","duplicateInputFieldMessage","UniqueInputFieldNames","_error","fieldName","context","knownNameStack","knownNames","create","ObjectValue","enter","push","leave","pop","ObjectField","node","name","reportError","GraphQLError"]
}
