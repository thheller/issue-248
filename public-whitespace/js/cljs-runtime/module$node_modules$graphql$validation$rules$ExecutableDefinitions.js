shadow$provide["module$node_modules$graphql$validation$rules$ExecutableDefinitions"] = function(global, process, require, module, exports) {
  Object.defineProperty(exports, "__esModule", {value:true});
  exports.nonExecutableDefinitionMessage = nonExecutableDefinitionMessage;
  exports.ExecutableDefinitions = ExecutableDefinitions;
  var _error = require("module$node_modules$graphql$error$index");
  var _kinds = require("module$node_modules$graphql$language$kinds");
  function nonExecutableDefinitionMessage(defName) {
    return "The " + defName + " definition is not executable.";
  }
  function ExecutableDefinitions(context) {
    return {Document:function Document(node) {
      node.definitions.forEach(function(definition) {
        if (definition.kind !== _kinds.Kind.OPERATION_DEFINITION && definition.kind !== _kinds.Kind.FRAGMENT_DEFINITION) {
          context.reportError(new _error.GraphQLError(nonExecutableDefinitionMessage(definition.kind === _kinds.Kind.SCHEMA_DEFINITION ? "schema" : definition.name.value), [definition]));
        }
      });
      return false;
    }};
  }
};

//# sourceMappingURL=module$node_modules$graphql$validation$rules$ExecutableDefinitions.js.map
