{
"version":3,
"file":"module$node_modules$graphql$validation$rules$ExecutableDefinitions.js",
"lineCount":21,
"mappings":"AAAAA,cAAA,CAAe,oEAAf,CAAA,GAAuF,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,OAAhB,EAAwBC,MAAxB,EAA+BC,OAA/B,CAAwC;AAGvIC,QAAAC,eAAA,CAAsBF,OAAtB,EAA+B,YAA/B,EAA6C,CAC3CG,MAAO,IADoC,CAA7C,CAAA;AAGAH,SAAAI,+BAAA,GAAyCA,8BAAzC;AACAJ,SAAAK,sBAAA,GAAgCA,qBAAhC;AAEA,MAAIC,SAASR,OAAA,CAAQ,yCAAR,CAAb;AAEA,MAAIS,SAAST,OAAA,CAAQ,4CAAR,CAAb;AAEAM,UAASA,+BAA8B,CAACI,OAAD,CAAU;AAC/C,WAAO,MAAP,GAAgBA,OAAhB,GAA0B,gCAA1B;AAD+C;AAmBjDH,UAASA,sBAAqB,CAACI,OAAD,CAAU;AACtC,WAAO,CACLC,SAAUA,QAASA,SAAQ,CAACC,IAAD,CAAO;AAChCA,UAAAC,YAAAC,QAAA,CAAyB,QAAS,CAACC,UAAD,CAAa;AAC7C,YAAIA,UAAAC,KAAJ,KAAwBR,MAAAS,KAAAC,qBAAxB,IAA4DH,UAAAC,KAA5D,KAAgFR,MAAAS,KAAAE,oBAAhF;AACET,iBAAAU,YAAA,CAAoB,IAAIb,MAAAc,aAAJ,CAAwBhB,8BAAA,CAA+BU,UAAAC,KAAA,KAAoBR,MAAAS,KAAAK,kBAApB,GAAoD,QAApD,GAA+DP,UAAAQ,KAAAnB,MAA9F,CAAxB,EAA8I,CAACW,UAAD,CAA9I,CAApB,CAAA;AADF;AAD6C,OAA/C,CAAA;AAKA,aAAO,KAAP;AANgC,KAD7B,CAAP;AADsC;AAhC+F,CAAvI;;",
"sources":["node_modules/graphql/validation/rules/ExecutableDefinitions.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$validation$rules$ExecutableDefinitions\"] = function(global,process,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.nonExecutableDefinitionMessage = nonExecutableDefinitionMessage;\nexports.ExecutableDefinitions = ExecutableDefinitions;\n\nvar _error = require('../../error');\n\nvar _kinds = require('../../language/kinds');\n\nfunction nonExecutableDefinitionMessage(defName) {\n  return 'The ' + defName + ' definition is not executable.';\n}\n\n/**\n * Executable definitions\n *\n * A GraphQL document is only valid for execution if all definitions are either\n * operation or fragment definitions.\n */\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nfunction ExecutableDefinitions(context) {\n  return {\n    Document: function Document(node) {\n      node.definitions.forEach(function (definition) {\n        if (definition.kind !== _kinds.Kind.OPERATION_DEFINITION && definition.kind !== _kinds.Kind.FRAGMENT_DEFINITION) {\n          context.reportError(new _error.GraphQLError(nonExecutableDefinitionMessage(definition.kind === _kinds.Kind.SCHEMA_DEFINITION ? 'schema' : definition.name.value), [definition]));\n        }\n      });\n      return false;\n    }\n  };\n}\n};"],
"names":["shadow$provide","global","process","require","module","exports","Object","defineProperty","value","nonExecutableDefinitionMessage","ExecutableDefinitions","_error","_kinds","defName","context","Document","node","definitions","forEach","definition","kind","Kind","OPERATION_DEFINITION","FRAGMENT_DEFINITION","reportError","GraphQLError","SCHEMA_DEFINITION","name"]
}
