shadow$provide.module$node_modules$graphql$validation$rules$ProvidedNonNullArguments = function(e, r, b, u, a) {
  function g(a, b, c) {
    return 'Field "' + a + '" argument "' + b + '" of type ' + ('"' + String(c) + '" is required but not provided.');
  }
  function c(a, b, c) {
    return 'Directive "@' + a + '" argument "' + b + '" of type ' + ('"' + String(c) + '" is required but not provided.');
  }
  Object.defineProperty(a, "__esModule", {value:!0});
  a.missingFieldArgMessage = g;
  a.missingDirectiveArgMessage = c;
  a.ProvidedNonNullArguments = function(a) {
    return {Field:{leave:function(b) {
      var c = a.getFieldDef();
      if (!c) {
        return !1;
      }
      var h = b.arguments || [], e = (0, l.default)(h, function(a) {
        return a.name.value;
      });
      c.args.forEach(function(c) {
        !e[c.name] && (0, f.isNonNullType)(c.type) && a.reportError(new k.GraphQLError(g(b.name.value, c.name, c.type), [b]));
      });
    }}, Directive:{leave:function(b) {
      var d = a.getDirective();
      if (!d) {
        return !1;
      }
      var h = b.arguments || [], e = (0, l.default)(h, function(a) {
        return a.name.value;
      });
      d.args.forEach(function(d) {
        !e[d.name] && (0, f.isNonNullType)(d.type) && a.reportError(new k.GraphQLError(c(b.name.value, d.name, d.type), [b]));
      });
    }}};
  };
  var k = b("module$node_modules$graphql$error$index"), l = (e = b("module$node_modules$graphql$jsutils$keyMap")) && e.__esModule ? e : {default:e}, f = b("module$node_modules$graphql$type$definition");
};

//# sourceMappingURL=module$node_modules$graphql$validation$rules$ProvidedNonNullArguments.js.map
