{
"version":3,
"file":"module$node_modules$graphql$validation$rules$NoUnusedVariables.js",
"lineCount":26,
"mappings":"AAAAA,cAAA,+DAAA,GAAmF,QAAQ,CAACC,CAAD,EAAQC,CAAR,EAAgBC,CAAhB,EAAwBC,CAAxB,EAA+BC,CAA/B,CAAwC;AAoBnIC,UAASA,EAAqB,CAACC,CAAD,EAAUC,CAAV,CAAkB;AAC9C,WAAOA,CAAA,GAAS,aAAT,GAAyBD,CAAzB,GAAmC,gCAAnC,GAAsEC,CAAtE,GAA+E,IAA/E,GAAsF,aAAtF,GAAsGD,CAAtG,GAAgH,kBAAvH;AAD8C;AAjBhDE,QAAAC,eAAA,CAAsBL,CAAtB,EAA+B,YAA/B,EAA6C,CAC3CM,MAAO,CAAA,CADoC,CAA7C,CAAA;AAGAN,GAAAC,sBAAA,GAAgCA,CAAhC;AACAD,GAAAO,kBAAA,GAuBAA,QAA0B,CAACC,CAAD,CAAU;AAClC,QAAIC,IAAe,EAAnB;AAEA,WAAO,CACLC,oBAAqB,CACnBC,MAAOA,QAAc,EAAG;AACtBF,OAAA,GAAe,EAAf;AADsB,KADL,EAInBG,MAAOA,QAAc,CAACC,CAAD,CAAY;AAC/B,UAAIC,IAAmBV,MAAAW,OAAA,CAAc,IAAd,CAAvB,EACIC,IAASR,CAAAS,2BAAA,CAAmCJ,CAAnC,CADb,EAEIV,IAASU,CAAAK,KAAA,GAAiBL,CAAAK,KAAAZ,MAAjB,GAAwC,IAFrD;AAIAU,OAAAG,QAAA,CAAe,QAAS,CAACC,CAAD,CAAO;AAG7BN,SAAA,CAFWM,CAAAC,KAEMH,KAAAZ,MAAjB,CAAA,GAAoC,CAAA,CAApC;AAH6B,OAA/B,CAAA;AAMAG,OAAAU,QAAA,CAAqB,QAAS,CAACG,CAAD,CAAc;AAC1C,YAAIC,IAAeD,CAAAE,SAAAN,KAAAZ,MAAnB;AACuC,SAAA,CAAvC,KAAIQ,CAAA,CAAiBS,CAAjB,CAAJ,IACEf,CAAAiB,YAAA,CAAoB,IAAIC,CAAAC,aAAJ,CAAwB1B,CAAA,CAAsBsB,CAAtB,EAAoCpB,CAApC,CAAxB,EAAqE,CAACmB,CAAD,CAArE,CAApB,CADF;AAF0C,OAA5C,CAAA;AAX+B,KAJd,CADhB,EAwBLM,mBAAoBA,QAA2B,CAACC,CAAD,CAAM;AACnDpB,OAAAqB,KAAA,CAAkBD,CAAlB,CAAA;AADmD,KAxBhD,CAAP;AAHkC,GAvBpC;AAEA,MAAIH,IAAS5B,CAAA,CAAQ,yCAAR,CAAb;AATmI,CAAnI;;",
"sources":["node_modules/graphql/validation/rules/NoUnusedVariables.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$validation$rules$NoUnusedVariables\"] = function(global,process,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.unusedVariableMessage = unusedVariableMessage;\nexports.NoUnusedVariables = NoUnusedVariables;\n\nvar _error = require('../../error');\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nfunction unusedVariableMessage(varName, opName) {\n  return opName ? 'Variable \"$' + varName + '\" is never used in operation \"' + opName + '\".' : 'Variable \"$' + varName + '\" is never used.';\n}\n\n/**\n * No unused variables\n *\n * A GraphQL operation is only valid if all variables defined by an operation\n * are used, either directly or within a spread fragment.\n */\nfunction NoUnusedVariables(context) {\n  var variableDefs = [];\n\n  return {\n    OperationDefinition: {\n      enter: function enter() {\n        variableDefs = [];\n      },\n      leave: function leave(operation) {\n        var variableNameUsed = Object.create(null);\n        var usages = context.getRecursiveVariableUsages(operation);\n        var opName = operation.name ? operation.name.value : null;\n\n        usages.forEach(function (_ref) {\n          var node = _ref.node;\n\n          variableNameUsed[node.name.value] = true;\n        });\n\n        variableDefs.forEach(function (variableDef) {\n          var variableName = variableDef.variable.name.value;\n          if (variableNameUsed[variableName] !== true) {\n            context.reportError(new _error.GraphQLError(unusedVariableMessage(variableName, opName), [variableDef]));\n          }\n        });\n      }\n    },\n    VariableDefinition: function VariableDefinition(def) {\n      variableDefs.push(def);\n    }\n  };\n}\n};"],
"names":["shadow$provide","global","process","require","module","exports","unusedVariableMessage","varName","opName","Object","defineProperty","value","NoUnusedVariables","context","variableDefs","OperationDefinition","enter","leave","operation","variableNameUsed","create","usages","getRecursiveVariableUsages","name","forEach","_ref","node","variableDef","variableName","variable","reportError","_error","GraphQLError","VariableDefinition","def","push"]
}
