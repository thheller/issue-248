{
"version":3,
"file":"module$node_modules$graphql$type$directives.js",
"lineCount":38,
"mappings":"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",
"sources":["node_modules/graphql/type/directives.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$type$directives\"] = function(global,process,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.specifiedDirectives = exports.GraphQLDeprecatedDirective = exports.DEFAULT_DEPRECATION_REASON = exports.GraphQLSkipDirective = exports.GraphQLIncludeDirective = exports.GraphQLDirective = undefined;\nexports.isDirective = isDirective;\nexports.isSpecifiedDirective = isSpecifiedDirective;\n\nvar _definition = require('./definition');\n\nvar _scalars = require('./scalars');\n\nvar _instanceOf = require('../jsutils/instanceOf');\n\nvar _instanceOf2 = _interopRequireDefault(_instanceOf);\n\nvar _invariant = require('../jsutils/invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _directiveLocation = require('../language/directiveLocation');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } } /**\n                                                                                                                                                           * Copyright (c) 2015-present, Facebook, Inc.\n                                                                                                                                                           *\n                                                                                                                                                           * This source code is licensed under the MIT license found in the\n                                                                                                                                                           * LICENSE file in the root directory of this source tree.\n                                                                                                                                                           *\n                                                                                                                                                           *  strict\n                                                                                                                                                           */\n\n// eslint-disable-next-line no-redeclare\n\n\n/**\n * Test if the given value is a GraphQL directive.\n */\nfunction isDirective(directive) {\n  return (0, _instanceOf2.default)(directive, GraphQLDirective);\n}\n\n/**\n * Directives are used by the GraphQL runtime as a way of modifying execution\n * behavior. Type system creators will usually not create these directly.\n */\n\nvar GraphQLDirective = exports.GraphQLDirective = function GraphQLDirective(config) {\n  _classCallCheck(this, GraphQLDirective);\n\n  this.name = config.name;\n  this.description = config.description;\n  this.locations = config.locations;\n  this.astNode = config.astNode;\n  !config.name ? (0, _invariant2.default)(0, 'Directive must be named.') : void 0;\n  !Array.isArray(config.locations) ? (0, _invariant2.default)(0, 'Must provide locations for directive.') : void 0;\n\n  var args = config.args;\n  if (!args) {\n    this.args = [];\n  } else {\n    !!Array.isArray(args) ? (0, _invariant2.default)(0, '@' + config.name + ' args must be an object with argument names as keys.') : void 0;\n    this.args = Object.keys(args).map(function (argName) {\n      var arg = args[argName];\n      return {\n        name: argName,\n        description: arg.description === undefined ? null : arg.description,\n        type: arg.type,\n        defaultValue: arg.defaultValue,\n        astNode: arg.astNode\n      };\n    });\n  }\n};\n\n/**\n * Used to conditionally include fields or fragments.\n */\nvar GraphQLIncludeDirective = exports.GraphQLIncludeDirective = new GraphQLDirective({\n  name: 'include',\n  description: 'Directs the executor to include this field or fragment only when ' + 'the `if` argument is true.',\n  locations: [_directiveLocation.DirectiveLocation.FIELD, _directiveLocation.DirectiveLocation.FRAGMENT_SPREAD, _directiveLocation.DirectiveLocation.INLINE_FRAGMENT],\n  args: {\n    if: {\n      type: (0, _definition.GraphQLNonNull)(_scalars.GraphQLBoolean),\n      description: 'Included when true.'\n    }\n  }\n});\n\n/**\n * Used to conditionally skip (exclude) fields or fragments.\n */\nvar GraphQLSkipDirective = exports.GraphQLSkipDirective = new GraphQLDirective({\n  name: 'skip',\n  description: 'Directs the executor to skip this field or fragment when the `if` ' + 'argument is true.',\n  locations: [_directiveLocation.DirectiveLocation.FIELD, _directiveLocation.DirectiveLocation.FRAGMENT_SPREAD, _directiveLocation.DirectiveLocation.INLINE_FRAGMENT],\n  args: {\n    if: {\n      type: (0, _definition.GraphQLNonNull)(_scalars.GraphQLBoolean),\n      description: 'Skipped when true.'\n    }\n  }\n});\n\n/**\n * Constant string used for default reason for a deprecation.\n */\nvar DEFAULT_DEPRECATION_REASON = exports.DEFAULT_DEPRECATION_REASON = 'No longer supported';\n\n/**\n * Used to declare element of a GraphQL schema as deprecated.\n */\nvar GraphQLDeprecatedDirective = exports.GraphQLDeprecatedDirective = new GraphQLDirective({\n  name: 'deprecated',\n  description: 'Marks an element of a GraphQL schema as no longer supported.',\n  locations: [_directiveLocation.DirectiveLocation.FIELD_DEFINITION, _directiveLocation.DirectiveLocation.ENUM_VALUE],\n  args: {\n    reason: {\n      type: _scalars.GraphQLString,\n      description: 'Explains why this element was deprecated, usually also including a ' + 'suggestion for how to access supported similar data. Formatted ' + 'in [Markdown](https://daringfireball.net/projects/markdown/).',\n      defaultValue: DEFAULT_DEPRECATION_REASON\n    }\n  }\n});\n\n/**\n * The full list of specified directives.\n */\nvar specifiedDirectives = exports.specifiedDirectives = [GraphQLIncludeDirective, GraphQLSkipDirective, GraphQLDeprecatedDirective];\n\nfunction isSpecifiedDirective(directive) {\n  return specifiedDirectives.some(function (specifiedDirective) {\n    return specifiedDirective.name === directive.name;\n  });\n}\n};"],
"names":["shadow$provide","global","process","require","module","exports","Object","defineProperty","value","specifiedDirectives","GraphQLDeprecatedDirective","DEFAULT_DEPRECATION_REASON","GraphQLSkipDirective","GraphQLIncludeDirective","GraphQLDirective","undefined","isDirective","directive","_instanceOf2","default","isSpecifiedDirective","some","specifiedDirective","name","_definition","_scalars","_instanceOf","__esModule","_invariant2","_invariant","_directiveLocation","exports.GraphQLDirective","config","instance","TypeError","description","locations","astNode","Array","isArray","args","keys","map","argName","arg","type","defaultValue","DirectiveLocation","FIELD","FRAGMENT_SPREAD","INLINE_FRAGMENT","if","GraphQLNonNull","GraphQLBoolean","FIELD_DEFINITION","ENUM_VALUE","reason","GraphQLString"]
}
