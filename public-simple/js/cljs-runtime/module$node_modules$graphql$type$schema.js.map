{
"version":3,
"file":"module$node_modules$graphql$type$schema.js",
"lineCount":124,
"mappings":"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",
"sources":["node_modules/graphql/type/schema.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$type$schema\"] = function(global,process,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GraphQLSchema = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.isSchema = isSchema;\n\nvar _definition = require('./definition');\n\nvar _directives = require('./directives');\n\nvar _introspection = require('./introspection');\n\nvar _find = require('../jsutils/find');\n\nvar _find2 = _interopRequireDefault(_find);\n\nvar _instanceOf = require('../jsutils/instanceOf');\n\nvar _instanceOf2 = _interopRequireDefault(_instanceOf);\n\nvar _invariant = require('../jsutils/invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _objectValues = require('../jsutils/objectValues');\n\nvar _objectValues2 = _interopRequireDefault(_objectValues);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } } /**\n                                                                                                                                                           * Copyright (c) 2015-present, Facebook, Inc.\n                                                                                                                                                           *\n                                                                                                                                                           * This source code is licensed under the MIT license found in the\n                                                                                                                                                           * LICENSE file in the root directory of this source tree.\n                                                                                                                                                           *\n                                                                                                                                                           *  strict\n                                                                                                                                                           */\n\n// eslint-disable-next-line no-redeclare\n\n\n/**\n * Test if the given value is a GraphQL schema.\n */\nfunction isSchema(schema) {\n  return (0, _instanceOf2.default)(schema, GraphQLSchema);\n}\n\n/**\n * Schema Definition\n *\n * A Schema is created by supplying the root types of each type of operation,\n * query and mutation (optional). A schema definition is then supplied to the\n * validator and executor.\n *\n * Example:\n *\n *     const MyAppSchema = new GraphQLSchema({\n *       query: MyAppQueryRootType,\n *       mutation: MyAppMutationRootType,\n *     })\n *\n * Note: If an array of `directives` are provided to GraphQLSchema, that will be\n * the exact list of directives represented and allowed. If `directives` is not\n * provided then a default set of the specified directives (e.g. @include and\n * @skip) will be used. If you wish to provide *additional* directives to these\n * specified directives, you must explicitly declare them. Example:\n *\n *     const MyAppSchema = new GraphQLSchema({\n *       ...\n *       directives: specifiedDirectives.concat([ myCustomDirective ]),\n *     })\n *\n */\n\nvar GraphQLSchema = exports.GraphQLSchema = function () {\n  // Used as a cache for validateSchema().\n  function GraphQLSchema(config) {\n    var _this = this;\n\n    _classCallCheck(this, GraphQLSchema);\n\n    // If this schema was built from a source known to be valid, then it may be\n    // marked with assumeValid to avoid an additional type system validation.\n    if (config && config.assumeValid) {\n      this.__validationErrors = [];\n    } else {\n      // Otherwise check for common mistakes during construction to produce\n      // clear and early error messages.\n      !((typeof config === 'undefined' ? 'undefined' : _typeof(config)) === 'object') ? (0, _invariant2.default)(0, 'Must provide configuration object.') : void 0;\n      !(!config.types || Array.isArray(config.types)) ? (0, _invariant2.default)(0, '\"types\" must be Array if provided but got: ' + String(config.types) + '.') : void 0;\n      !(!config.directives || Array.isArray(config.directives)) ? (0, _invariant2.default)(0, '\"directives\" must be Array if provided but got: ' + (String(config.directives) + '.')) : void 0;\n      !(!config.allowedLegacyNames || Array.isArray(config.allowedLegacyNames)) ? (0, _invariant2.default)(0, '\"allowedLegacyNames\" must be Array if provided but got: ' + (String(config.allowedLegacyNames) + '.')) : void 0;\n    }\n\n    this.__allowedLegacyNames = config.allowedLegacyNames;\n    this._queryType = config.query;\n    this._mutationType = config.mutation;\n    this._subscriptionType = config.subscription;\n    // Provide specified directives (e.g. @include and @skip) by default.\n    this._directives = config.directives || _directives.specifiedDirectives;\n    this.astNode = config.astNode;\n\n    // Build type map now to detect any errors within this schema.\n    var initialTypes = [this.getQueryType(), this.getMutationType(), this.getSubscriptionType(), _introspection.__Schema];\n\n    var types = config.types;\n    if (types) {\n      initialTypes = initialTypes.concat(types);\n    }\n\n    // Keep track of all types referenced within the schema.\n    var typeMap = Object.create(null);\n\n    // First by deeply visiting all initial types.\n    typeMap = initialTypes.reduce(typeMapReducer, typeMap);\n\n    // Then by deeply visiting all directive types.\n    typeMap = this._directives.reduce(typeMapDirectiveReducer, typeMap);\n\n    // Storing the resulting map for reference by the schema.\n    this._typeMap = typeMap;\n\n    // Keep track of all implementations by interface name.\n    this._implementations = Object.create(null);\n    Object.keys(this._typeMap).forEach(function (typeName) {\n      var type = _this._typeMap[typeName];\n      if ((0, _definition.isObjectType)(type)) {\n        type.getInterfaces().forEach(function (iface) {\n          if ((0, _definition.isInterfaceType)(iface)) {\n            var impls = _this._implementations[iface.name];\n            if (impls) {\n              impls.push(type);\n            } else {\n              _this._implementations[iface.name] = [type];\n            }\n          }\n        });\n      }\n    });\n  }\n  // Referenced by validateSchema().\n\n\n  GraphQLSchema.prototype.getQueryType = function getQueryType() {\n    return this._queryType;\n  };\n\n  GraphQLSchema.prototype.getMutationType = function getMutationType() {\n    return this._mutationType;\n  };\n\n  GraphQLSchema.prototype.getSubscriptionType = function getSubscriptionType() {\n    return this._subscriptionType;\n  };\n\n  GraphQLSchema.prototype.getTypeMap = function getTypeMap() {\n    return this._typeMap;\n  };\n\n  GraphQLSchema.prototype.getType = function getType(name) {\n    return this.getTypeMap()[name];\n  };\n\n  GraphQLSchema.prototype.getPossibleTypes = function getPossibleTypes(abstractType) {\n    if ((0, _definition.isUnionType)(abstractType)) {\n      return abstractType.getTypes();\n    }\n    return this._implementations[abstractType.name];\n  };\n\n  GraphQLSchema.prototype.isPossibleType = function isPossibleType(abstractType, possibleType) {\n    var possibleTypeMap = this._possibleTypeMap;\n    if (!possibleTypeMap) {\n      this._possibleTypeMap = possibleTypeMap = Object.create(null);\n    }\n\n    if (!possibleTypeMap[abstractType.name]) {\n      var possibleTypes = this.getPossibleTypes(abstractType);\n      !Array.isArray(possibleTypes) ? (0, _invariant2.default)(0, 'Could not find possible implementing types for ' + abstractType.name + ' ' + 'in schema. Check that schema.types is defined and is an array of ' + 'all possible types in the schema.') : void 0;\n      possibleTypeMap[abstractType.name] = possibleTypes.reduce(function (map, type) {\n        return map[type.name] = true, map;\n      }, Object.create(null));\n    }\n\n    return Boolean(possibleTypeMap[abstractType.name][possibleType.name]);\n  };\n\n  GraphQLSchema.prototype.getDirectives = function getDirectives() {\n    return this._directives;\n  };\n\n  GraphQLSchema.prototype.getDirective = function getDirective(name) {\n    return (0, _find2.default)(this.getDirectives(), function (directive) {\n      return directive.name === name;\n    });\n  };\n\n  return GraphQLSchema;\n}();\n\nfunction typeMapReducer(map, type) {\n  if (!type) {\n    return map;\n  }\n  if ((0, _definition.isWrappingType)(type)) {\n    return typeMapReducer(map, type.ofType);\n  }\n  if (map[type.name]) {\n    !(map[type.name] === type) ? (0, _invariant2.default)(0, 'Schema must contain unique named types but contains multiple ' + ('types named \"' + type.name + '\".')) : void 0;\n    return map;\n  }\n  map[type.name] = type;\n\n  var reducedMap = map;\n\n  if ((0, _definition.isUnionType)(type)) {\n    reducedMap = type.getTypes().reduce(typeMapReducer, reducedMap);\n  }\n\n  if ((0, _definition.isObjectType)(type)) {\n    reducedMap = type.getInterfaces().reduce(typeMapReducer, reducedMap);\n  }\n\n  if ((0, _definition.isObjectType)(type) || (0, _definition.isInterfaceType)(type)) {\n    (0, _objectValues2.default)(type.getFields()).forEach(function (field) {\n      if (field.args) {\n        var fieldArgTypes = field.args.map(function (arg) {\n          return arg.type;\n        });\n        reducedMap = fieldArgTypes.reduce(typeMapReducer, reducedMap);\n      }\n      reducedMap = typeMapReducer(reducedMap, field.type);\n    });\n  }\n\n  if ((0, _definition.isInputObjectType)(type)) {\n    (0, _objectValues2.default)(type.getFields()).forEach(function (field) {\n      reducedMap = typeMapReducer(reducedMap, field.type);\n    });\n  }\n\n  return reducedMap;\n}\n\nfunction typeMapDirectiveReducer(map, directive) {\n  // Directives are not validated until validateSchema() is called.\n  if (!(0, _directives.isDirective)(directive)) {\n    return map;\n  }\n  return directive.args.reduce(function (_map, arg) {\n    return typeMapReducer(_map, arg.type);\n  }, map);\n}\n};"],
"names":["shadow$provide","global","process","require","module","exports","_interopRequireDefault","obj","__esModule","default","typeMapReducer","map","type","_definition","isWrappingType","ofType","name","_invariant2","reducedMap","isUnionType","getTypes","reduce","isObjectType","getInterfaces","isInterfaceType","_objectValues2","getFields","forEach","field","args","fieldArgTypes","arg","isInputObjectType","typeMapDirectiveReducer","directive","_directives","isDirective","_map","Object","defineProperty","value","GraphQLSchema","undefined","_typeof","Symbol","iterator","constructor","prototype","isSchema","schema","_instanceOf2","_introspection","_find","_find2","_instanceOf","_invariant","_objectValues","config","_this","instance","TypeError","assumeValid","__validationErrors","types","Array","isArray","String","directives","allowedLegacyNames","__allowedLegacyNames","_queryType","query","_mutationType","mutation","_subscriptionType","subscription","specifiedDirectives","astNode","initialTypes","getQueryType","getMutationType","getSubscriptionType","__Schema","concat","typeMap","create","_typeMap","_implementations","keys","typeName","iface","impls","push","GraphQLSchema.prototype.getQueryType","GraphQLSchema.prototype.getMutationType","GraphQLSchema.prototype.getSubscriptionType","getTypeMap","GraphQLSchema.prototype.getTypeMap","getType","GraphQLSchema.prototype.getType","getPossibleTypes","GraphQLSchema.prototype.getPossibleTypes","abstractType","isPossibleType","GraphQLSchema.prototype.isPossibleType","possibleType","possibleTypeMap","_possibleTypeMap","possibleTypes","getDirectives","GraphQLSchema.prototype.getDirectives","getDirective","GraphQLSchema.prototype.getDirective"]
}
