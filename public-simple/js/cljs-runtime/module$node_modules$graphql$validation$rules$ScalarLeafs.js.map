{
"version":3,
"file":"module$node_modules$graphql$validation$rules$ScalarLeafs.js",
"lineCount":19,
"mappings":"AAAAA,cAAA,yDAAA,GAA6E,QAAQ,CAACC,CAAD,EAAQC,CAAR,EAAgBC,CAAhB,EAAwBC,CAAxB,EAA+BC,CAA/B,CAAwC;AAc7HC,UAASA,EAA4B,CAACC,CAAD,EAAYC,CAAZ,CAAkB;AACrD,WAAO,SAAP,GAAmBD,CAAnB,GAA+B,oCAA/B,IAAuE,QAAvE,GAAkFE,MAAA,CAAOD,CAAP,CAAlF,GAAiG,qBAAjG;AADqD;AAWvDE,UAASA,EAA2B,CAACH,CAAD,EAAYC,CAAZ,CAAkB;AACpD,WAAO,SAAP,GAAmBD,CAAnB,GAA+B,aAA/B,GAA+CE,MAAA,CAAOD,CAAP,CAA/C,GAA8D,gBAA9D,IAAkF,wCAAlF,GAA6HD,CAA7H,GAAyI,YAAzI;AADoD;AAtBtDI,QAAAC,eAAA,CAAsBP,CAAtB,EAA+B,YAA/B,EAA6C,CAC3CQ,MAAO,CAAA,CADoC,CAA7C,CAAA;AAGAR,GAAAC,6BAAA,GAAuCA,CAAvC;AACAD,GAAAK,4BAAA,GAAsCA,CAAtC;AACAL,GAAAS,YAAA,GA2BAA,QAAoB,CAACC,CAAD,CAAU;AAC5B,WAAO,CACLC,MAAOA,QAAc,CAACC,CAAD,CAAO;AAC1B,UAAIT,IAAOO,CAAAG,QAAA,EAAX,EACIC,IAAeF,CAAAE,aADnB;AAEIX,OAAJ,KACM,CAAC,CAAA,EAAGY,CAAAC,WAAJ,EAA4B,CAAC,CAAA,EAAGD,CAAAE,aAAJ,EAA8Bd,CAA9B,CAA5B,CAAJ,GACMW,CADN,IAEIJ,CAAAQ,YAAA,CAAoB,IAAIC,CAAAC,aAAJ,CAAwBnB,CAAA,CAA6BW,CAAAS,KAAAb,MAA7B,EAA8CL,CAA9C,CAAxB,EAA6E,CAACW,CAAD,CAA7E,CAApB,CAFJ,GAIYA,CAJZ,IAKEJ,CAAAQ,YAAA,CAAoB,IAAIC,CAAAC,aAAJ,CAAwBf,CAAA,CAA4BO,CAAAS,KAAAb,MAA5B,EAA6CL,CAA7C,CAAxB,EAA4E,CAACS,CAAD,CAA5E,CAApB,CANJ;AAH0B,KADvB,CAAP;AAD4B,GA3B9B;AAEA,MAAIO,IAASrB,CAAA,CAAQ,yCAAR,CAAb,EAEIiB,IAAcjB,CAAA,CAAQ,6CAAR,CAFlB;AAV6H,CAA7H;;",
"sources":["node_modules/graphql/validation/rules/ScalarLeafs.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$validation$rules$ScalarLeafs\"] = function(global,process,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.noSubselectionAllowedMessage = noSubselectionAllowedMessage;\nexports.requiredSubselectionMessage = requiredSubselectionMessage;\nexports.ScalarLeafs = ScalarLeafs;\n\nvar _error = require('../../error');\n\nvar _definition = require('../../type/definition');\n\nfunction noSubselectionAllowedMessage(fieldName, type) {\n  return 'Field \"' + fieldName + '\" must not have a selection since ' + ('type \"' + String(type) + '\" has no subfields.');\n} /**\n   * Copyright (c) 2015-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   *  strict\n   */\n\nfunction requiredSubselectionMessage(fieldName, type) {\n  return 'Field \"' + fieldName + '\" of type \"' + String(type) + '\" must have a ' + ('selection of subfields. Did you mean \"' + fieldName + ' { ... }\"?');\n}\n\n/**\n * Scalar leafs\n *\n * A GraphQL document is valid only if all leaf fields (fields without\n * sub selections) are of scalar or enum types.\n */\nfunction ScalarLeafs(context) {\n  return {\n    Field: function Field(node) {\n      var type = context.getType();\n      var selectionSet = node.selectionSet;\n      if (type) {\n        if ((0, _definition.isLeafType)((0, _definition.getNamedType)(type))) {\n          if (selectionSet) {\n            context.reportError(new _error.GraphQLError(noSubselectionAllowedMessage(node.name.value, type), [selectionSet]));\n          }\n        } else if (!selectionSet) {\n          context.reportError(new _error.GraphQLError(requiredSubselectionMessage(node.name.value, type), [node]));\n        }\n      }\n    }\n  };\n}\n};"],
"names":["shadow$provide","global","process","require","module","exports","noSubselectionAllowedMessage","fieldName","type","String","requiredSubselectionMessage","Object","defineProperty","value","ScalarLeafs","context","Field","node","getType","selectionSet","_definition","isLeafType","getNamedType","reportError","_error","GraphQLError","name"]
}
