shadow$provide.module$node_modules$graphql$language$printer = function(e, r, b, u, a) {
  function g(a) {
    return function(d) {
      return c([d.description, a(d)], "\n");
    };
  }
  function c(a, b) {
    return a ? a.filter(function(a) {
      return a;
    }).join(b || "") : "";
  }
  function k(a) {
    return a && 0 !== a.length ? "{\n" + f(c(a, "\n")) + "\n}" : "";
  }
  function l(a, b, f) {
    return b ? a + b + (f || "") : "";
  }
  function f(a) {
    return a && "  " + a.replace(/\n/g, "\n  ");
  }
  Object.defineProperty(a, "__esModule", {value:!0});
  a.print = function(a) {
    return (0, h.visit)(a, {leave:m});
  };
  var h = b("module$node_modules$graphql$language$visitor"), m = {Name:function(a) {
    return a.value;
  }, Variable:function(a) {
    return "$" + a.name;
  }, Document:function(a) {
    return c(a.definitions, "\n\n") + "\n";
  }, OperationDefinition:function(a) {
    var d = a.operation, b = a.name, f = l("(", c(a.variableDefinitions, ", "), ")"), h = c(a.directives, " ");
    a = a.selectionSet;
    return b || h || f || "query" !== d ? c([d, c([b, f]), h, a], " ") : a;
  }, VariableDefinition:function(a) {
    return a.variable + ": " + a.type + l(" \x3d ", a.defaultValue);
  }, SelectionSet:function(a) {
    return k(a.selections);
  }, Field:function(a) {
    var d = a.name, b = a.arguments, f = a.directives, h = a.selectionSet;
    return c([l("", a.alias, ": ") + d + l("(", c(b, ", "), ")"), c(f, " "), h], " ");
  }, Argument:function(a) {
    return a.name + ": " + a.value;
  }, FragmentSpread:function(a) {
    return "..." + a.name + l(" ", c(a.directives, " "));
  }, InlineFragment:function(a) {
    var b = a.directives, d = a.selectionSet;
    return c(["...", l("on ", a.typeCondition), c(b, " "), d], " ");
  }, FragmentDefinition:function(a) {
    var b = a.typeCondition, d = a.directives, f = a.selectionSet;
    return "fragment " + a.name + l("(", c(a.variableDefinitions, ", "), ")") + " " + ("on " + b + " " + l("", c(d, " "), " ")) + f;
  }, IntValue:function(a) {
    return a.value;
  }, FloatValue:function(a) {
    return a.value;
  }, StringValue:function(a, b) {
    var d = a.value;
    a.block ? (a = "description" === b, b = d.replace(/"""/g, '\\"""'), d = " " !== d[0] && "\t" !== d[0] || -1 !== d.indexOf("\n") ? '"""\n' + (a ? b : f(b)) + '\n"""' : '"""' + b.replace(/"$/, '"\n') + '"""') : d = JSON.stringify(d);
    return d;
  }, BooleanValue:function(a) {
    return a.value ? "true" : "false";
  }, NullValue:function() {
    return "null";
  }, EnumValue:function(a) {
    return a.value;
  }, ListValue:function(a) {
    return "[" + c(a.values, ", ") + "]";
  }, ObjectValue:function(a) {
    return "{" + c(a.fields, ", ") + "}";
  }, ObjectField:function(a) {
    return a.name + ": " + a.value;
  }, Directive:function(a) {
    return "@" + a.name + l("(", c(a.arguments, ", "), ")");
  }, NamedType:function(a) {
    return a.name;
  }, ListType:function(a) {
    return "[" + a.type + "]";
  }, NonNullType:function(a) {
    return a.type + "!";
  }, SchemaDefinition:function(a) {
    var b = a.operationTypes;
    return c(["schema", c(a.directives, " "), k(b)], " ");
  }, OperationTypeDefinition:function(a) {
    return a.operation + ": " + a.type;
  }, ScalarTypeDefinition:g(function(a) {
    return c(["scalar", a.name, c(a.directives, " ")], " ");
  }), ObjectTypeDefinition:g(function(a) {
    var b = a.directives, d = a.fields;
    return c(["type", a.name, l("implements ", c(a.interfaces, " \x26 ")), c(b, " "), k(d)], " ");
  }), FieldDefinition:g(function(a) {
    var b = a.type, d = a.directives;
    return a.name + l("(", c(a.arguments, ", "), ")") + ": " + b + l(" ", c(d, " "));
  }), InputValueDefinition:g(function(a) {
    var b = a.directives;
    return c([a.name + ": " + a.type, l("\x3d ", a.defaultValue), c(b, " ")], " ");
  }), InterfaceTypeDefinition:g(function(a) {
    var b = a.fields;
    return c(["interface", a.name, c(a.directives, " "), k(b)], " ");
  }), UnionTypeDefinition:g(function(a) {
    var b = a.types;
    return c(["union", a.name, c(a.directives, " "), b && 0 !== b.length ? "\x3d " + c(b, " | ") : ""], " ");
  }), EnumTypeDefinition:g(function(a) {
    var b = a.values;
    return c(["enum", a.name, c(a.directives, " "), k(b)], " ");
  }), EnumValueDefinition:g(function(a) {
    return c([a.name, c(a.directives, " ")], " ");
  }), InputObjectTypeDefinition:g(function(a) {
    var b = a.fields;
    return c(["input", a.name, c(a.directives, " "), k(b)], " ");
  }), ScalarTypeExtension:function(a) {
    return c(["extend scalar", a.name, c(a.directives, " ")], " ");
  }, ObjectTypeExtension:function(a) {
    var b = a.directives, f = a.fields;
    return c(["extend type", a.name, l("implements ", c(a.interfaces, " \x26 ")), c(b, " "), k(f)], " ");
  }, InterfaceTypeExtension:function(a) {
    var b = a.fields;
    return c(["extend interface", a.name, c(a.directives, " "), k(b)], " ");
  }, UnionTypeExtension:function(a) {
    var b = a.types;
    return c(["extend union", a.name, c(a.directives, " "), b && 0 !== b.length ? "\x3d " + c(b, " | ") : ""], " ");
  }, EnumTypeExtension:function(a) {
    var b = a.values;
    return c(["extend enum", a.name, c(a.directives, " "), k(b)], " ");
  }, InputObjectTypeExtension:function(a) {
    var b = a.fields;
    return c(["extend input", a.name, c(a.directives, " "), k(b)], " ");
  }, DirectiveDefinition:g(function(a) {
    var b = a.locations;
    return "directive @" + a.name + l("(", c(a.arguments, ", "), ")") + " on " + c(b, " | ");
  })};
};

//# sourceMappingURL=module$node_modules$graphql$language$printer.js.map
