{
"version":3,
"file":"module$node_modules$graphql$utilities$schemaPrinter.js",
"lineCount":158,
"mappings":"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",
"sources":["node_modules/graphql/utilities/schemaPrinter.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$utilities$schemaPrinter\"] = function(global,process,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.printSchema = printSchema;\nexports.printIntrospectionSchema = printIntrospectionSchema;\nexports.printType = printType;\n\nvar _isNullish = require('../jsutils/isNullish');\n\nvar _isNullish2 = _interopRequireDefault(_isNullish);\n\nvar _isInvalid = require('../jsutils/isInvalid');\n\nvar _isInvalid2 = _interopRequireDefault(_isInvalid);\n\nvar _objectValues = require('../jsutils/objectValues');\n\nvar _objectValues2 = _interopRequireDefault(_objectValues);\n\nvar _astFromValue = require('../utilities/astFromValue');\n\nvar _printer = require('../language/printer');\n\nvar _definition = require('../type/definition');\n\nvar _scalars = require('../type/scalars');\n\nvar _directives = require('../type/directives');\n\nvar _introspection = require('../type/introspection');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Accepts options as a second argument:\n *\n *    - commentDescriptions:\n *        Provide true to use preceding comments as the description.\n *\n */\nfunction printSchema(schema, options) {\n  return printFilteredSchema(schema, function (n) {\n    return !(0, _directives.isSpecifiedDirective)(n);\n  }, isDefinedType, options);\n} /**\n   * Copyright (c) 2015-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   *  strict\n   */\n\nfunction printIntrospectionSchema(schema, options) {\n  return printFilteredSchema(schema, _directives.isSpecifiedDirective, _introspection.isIntrospectionType, options);\n}\n\nfunction isDefinedType(type) {\n  return !(0, _scalars.isSpecifiedScalarType)(type) && !(0, _introspection.isIntrospectionType)(type);\n}\n\nfunction printFilteredSchema(schema, directiveFilter, typeFilter, options) {\n  var directives = schema.getDirectives().filter(directiveFilter);\n  var typeMap = schema.getTypeMap();\n  var types = (0, _objectValues2.default)(typeMap).sort(function (type1, type2) {\n    return type1.name.localeCompare(type2.name);\n  }).filter(typeFilter);\n\n  return [printSchemaDefinition(schema)].concat(directives.map(function (directive) {\n    return printDirective(directive, options);\n  }), types.map(function (type) {\n    return printType(type, options);\n  })).filter(Boolean).join('\\n\\n') + '\\n';\n}\n\nfunction printSchemaDefinition(schema) {\n  if (isSchemaOfCommonNames(schema)) {\n    return;\n  }\n\n  var operationTypes = [];\n\n  var queryType = schema.getQueryType();\n  if (queryType) {\n    operationTypes.push('  query: ' + queryType.name);\n  }\n\n  var mutationType = schema.getMutationType();\n  if (mutationType) {\n    operationTypes.push('  mutation: ' + mutationType.name);\n  }\n\n  var subscriptionType = schema.getSubscriptionType();\n  if (subscriptionType) {\n    operationTypes.push('  subscription: ' + subscriptionType.name);\n  }\n\n  return 'schema {\\n' + operationTypes.join('\\n') + '\\n}';\n}\n\n/**\n * GraphQL schema define root types for each type of operation. These types are\n * the same as any other type and can be named in any manner, however there is\n * a common naming convention:\n *\n *   schema {\n *     query: Query\n *     mutation: Mutation\n *   }\n *\n * When using this naming convention, the schema description can be omitted.\n */\nfunction isSchemaOfCommonNames(schema) {\n  var queryType = schema.getQueryType();\n  if (queryType && queryType.name !== 'Query') {\n    return false;\n  }\n\n  var mutationType = schema.getMutationType();\n  if (mutationType && mutationType.name !== 'Mutation') {\n    return false;\n  }\n\n  var subscriptionType = schema.getSubscriptionType();\n  if (subscriptionType && subscriptionType.name !== 'Subscription') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction printType(type, options) {\n  if ((0, _definition.isScalarType)(type)) {\n    return printScalar(type, options);\n  } else if ((0, _definition.isObjectType)(type)) {\n    return printObject(type, options);\n  } else if ((0, _definition.isInterfaceType)(type)) {\n    return printInterface(type, options);\n  } else if ((0, _definition.isUnionType)(type)) {\n    return printUnion(type, options);\n  } else if ((0, _definition.isEnumType)(type)) {\n    return printEnum(type, options);\n  } else if ((0, _definition.isInputObjectType)(type)) {\n    return printInputObject(type, options);\n  }\n  /* istanbul ignore next */\n  throw new Error('Unknown type: ' + type + '.');\n}\n\nfunction printScalar(type, options) {\n  return printDescription(options, type) + ('scalar ' + type.name);\n}\n\nfunction printObject(type, options) {\n  var interfaces = type.getInterfaces();\n  var implementedInterfaces = interfaces.length ? ' implements ' + interfaces.map(function (i) {\n    return i.name;\n  }).join(' & ') : '';\n  return printDescription(options, type) + ('type ' + type.name + implementedInterfaces + ' {\\n') + printFields(options, type) + '\\n' + '}';\n}\n\nfunction printInterface(type, options) {\n  return printDescription(options, type) + ('interface ' + type.name + ' {\\n') + printFields(options, type) + '\\n' + '}';\n}\n\nfunction printUnion(type, options) {\n  return printDescription(options, type) + ('union ' + type.name + ' = ' + type.getTypes().join(' | '));\n}\n\nfunction printEnum(type, options) {\n  return printDescription(options, type) + ('enum ' + type.name + ' {\\n') + printEnumValues(type.getValues(), options) + '\\n' + '}';\n}\n\nfunction printEnumValues(values, options) {\n  return values.map(function (value, i) {\n    return printDescription(options, value, '  ', !i) + '  ' + value.name + printDeprecated(value);\n  }).join('\\n');\n}\n\nfunction printInputObject(type, options) {\n  var fields = (0, _objectValues2.default)(type.getFields());\n  return printDescription(options, type) + ('input ' + type.name + ' {\\n') + fields.map(function (f, i) {\n    return printDescription(options, f, '  ', !i) + '  ' + printInputValue(f);\n  }).join('\\n') + '\\n' + '}';\n}\n\nfunction printFields(options, type) {\n  var fields = (0, _objectValues2.default)(type.getFields());\n  return fields.map(function (f, i) {\n    return printDescription(options, f, '  ', !i) + '  ' + f.name + printArgs(options, f.args, '  ') + ': ' + String(f.type) + printDeprecated(f);\n  }).join('\\n');\n}\n\nfunction printArgs(options, args) {\n  var indentation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n\n  if (args.length === 0) {\n    return '';\n  }\n\n  // If every arg does not have a description, print them on one line.\n  if (args.every(function (arg) {\n    return !arg.description;\n  })) {\n    return '(' + args.map(printInputValue).join(', ') + ')';\n  }\n\n  return '(\\n' + args.map(function (arg, i) {\n    return printDescription(options, arg, '  ' + indentation, !i) + '  ' + indentation + printInputValue(arg);\n  }).join('\\n') + '\\n' + indentation + ')';\n}\n\nfunction printInputValue(arg) {\n  var argDecl = arg.name + ': ' + String(arg.type);\n  if (!(0, _isInvalid2.default)(arg.defaultValue)) {\n    argDecl += ' = ' + (0, _printer.print)((0, _astFromValue.astFromValue)(arg.defaultValue, arg.type));\n  }\n  return argDecl;\n}\n\nfunction printDirective(directive, options) {\n  return printDescription(options, directive) + 'directive @' + directive.name + printArgs(options, directive.args) + ' on ' + directive.locations.join(' | ');\n}\n\nfunction printDeprecated(fieldOrEnumVal) {\n  if (!fieldOrEnumVal.isDeprecated) {\n    return '';\n  }\n  var reason = fieldOrEnumVal.deprecationReason;\n  if ((0, _isNullish2.default)(reason) || reason === '' || reason === _directives.DEFAULT_DEPRECATION_REASON) {\n    return ' @deprecated';\n  }\n  return ' @deprecated(reason: ' + (0, _printer.print)((0, _astFromValue.astFromValue)(reason, _scalars.GraphQLString)) + ')';\n}\n\nfunction printDescription(options, def) {\n  var indentation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  var firstInBlock = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n  if (!def.description) {\n    return '';\n  }\n\n  var lines = descriptionLines(def.description, 120 - indentation.length);\n  if (options && options.commentDescriptions) {\n    return printDescriptionWithComments(lines, indentation, firstInBlock);\n  }\n\n  var description = indentation && !firstInBlock ? '\\n' + indentation + '\"\"\"' : indentation + '\"\"\"';\n\n  // In some circumstances, a single line can be used for the description.\n  if (lines.length === 1 && lines[0].length < 70 && lines[0][lines[0].length - 1] !== '\"') {\n    return description + escapeQuote(lines[0]) + '\"\"\"\\n';\n  }\n\n  // Format a multi-line block quote to account for leading space.\n  var hasLeadingSpace = lines[0][0] === ' ' || lines[0][0] === '\\t';\n  if (!hasLeadingSpace) {\n    description += '\\n';\n  }\n  for (var i = 0; i < lines.length; i++) {\n    if (i !== 0 || !hasLeadingSpace) {\n      description += indentation;\n    }\n    description += escapeQuote(lines[i]) + '\\n';\n  }\n  description += indentation + '\"\"\"\\n';\n  return description;\n}\n\nfunction escapeQuote(line) {\n  return line.replace(/\"\"\"/g, '\\\\\"\"\"');\n}\n\nfunction printDescriptionWithComments(lines, indentation, firstInBlock) {\n  var description = indentation && !firstInBlock ? '\\n' : '';\n  for (var i = 0; i < lines.length; i++) {\n    if (lines[i] === '') {\n      description += indentation + '#\\n';\n    } else {\n      description += indentation + '# ' + lines[i] + '\\n';\n    }\n  }\n  return description;\n}\n\nfunction descriptionLines(description, maxLen) {\n  var lines = [];\n  var rawLines = description.split('\\n');\n  for (var i = 0; i < rawLines.length; i++) {\n    if (rawLines[i] === '') {\n      lines.push(rawLines[i]);\n    } else {\n      // For > 120 character long lines, cut at space boundaries into sublines\n      // of ~80 chars.\n      var sublines = breakLine(rawLines[i], maxLen);\n      for (var j = 0; j < sublines.length; j++) {\n        lines.push(sublines[j]);\n      }\n    }\n  }\n  return lines;\n}\n\nfunction breakLine(line, maxLen) {\n  if (line.length < maxLen + 5) {\n    return [line];\n  }\n  var parts = line.split(new RegExp('((?: |^).{15,' + (maxLen - 40) + '}(?= |$))'));\n  if (parts.length < 4) {\n    return [line];\n  }\n  var sublines = [parts[0] + parts[1] + parts[2]];\n  for (var i = 3; i < parts.length; i += 2) {\n    sublines.push(parts[i].slice(1) + parts[i + 1]);\n  }\n  return sublines;\n}\n};"],
"names":["shadow$provide","global","process","require","module","exports","_interopRequireDefault","obj","__esModule","default","isDefinedType","type","_scalars","isSpecifiedScalarType","_introspection","isIntrospectionType","printFilteredSchema","schema","directiveFilter","typeFilter","options","directives","getDirectives","filter","typeMap","getTypeMap","types","_objectValues2","sort","type1","type2","name","localeCompare","printSchemaDefinition","concat","map","directive","printDescription","printArgs","args","locations","join","printType","Boolean","queryType","getQueryType","mutationType","getMutationType","subscriptionType","getSubscriptionType","operationTypes","push","_definition","isScalarType","isObjectType","printObject","isInterfaceType","printFields","isUnionType","getTypes","isEnumType","printEnumValues","getValues","isInputObjectType","printInputObject","Error","interfaces","getInterfaces","implementedInterfaces","length","i","values","value","printDeprecated","fields","getFields","f","printInputValue","String","indentation","arguments","undefined","every","arg","description","argDecl","_isInvalid2","defaultValue","_printer","print","_astFromValue","astFromValue","fieldOrEnumVal","isDeprecated","reason","deprecationReason","_isNullish2","_directives","DEFAULT_DEPRECATION_REASON","GraphQLString","def","firstInBlock","lines","rawLines","split","line","maxLen","parts","RegExp","sublines","slice","j","commentDescriptions","replace","hasLeadingSpace","Object","defineProperty","printSchema","n","isSpecifiedDirective","printIntrospectionSchema","_isNullish","_isInvalid","_objectValues"]
}
