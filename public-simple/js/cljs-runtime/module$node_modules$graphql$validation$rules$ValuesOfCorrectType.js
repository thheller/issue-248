shadow$provide.module$node_modules$graphql$validation$rules$ValuesOfCorrectType = function(e, r, b, u, a) {
  function g(a) {
    return a && a.__esModule ? a : {default:a};
  }
  function c(a, b, c) {
    return "Expected type " + a + ", found " + b + (c ? "; " + c : ".");
  }
  function k(a, b, c) {
    return "Field " + a + "." + b + " of required type " + (c + " was not provided.");
  }
  function l(a, b, c) {
    return 'Field "' + b + '" is not defined by type ' + a + (c ? "; " + c : ".");
  }
  function f(a, b) {
    var f = a.getInputType();
    if (f) {
      var e = (0, q.getNamedType)(f);
      if ((0, q.isScalarType)(e)) {
        try {
          var g = e.parseLiteral(b, void 0);
          (0, z.default)(g) && a.reportError(new m.GraphQLError(c(String(f), (0, d.print)(b)), b));
        } catch (F) {
          a.reportError(new m.GraphQLError(c(String(f), (0, d.print)(b), F.message), b, void 0, void 0, void 0, F));
        }
      } else {
        a.reportError(new m.GraphQLError(c(String(f), (0, d.print)(b), h(e, b)), b));
      }
    }
  }
  function h(a, b) {
    if ((0, q.isEnumType)(a) && (a = (0, n.default)((0, d.print)(b), a.getValues().map(function(a) {
      return a.name;
    })), 0 !== a.length)) {
      return "Did you mean the enum value " + (0, y.default)(a) + "?";
    }
  }
  Object.defineProperty(a, "__esModule", {value:!0});
  a.badValueMessage = c;
  a.requiredFieldMessage = k;
  a.unknownFieldMessage = l;
  a.ValuesOfCorrectType = function(a) {
    return {NullValue:function(b) {
      var f = a.getInputType();
      (0, q.isNonNullType)(f) && a.reportError(new m.GraphQLError(c(String(f), (0, d.print)(b)), b));
    }, ListValue:function(b) {
      var c = (0, q.getNullableType)(a.getParentInputType());
      if (!(0, q.isListType)(c)) {
        return f(a, b), !1;
      }
    }, ObjectValue:function(b) {
      var c = (0, q.getNamedType)(a.getInputType());
      if (!(0, q.isInputObjectType)(c)) {
        return f(a, b), !1;
      }
      var d = c.getFields(), h = (0, t.default)(b.fields, function(a) {
        return a.name.value;
      });
      Object.keys(d).forEach(function(f) {
        var e = d[f].type;
        !h[f] && (0, q.isNonNullType)(e) && a.reportError(new m.GraphQLError(k(c.name, f, String(e)), b));
      });
    }, ObjectField:function(b) {
      var c = (0, q.getNamedType)(a.getParentInputType());
      if (!a.getInputType() && (0, q.isInputObjectType)(c)) {
        var d = (0, n.default)(b.name.value, Object.keys(c.getFields()));
        d = 0 !== d.length ? "Did you mean " + (0, y.default)(d) + "?" : void 0;
        a.reportError(new m.GraphQLError(l(c.name, b.name.value, d), b));
      }
    }, EnumValue:function(b) {
      var e = (0, q.getNamedType)(a.getInputType());
      (0, q.isEnumType)(e) ? e.getValue(b.value) || a.reportError(new m.GraphQLError(c(e.name, (0, d.print)(b), h(e, b)), b)) : f(a, b);
    }, IntValue:function(b) {
      return f(a, b);
    }, FloatValue:function(b) {
      return f(a, b);
    }, StringValue:function(b) {
      return f(a, b);
    }, BooleanValue:function(b) {
      return f(a, b);
    }};
  };
  var m = b("module$node_modules$graphql$error$index"), d = b("module$node_modules$graphql$language$printer"), q = b("module$node_modules$graphql$type$definition");
  e = b("module$node_modules$graphql$jsutils$isInvalid");
  var z = g(e);
  e = b("module$node_modules$graphql$jsutils$keyMap");
  var t = g(e);
  e = b("module$node_modules$graphql$jsutils$orList");
  var y = g(e);
  b = b("module$node_modules$graphql$jsutils$suggestionList");
  var n = g(b);
};

//# sourceMappingURL=module$node_modules$graphql$validation$rules$ValuesOfCorrectType.js.map
