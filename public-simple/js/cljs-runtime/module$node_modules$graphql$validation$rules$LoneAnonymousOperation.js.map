{
"version":3,
"file":"module$node_modules$graphql$validation$rules$LoneAnonymousOperation.js",
"lineCount":19,
"mappings":"AAAAA,cAAA,oEAAA,GAAwF,QAAQ,CAACC,CAAD,EAAQC,CAAR,EAAgBC,CAAhB,EAAwBC,CAAxB,EAA+BC,CAA/B,CAAwC;AAaxIC,UAASA,EAA4B,EAAG;AACtC,WAAO,8DAAP;AADsC;AAVxCC,QAAAC,eAAA,CAAsBH,CAAtB,EAA+B,YAA/B,EAA6C,CAC3CI,MAAO,CAAA,CADoC,CAA7C,CAAA;AAGAJ,GAAAC,6BAAA,GAAuCA,CAAvC;AACAD,GAAAK,uBAAA,GAyBAA,QAA+B,CAACC,CAAD,CAAU;AACvC,QAAIC,IAAiB,CAArB;AACA,WAAO,CACLC,SAAUA,QAAiB,CAACC,CAAD,CAAO;AAChCF,OAAA,GAAiBE,CAAAC,YAAAC,OAAA,CAAwB,QAAS,CAACC,CAAD,CAAa;AAC7D,eAAOA,CAAAC,KAAP,KAA2BC,CAAAC,KAAAC,qBAA3B;AAD6D,OAA9C,CAAAC,OAAjB;AADgC,KAD7B,EAMLC,oBAAqBA,QAA4B,CAACT,CAAD,CAAO;AAClD,OAACA,CAAAU,KAAL,IAAmC,CAAnC,GAAkBZ,CAAlB,IACED,CAAAc,YAAA,CAAoB,IAAIC,CAAAC,aAAJ,CAAwBrB,CAAA,EAAxB,EAAwD,CAACQ,CAAD,CAAxD,CAApB,CADF;AADsD,KANnD,CAAP;AAFuC,GAzBzC;AAEA,MAAIY,IAASvB,CAAA,CAAQ,yCAAR,CAAb,EAEIgB,IAAShB,CAAA,CAAQ,4CAAR,CAFb;AATwI,CAAxI;;",
"sources":["node_modules/graphql/validation/rules/LoneAnonymousOperation.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$validation$rules$LoneAnonymousOperation\"] = function(global,process,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.anonOperationNotAloneMessage = anonOperationNotAloneMessage;\nexports.LoneAnonymousOperation = LoneAnonymousOperation;\n\nvar _error = require('../../error');\n\nvar _kinds = require('../../language/kinds');\n\nfunction anonOperationNotAloneMessage() {\n  return 'This anonymous operation must be the only defined operation.';\n}\n\n/**\n * Lone anonymous operation\n *\n * A GraphQL document is only valid if when it contains an anonymous operation\n * (the query short-hand) that it contains only that one operation definition.\n */\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nfunction LoneAnonymousOperation(context) {\n  var operationCount = 0;\n  return {\n    Document: function Document(node) {\n      operationCount = node.definitions.filter(function (definition) {\n        return definition.kind === _kinds.Kind.OPERATION_DEFINITION;\n      }).length;\n    },\n    OperationDefinition: function OperationDefinition(node) {\n      if (!node.name && operationCount > 1) {\n        context.reportError(new _error.GraphQLError(anonOperationNotAloneMessage(), [node]));\n      }\n    }\n  };\n}\n};"],
"names":["shadow$provide","global","process","require","module","exports","anonOperationNotAloneMessage","Object","defineProperty","value","LoneAnonymousOperation","context","operationCount","Document","node","definitions","filter","definition","kind","_kinds","Kind","OPERATION_DEFINITION","length","OperationDefinition","name","reportError","_error","GraphQLError"]
}
