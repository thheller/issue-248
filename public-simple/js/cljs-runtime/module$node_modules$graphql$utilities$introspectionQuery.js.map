{
"version":3,
"file":"module$node_modules$graphql$utilities$introspectionQuery.js",
"lineCount":12,
"mappings":"AAAAA,cAAA,yDAAA,GAA6E,QAAQ,CAACC,CAAD,EAAQC,CAAR,EAAgBC,CAAhB,EAAwBC,CAAxB,EAA+BC,CAA/B,CAAwC;AAgB7HC,UAASA,EAAqB,CAACC,CAAD,CAAU;AAClCC,KAAAA,GAAe,EAAED,CAAF,IAAsC,CAAA,CAAtC,KAAaA,CAAAC,aAAb,CAAfA;AACJ,WAAO,uPAAP,IAAkQA,CAAA,GAAe,aAAf,GAA+B,EAAjS,IAAuS,iLAAvS,IAA4dA,CAAA,GAAe,aAAf,GAA+B,EAA3f,IAAigB,mEAAjgB;KAAwkBA,CAAA,GAAe,aAAf,GAA+B,EAAvmB,IAA6mB,4UAA7mB,IAA67BA,CAAA,GAAe,aAAf,GAA+B,EAA59B,IAAk+B,wLAAl+B;KAA8pCA,CAAA,GAAe,aAAf,GAA+B,EAA7rC,IAAmsC,0pBAAnsC;AAFsC;AAbxCC,QAAAC,eAAA,CAAsBL,CAAtB,EAA+B,YAA/B,EAA6C,CAC3CM,MAAO,CAAA,CADoC,CAA7C,CAAA;AAGAN,GAAAC,sBAAA,GAAgCA,CAAhC;AAeyBD,GAAAO,mBAAA,GAA6BN,CAAA,EAA7B;AArBoG,CAA7H;;",
"sources":["node_modules/graphql/utilities/introspectionQuery.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$utilities$introspectionQuery\"] = function(global,process,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getIntrospectionQuery = getIntrospectionQuery;\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nfunction getIntrospectionQuery(options) {\n  var descriptions = !(options && options.descriptions === false);\n  return '\\n    query IntrospectionQuery {\\n      __schema {\\n        queryType { name }\\n        mutationType { name }\\n        subscriptionType { name }\\n        types {\\n          ...FullType\\n        }\\n        directives {\\n          name\\n          ' + (descriptions ? 'description' : '') + '\\n          locations\\n          args {\\n            ...InputValue\\n          }\\n        }\\n      }\\n    }\\n\\n    fragment FullType on __Type {\\n      kind\\n      name\\n      ' + (descriptions ? 'description' : '') + '\\n      fields(includeDeprecated: true) {\\n        name\\n        ' + (descriptions ? 'description' : '') + '\\n        args {\\n          ...InputValue\\n        }\\n        type {\\n          ...TypeRef\\n        }\\n        isDeprecated\\n        deprecationReason\\n      }\\n      inputFields {\\n        ...InputValue\\n      }\\n      interfaces {\\n        ...TypeRef\\n      }\\n      enumValues(includeDeprecated: true) {\\n        name\\n        ' + (descriptions ? 'description' : '') + '\\n        isDeprecated\\n        deprecationReason\\n      }\\n      possibleTypes {\\n        ...TypeRef\\n      }\\n    }\\n\\n    fragment InputValue on __InputValue {\\n      name\\n      ' + (descriptions ? 'description' : '') + '\\n      type { ...TypeRef }\\n      defaultValue\\n    }\\n\\n    fragment TypeRef on __Type {\\n      kind\\n      name\\n      ofType {\\n        kind\\n        name\\n        ofType {\\n          kind\\n          name\\n          ofType {\\n            kind\\n            name\\n            ofType {\\n              kind\\n              name\\n              ofType {\\n                kind\\n                name\\n                ofType {\\n                  kind\\n                  name\\n                  ofType {\\n                    kind\\n                    name\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  ';\n}\n\nvar introspectionQuery = exports.introspectionQuery = getIntrospectionQuery();\n};"],
"names":["shadow$provide","global","process","require","module","exports","getIntrospectionQuery","options","descriptions","Object","defineProperty","value","introspectionQuery"]
}
