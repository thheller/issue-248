{
"version":3,
"file":"module$node_modules$graphql$validation$rules$UniqueVariableNames.js",
"lineCount":18,
"mappings":"AAAAA,cAAA,iEAAA,GAAqF,QAAQ,CAACC,CAAD,EAAQC,CAAR,EAAgBC,CAAhB,EAAwBC,CAAxB,EAA+BC,CAA/B,CAAwC;AAWrIC,UAASA,EAAwB,CAACC,CAAD,CAAe;AAC9C,WAAO,wCAAP,GAAkDA,CAAlD,GAAiE,IAAjE;AAD8C;AARhDC,QAAAC,eAAA,CAAsBJ,CAAtB,EAA+B,YAA/B,EAA6C,CAC3CK,MAAO,CAAA,CADoC,CAA7C,CAAA;AAGAL,GAAAC,yBAAA,GAAmCA,CAAnC;AACAD,GAAAM,oBAAA,GAsBAA,QAA4B,CAACC,CAAD,CAAU;AACpC,QAAIC,IAAqBL,MAAAM,OAAA,CAAc,IAAd,CAAzB;AACA,WAAO,CACLC,oBAAqBA,QAA4B,EAAG;AAClDF,OAAA,GAAqBL,MAAAM,OAAA,CAAc,IAAd,CAArB;AADkD,KAD/C,EAILE,mBAAoBA,QAA2B,CAACC,CAAD,CAAO;AACpD,UAAIV,IAAeU,CAAAC,SAAAC,KAAAT,MAAnB;AACIG,OAAA,CAAmBN,CAAnB,CAAJ,GACEK,CAAAQ,YAAA,CAAoB,IAAIC,CAAAC,aAAJ,CAAwBhB,CAAA,CAAyBC,CAAzB,CAAxB,EAAgE,CAACM,CAAA,CAAmBN,CAAnB,CAAD,EAAmCU,CAAAC,SAAAC,KAAnC,CAAhE,CAApB,CADF,GAGEN,CAAA,CAAmBN,CAAnB,CAHF,GAGqCU,CAAAC,SAAAC,KAHrC;AAFoD,KAJjD,CAAP;AAFoC,GAtBtC;AAEA,MAAIE,IAASlB,CAAA,CAAQ,yCAAR,CAAb;AATqI,CAArI;;",
"sources":["node_modules/graphql/validation/rules/UniqueVariableNames.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$validation$rules$UniqueVariableNames\"] = function(global,process,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.duplicateVariableMessage = duplicateVariableMessage;\nexports.UniqueVariableNames = UniqueVariableNames;\n\nvar _error = require('../../error');\n\nfunction duplicateVariableMessage(variableName) {\n  return 'There can be only one variable named \"' + variableName + '\".';\n}\n\n/**\n * Unique variable names\n *\n * A GraphQL operation is only valid if all its variables are uniquely named.\n */\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nfunction UniqueVariableNames(context) {\n  var knownVariableNames = Object.create(null);\n  return {\n    OperationDefinition: function OperationDefinition() {\n      knownVariableNames = Object.create(null);\n    },\n    VariableDefinition: function VariableDefinition(node) {\n      var variableName = node.variable.name.value;\n      if (knownVariableNames[variableName]) {\n        context.reportError(new _error.GraphQLError(duplicateVariableMessage(variableName), [knownVariableNames[variableName], node.variable.name]));\n      } else {\n        knownVariableNames[variableName] = node.variable.name;\n      }\n    }\n  };\n}\n};"],
"names":["shadow$provide","global","process","require","module","exports","duplicateVariableMessage","variableName","Object","defineProperty","value","UniqueVariableNames","context","knownVariableNames","create","OperationDefinition","VariableDefinition","node","variable","name","reportError","_error","GraphQLError"]
}
