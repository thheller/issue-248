{
"version":3,
"file":"module$node_modules$graphql$validation$ValidationContext.js",
"lineCount":121,
"mappings":"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",
"sources":["node_modules/graphql/validation/ValidationContext.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$validation$ValidationContext\"] = function(global,process,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _error = require('../error');\n\nvar _visitor = require('../language/visitor');\n\nvar _kinds = require('../language/kinds');\n\nvar _schema = require('../type/schema');\n\nvar _TypeInfo = require('../utilities/TypeInfo');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } } /**\n                                                                                                                                                           * Copyright (c) 2015-present, Facebook, Inc.\n                                                                                                                                                           *\n                                                                                                                                                           * This source code is licensed under the MIT license found in the\n                                                                                                                                                           * LICENSE file in the root directory of this source tree.\n                                                                                                                                                           *\n                                                                                                                                                           *  strict\n                                                                                                                                                           */\n\n/**\n * An instance of this class is passed as the \"this\" context to all validators,\n * allowing access to commonly useful contextual information from within a\n * validation rule.\n */\nvar ValidationContext = function () {\n  function ValidationContext(schema, ast, typeInfo) {\n    _classCallCheck(this, ValidationContext);\n\n    this._schema = schema;\n    this._ast = ast;\n    this._typeInfo = typeInfo;\n    this._errors = [];\n    this._fragmentSpreads = new Map();\n    this._recursivelyReferencedFragments = new Map();\n    this._variableUsages = new Map();\n    this._recursiveVariableUsages = new Map();\n  }\n\n  ValidationContext.prototype.reportError = function reportError(error) {\n    this._errors.push(error);\n  };\n\n  ValidationContext.prototype.getErrors = function getErrors() {\n    return this._errors;\n  };\n\n  ValidationContext.prototype.getSchema = function getSchema() {\n    return this._schema;\n  };\n\n  ValidationContext.prototype.getDocument = function getDocument() {\n    return this._ast;\n  };\n\n  ValidationContext.prototype.getFragment = function getFragment(name) {\n    var fragments = this._fragments;\n    if (!fragments) {\n      this._fragments = fragments = this.getDocument().definitions.reduce(function (frags, statement) {\n        if (statement.kind === _kinds.Kind.FRAGMENT_DEFINITION) {\n          frags[statement.name.value] = statement;\n        }\n        return frags;\n      }, Object.create(null));\n    }\n    return fragments[name];\n  };\n\n  ValidationContext.prototype.getFragmentSpreads = function getFragmentSpreads(node) {\n    var spreads = this._fragmentSpreads.get(node);\n    if (!spreads) {\n      spreads = [];\n      var setsToVisit = [node];\n      while (setsToVisit.length !== 0) {\n        var set = setsToVisit.pop();\n        for (var i = 0; i < set.selections.length; i++) {\n          var selection = set.selections[i];\n          if (selection.kind === _kinds.Kind.FRAGMENT_SPREAD) {\n            spreads.push(selection);\n          } else if (selection.selectionSet) {\n            setsToVisit.push(selection.selectionSet);\n          }\n        }\n      }\n      this._fragmentSpreads.set(node, spreads);\n    }\n    return spreads;\n  };\n\n  ValidationContext.prototype.getRecursivelyReferencedFragments = function getRecursivelyReferencedFragments(operation) {\n    var fragments = this._recursivelyReferencedFragments.get(operation);\n    if (!fragments) {\n      fragments = [];\n      var collectedNames = Object.create(null);\n      var nodesToVisit = [operation.selectionSet];\n      while (nodesToVisit.length !== 0) {\n        var _node = nodesToVisit.pop();\n        var spreads = this.getFragmentSpreads(_node);\n        for (var i = 0; i < spreads.length; i++) {\n          var fragName = spreads[i].name.value;\n          if (collectedNames[fragName] !== true) {\n            collectedNames[fragName] = true;\n            var fragment = this.getFragment(fragName);\n            if (fragment) {\n              fragments.push(fragment);\n              nodesToVisit.push(fragment.selectionSet);\n            }\n          }\n        }\n      }\n      this._recursivelyReferencedFragments.set(operation, fragments);\n    }\n    return fragments;\n  };\n\n  ValidationContext.prototype.getVariableUsages = function getVariableUsages(node) {\n    var usages = this._variableUsages.get(node);\n    if (!usages) {\n      var newUsages = [];\n      var typeInfo = new _TypeInfo.TypeInfo(this._schema);\n      (0, _visitor.visit)(node, (0, _visitor.visitWithTypeInfo)(typeInfo, {\n        VariableDefinition: function VariableDefinition() {\n          return false;\n        },\n        Variable: function Variable(variable) {\n          newUsages.push({ node: variable, type: typeInfo.getInputType() });\n        }\n      }));\n      usages = newUsages;\n      this._variableUsages.set(node, usages);\n    }\n    return usages;\n  };\n\n  ValidationContext.prototype.getRecursiveVariableUsages = function getRecursiveVariableUsages(operation) {\n    var usages = this._recursiveVariableUsages.get(operation);\n    if (!usages) {\n      usages = this.getVariableUsages(operation);\n      var fragments = this.getRecursivelyReferencedFragments(operation);\n      for (var i = 0; i < fragments.length; i++) {\n        Array.prototype.push.apply(usages, this.getVariableUsages(fragments[i]));\n      }\n      this._recursiveVariableUsages.set(operation, usages);\n    }\n    return usages;\n  };\n\n  ValidationContext.prototype.getType = function getType() {\n    return this._typeInfo.getType();\n  };\n\n  ValidationContext.prototype.getParentType = function getParentType() {\n    return this._typeInfo.getParentType();\n  };\n\n  ValidationContext.prototype.getInputType = function getInputType() {\n    return this._typeInfo.getInputType();\n  };\n\n  ValidationContext.prototype.getParentInputType = function getParentInputType() {\n    return this._typeInfo.getParentInputType();\n  };\n\n  ValidationContext.prototype.getFieldDef = function getFieldDef() {\n    return this._typeInfo.getFieldDef();\n  };\n\n  ValidationContext.prototype.getDirective = function getDirective() {\n    return this._typeInfo.getDirective();\n  };\n\n  ValidationContext.prototype.getArgument = function getArgument() {\n    return this._typeInfo.getArgument();\n  };\n\n  return ValidationContext;\n}();\n\nexports.default = ValidationContext;\n};"],
"names":["shadow$provide","global","process","require","module","exports","Object","defineProperty","value","_visitor","_kinds","_TypeInfo","ValidationContext","schema","ast","typeInfo","instance","TypeError","_schema","_ast","_typeInfo","_errors","_fragmentSpreads","Map","_recursivelyReferencedFragments","_variableUsages","_recursiveVariableUsages","prototype","reportError","ValidationContext.prototype.reportError","error","push","getErrors","ValidationContext.prototype.getErrors","getSchema","ValidationContext.prototype.getSchema","getDocument","ValidationContext.prototype.getDocument","getFragment","ValidationContext.prototype.getFragment","name","fragments","_fragments","definitions","reduce","frags","statement","kind","Kind","FRAGMENT_DEFINITION","create","getFragmentSpreads","ValidationContext.prototype.getFragmentSpreads","node","spreads","get","setsToVisit","length","set","pop","i","selections","selection","FRAGMENT_SPREAD","selectionSet","getRecursivelyReferencedFragments","ValidationContext.prototype.getRecursivelyReferencedFragments","operation","collectedNames","nodesToVisit","_node","fragName","fragment","getVariableUsages","ValidationContext.prototype.getVariableUsages","usages","newUsages","TypeInfo","visit","visitWithTypeInfo","VariableDefinition","Variable","variable","type","getInputType","getRecursiveVariableUsages","ValidationContext.prototype.getRecursiveVariableUsages","Array","apply","getType","ValidationContext.prototype.getType","getParentType","ValidationContext.prototype.getParentType","ValidationContext.prototype.getInputType","getParentInputType","ValidationContext.prototype.getParentInputType","getFieldDef","ValidationContext.prototype.getFieldDef","getDirective","ValidationContext.prototype.getDirective","getArgument","ValidationContext.prototype.getArgument","default"]
}
