shadow$provide.module$node_modules$graphql$error$printError = function(e, r, b, u, a) {
  function g(a, b) {
    var f = b.line, k = f + (a.locationOffset.line - 1);
    b = b.column + (1 === b.line ? a.locationOffset.column - 1 : 0);
    var d = (k - 1).toString(), l = k.toString(), e = (k + 1).toString(), g = e.length, y = a.body.split(/\r\n|[\n\r]/g);
    y[0] = Array(a.locationOffset.column - 1 + 1).join(" ") + y[0];
    return [a.name + " (" + k + ":" + b + ")", 2 <= f && c(g, d) + ": " + y[f - 2], c(g, l) + ": " + y[f - 1], Array(2 + g + b - 1 + 1).join(" ") + "^", f < y.length && c(g, e) + ": " + y[f]].filter(Boolean).join("\n");
  }
  function c(a, b) {
    return Array(a - b.length + 1).join(" ") + b;
  }
  Object.defineProperty(a, "__esModule", {value:!0});
  a.printError = function(a) {
    var b = [];
    if (a.nodes) {
      a.nodes.forEach(function(a) {
        a.loc && b.push(g(a.loc.source, (0, k.getLocation)(a.loc.source, a.loc.start)));
      });
    } else {
      if (a.source && a.locations) {
        var c = a.source;
        a.locations.forEach(function(a) {
          b.push(g(c, a));
        });
      }
    }
    return 0 === b.length ? a.message : [a.message].concat(b).join("\n\n") + "\n";
  };
  var k = b("module$node_modules$graphql$language$location");
};

//# sourceMappingURL=module$node_modules$graphql$error$printError.js.map
