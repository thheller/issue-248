shadow$provide.module$node_modules$graphql$utilities$valueFromAST = function(e, r, b, u, a) {
  function g(a) {
    return a && a.__esModule ? a : {default:a};
  }
  function c(a, b, e) {
    if (a) {
      if ((0, d.isNonNullType)(b)) {
        return a.kind === m.Kind.NULL ? void 0 : c(a, b.ofType, e);
      }
      if (a.kind === m.Kind.NULL) {
        return null;
      }
      if (a.kind === m.Kind.VARIABLE) {
        var g = a.name.value;
        return !e || (0, f.default)(e[g]) ? void 0 : e[g];
      }
      if ((0, d.isListType)(b)) {
        g = b.ofType;
        if (a.kind === m.Kind.LIST) {
          b = [];
          a = a.values;
          for (var n = 0; n < a.length; n++) {
            if (k(a[n], e)) {
              if ((0, d.isNonNullType)(g)) {
                return;
              }
              b.push(null);
            } else {
              var p = c(a[n], g, e);
              if ((0, f.default)(p)) {
                return;
              }
              b.push(p);
            }
          }
          return b;
        }
        e = c(a, g, e);
        return (0, f.default)(e) ? void 0 : [e];
      }
      if ((0, d.isInputObjectType)(b)) {
        if (a.kind !== m.Kind.OBJECT) {
          return;
        }
        g = Object.create(null);
        a = (0, l.default)(a.fields, function(a) {
          return a.name.value;
        });
        b = (0, h.default)(b.getFields());
        for (n = 0; n < b.length; n++) {
          p = b[n];
          var q = a[p.name];
          if (!q || k(q.value, e)) {
            if (!(0, f.default)(p.defaultValue)) {
              g[p.name] = p.defaultValue;
            } else {
              if ((0, d.isNonNullType)(p.type)) {
                return;
              }
            }
          } else {
            q = c(q.value, p.type, e);
            if ((0, f.default)(q)) {
              return;
            }
            g[p.name] = q;
          }
        }
        return g;
      }
      if ((0, d.isEnumType)(b)) {
        return a.kind !== m.Kind.ENUM ? void 0 : (e = b.getValue(a.value)) ? e.value : void 0;
      }
      if ((0, d.isScalarType)(b)) {
        g = void 0;
        try {
          g = b.parseLiteral(a, e);
        } catch (J) {
          return;
        }
        return (0, f.default)(g) ? void 0 : g;
      }
      throw Error("Unknown type: " + b + ".");
    }
  }
  function k(a, b) {
    return a.kind === m.Kind.VARIABLE && (!b || (0, f.default)(b[a.name.value]));
  }
  Object.defineProperty(a, "__esModule", {value:!0});
  a.valueFromAST = c;
  e = b("module$node_modules$graphql$jsutils$keyMap");
  var l = g(e);
  e = b("module$node_modules$graphql$jsutils$isInvalid");
  var f = g(e);
  e = b("module$node_modules$graphql$jsutils$objectValues");
  var h = g(e), m = b("module$node_modules$graphql$language$kinds"), d = b("module$node_modules$graphql$type$definition");
};

//# sourceMappingURL=module$node_modules$graphql$utilities$valueFromAST.js.map
