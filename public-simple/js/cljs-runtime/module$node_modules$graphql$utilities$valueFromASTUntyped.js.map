{
"version":3,
"file":"module$node_modules$graphql$utilities$valueFromASTUntyped.js",
"lineCount":33,
"mappings":"AAAAA,cAAA,0DAAA,GAA8E,QAAQ,CAACC,CAAD,EAAQC,CAAR,EAAgBC,CAAhB,EAAwBC,CAAxB,EAA+BC,CAA/B,CAAwC;AAoC9HC,UAASA,EAAmB,CAACC,CAAD,EAAYC,CAAZ,CAAuB;AACjD,WAAQD,CAAAE,KAAR;AACE,WAAKC,CAAAC,KAAAC,KAAL;AACE,eAAO,IAAP;AACF,WAAKF,CAAAC,KAAAE,IAAL;AACE,eAAOC,QAAA,CAASP,CAAAQ,MAAT,EAA0B,EAA1B,CAAP;AACF,WAAKL,CAAAC,KAAAK,MAAL;AACE,eAAOC,UAAA,CAAWV,CAAAQ,MAAX,CAAP;AACF,WAAKL,CAAAC,KAAAO,OAAL;AACA,WAAKR,CAAAC,KAAAQ,KAAL;AACA,WAAKT,CAAAC,KAAAS,QAAL;AACE,eAAOb,CAAAQ,MAAP;AACF,WAAKL,CAAAC,KAAAU,KAAL;AACE,eAAOd,CAAAe,OAAAC,IAAA,CAAqB,QAAS,CAACC,CAAD,CAAO;AAC1C,iBAAOlB,CAAA,CAAoBkB,CAApB,EAA0BhB,CAA1B,CAAP;AAD0C,SAArC,CAAP;AAGF,WAAKE,CAAAC,KAAAc,OAAL;AACE,eAAO,CAAC,CAAA,EAAGC,CAAAC,QAAJ,EAAyBpB,CAAAqB,OAAzB,EAA2C,QAAS,CAACC,CAAD,CAAQ;AACjE,iBAAOA,CAAAC,KAAAf,MAAP;AADiE,SAA5D,EAEJ,QAAS,CAACc,CAAD,CAAQ;AAClB,iBAAOvB,CAAA,CAAoBuB,CAAAd,MAApB,EAAiCP,CAAjC,CAAP;AADkB,SAFb,CAAP;AAKF,WAAKE,CAAAC,KAAAoB,SAAL;AAEE,eADIC,CACG,GADYzB,CAAAuB,KAAAf,MACZ,EAAAP,CAAA,IAAa,CAAC,CAAC,CAAA,EAAGyB,CAAAN,QAAJ,EAAyBnB,CAAA,CAAUwB,CAAV,CAAzB,CAAd,GAAkExB,CAAA,CAAUwB,CAAV,CAAlE,GAA4FE,IAAAA,EAAnG;AAvBJ;AA0BA,UAAUC,KAAJ,CAAU,yBAAV,GAAsC5B,CAAAE,KAAtC,CAAN;AA3BiD;AAjCnD2B,QAAAC,eAAA,CAAsBhC,CAAtB,EAA+B,YAA/B,EAA6C,CAC3CU,MAAO,CAAA,CADoC,CAA7C,CAAA;AAGAV,GAAAC,oBAAA,GAA8BA,CAA9B;AAIA,MAAIoB,IAQ0C,CAV1CY,CAU0C,GAV7BnC,CAAA,CAAQ,+CAAR,CAU6B,KARLmC,CAQYC,WAAP,GARLD,CAQK,GAA8B,CAAEX,QARrCW,CAQmC,CAR5E,EAIIL,IAI0C,CAN1CO,CAM0C,GAN7BrC,CAAA,CAAQ,+CAAR,CAM6B,KAJLqC,CAIYD,WAAP,GAJLC,CAIK,GAA8B,CAAEb,QAJrCa,CAImC,CAR5E,EAMI9B,IAASP,CAAA,CAAQ,4CAAR,CANb;AAV8H,CAA9H;;",
"sources":["node_modules/graphql/utilities/valueFromASTUntyped.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$utilities$valueFromASTUntyped\"] = function(global,process,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.valueFromASTUntyped = valueFromASTUntyped;\n\nvar _keyValMap = require('../jsutils/keyValMap');\n\nvar _keyValMap2 = _interopRequireDefault(_keyValMap);\n\nvar _isInvalid = require('../jsutils/isInvalid');\n\nvar _isInvalid2 = _interopRequireDefault(_isInvalid);\n\nvar _kinds = require('../language/kinds');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Produces a JavaScript value given a GraphQL Value AST.\n *\n * Unlike `valueFromAST()`, no type is provided. The resulting JavaScript value\n * will reflect the provided GraphQL value AST.\n *\n * | GraphQL Value        | JavaScript Value |\n * | -------------------- | ---------------- |\n * | Input Object         | Object           |\n * | List                 | Array            |\n * | Boolean              | Boolean          |\n * | String / Enum        | String           |\n * | Int / Float          | Number           |\n * | Null                 | null             |\n *\n */\nfunction valueFromASTUntyped(valueNode, variables) {\n  switch (valueNode.kind) {\n    case _kinds.Kind.NULL:\n      return null;\n    case _kinds.Kind.INT:\n      return parseInt(valueNode.value, 10);\n    case _kinds.Kind.FLOAT:\n      return parseFloat(valueNode.value);\n    case _kinds.Kind.STRING:\n    case _kinds.Kind.ENUM:\n    case _kinds.Kind.BOOLEAN:\n      return valueNode.value;\n    case _kinds.Kind.LIST:\n      return valueNode.values.map(function (node) {\n        return valueFromASTUntyped(node, variables);\n      });\n    case _kinds.Kind.OBJECT:\n      return (0, _keyValMap2.default)(valueNode.fields, function (field) {\n        return field.name.value;\n      }, function (field) {\n        return valueFromASTUntyped(field.value, variables);\n      });\n    case _kinds.Kind.VARIABLE:\n      var variableName = valueNode.name.value;\n      return variables && !(0, _isInvalid2.default)(variables[variableName]) ? variables[variableName] : undefined;\n  }\n  /* istanbul ignore next */\n  throw new Error('Unexpected value kind: ' + valueNode.kind);\n} /**\n   * Copyright (c) 2015-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   *  strict\n   */\n};"],
"names":["shadow$provide","global","process","require","module","exports","valueFromASTUntyped","valueNode","variables","kind","_kinds","Kind","NULL","INT","parseInt","value","FLOAT","parseFloat","STRING","ENUM","BOOLEAN","LIST","values","map","node","OBJECT","_keyValMap2","default","fields","field","name","VARIABLE","variableName","_isInvalid2","undefined","Error","Object","defineProperty","_keyValMap","__esModule","_isInvalid"]
}
