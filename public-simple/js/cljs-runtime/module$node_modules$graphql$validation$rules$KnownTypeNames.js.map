{
"version":3,
"file":"module$node_modules$graphql$validation$rules$KnownTypeNames.js",
"lineCount":25,
"mappings":"AAAAA,cAAA,4DAAA,GAAgF,QAAQ,CAACC,CAAD,EAAQC,CAAR,EAAgBC,CAAhB,EAAwBC,CAAxB,EAA+BC,CAA/B,CAAwC;AA8BhIC,UAASA,EAAkB,CAACC,CAAD,EAAWC,CAAX,CAA2B;AAChDC,KAAAA,GAAU,gBAAVA,GAA6BF,CAA7BE,GAAwC,IAAxCA;AACAD,KAAAE,OAAJ,KACED,CADF,IACa,gBADb,GACgC,CAAC,CAAA,EAAGE,CAAAC,QAAJ,EAA4BJ,CAA5B,CADhC,GAC8E,GAD9E;AAGA,WAAOC,CAAP;AALoD;AA3BtDI,QAAAC,eAAA,CAAsBT,CAAtB,EAA+B,YAA/B,EAA6C,CAC3CU,MAAO,CAAA,CADoC,CAA7C,CAAA;AAGAV,GAAAC,mBAAA,GAA6BA,CAA7B;AACAD,GAAAW,eAAA,GAqCAA,QAAuB,CAACC,CAAD,CAAU;AAC/B,WAAO,CAILC,qBAAsBA,QAA6B,EAAG;AACpD,aAAO,CAAA,CAAP;AADoD,KAJjD,EAOLC,wBAAyBA,QAAgC,EAAG;AAC1D,aAAO,CAAA,CAAP;AAD0D,KAPvD,EAULC,oBAAqBA,QAA4B,EAAG;AAClD,aAAO,CAAA,CAAP;AADkD,KAV/C,EAaLC,0BAA2BA,QAAkC,EAAG;AAC9D,aAAO,CAAA,CAAP;AAD8D,KAb3D,EAgBLC,UAAWA,QAAkB,CAACC,CAAD,CAAO;AAClC,UAAIC,IAASP,CAAAQ,UAAA,EAAb,EACIlB,IAAWgB,CAAAG,KAAAX,MADf;AAEWS,OAAAG,QAAAC,CAAerB,CAAfqB,CACX,IACEX,CAAAY,YAAA,CAAoB,IAAIC,CAAAC,aAAJ,CAAwBzB,CAAA,CAAmBC,CAAnB,EAA6B,CAAC,CAAA,EAAGyB,CAAApB,QAAJ,EAA8BL,CAA9B,EAAwCM,MAAAoB,KAAA,CAAYT,CAAAU,WAAA,EAAZ,CAAxC,CAA7B,CAAxB,EAAiI,CAACX,CAAD,CAAjI,CAApB,CADF;AAJkC,KAhB/B,CAAP;AAD+B,GArCjC;AAEA,MAAIO,IAAS3B,CAAA,CAAQ,yCAAR,CAAb,EAII6B,IAM0C,CAR1CG,CAQ0C,GARxBhC,CAAA,CAAQ,oDAAR,CAQwB,KANAgC,CAMOC,WAAP,GANAD,CAMA,GAA8B,CAAEvB,QANhCuB,CAM8B,CAV5E,EAQIxB,IAE0C,CAJ1C0B,CAI0C,GAJ1BlC,CAAA,CAAQ,kDAAR,CAI0B,KAFFkC,CAESD,WAAP,GAFFC,CAEE,GAA8B,CAAEzB,QAFlCyB,CAEgC,CAV5E;AATgI,CAAhI;;",
"sources":["node_modules/graphql/validation/rules/KnownTypeNames.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$validation$rules$KnownTypeNames\"] = function(global,process,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.unknownTypeMessage = unknownTypeMessage;\nexports.KnownTypeNames = KnownTypeNames;\n\nvar _error = require('../../error');\n\nvar _suggestionList = require('../../jsutils/suggestionList');\n\nvar _suggestionList2 = _interopRequireDefault(_suggestionList);\n\nvar _quotedOrList = require('../../jsutils/quotedOrList');\n\nvar _quotedOrList2 = _interopRequireDefault(_quotedOrList);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nfunction unknownTypeMessage(typeName, suggestedTypes) {\n  var message = 'Unknown type \"' + typeName + '\".';\n  if (suggestedTypes.length) {\n    message += ' Did you mean ' + (0, _quotedOrList2.default)(suggestedTypes) + '?';\n  }\n  return message;\n}\n\n/**\n * Known type names\n *\n * A GraphQL document is only valid if referenced types (specifically\n * variable definitions and fragment conditions) are defined by the type schema.\n */\nfunction KnownTypeNames(context) {\n  return {\n    // TODO: when validating IDL, re-enable these. Experimental version does not\n    // add unreferenced types, resulting in false-positive errors. Squelched\n    // errors for now.\n    ObjectTypeDefinition: function ObjectTypeDefinition() {\n      return false;\n    },\n    InterfaceTypeDefinition: function InterfaceTypeDefinition() {\n      return false;\n    },\n    UnionTypeDefinition: function UnionTypeDefinition() {\n      return false;\n    },\n    InputObjectTypeDefinition: function InputObjectTypeDefinition() {\n      return false;\n    },\n    NamedType: function NamedType(node) {\n      var schema = context.getSchema();\n      var typeName = node.name.value;\n      var type = schema.getType(typeName);\n      if (!type) {\n        context.reportError(new _error.GraphQLError(unknownTypeMessage(typeName, (0, _suggestionList2.default)(typeName, Object.keys(schema.getTypeMap()))), [node]));\n      }\n    }\n  };\n}\n};"],
"names":["shadow$provide","global","process","require","module","exports","unknownTypeMessage","typeName","suggestedTypes","message","length","_quotedOrList2","default","Object","defineProperty","value","KnownTypeNames","context","ObjectTypeDefinition","InterfaceTypeDefinition","UnionTypeDefinition","InputObjectTypeDefinition","NamedType","node","schema","getSchema","name","getType","type","reportError","_error","GraphQLError","_suggestionList2","keys","getTypeMap","_suggestionList","__esModule","_quotedOrList"]
}
