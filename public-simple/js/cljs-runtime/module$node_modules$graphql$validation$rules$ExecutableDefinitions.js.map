{
"version":3,
"file":"module$node_modules$graphql$validation$rules$ExecutableDefinitions.js",
"lineCount":17,
"mappings":"AAAAA,cAAA,mEAAA,GAAuF,QAAQ,CAACC,CAAD,EAAQC,CAAR,EAAgBC,CAAhB,EAAwBC,CAAxB,EAA+BC,CAA/B,CAAwC;AAavIC,UAASA,EAA8B,CAACC,CAAD,CAAU;AAC/C,WAAO,MAAP,GAAgBA,CAAhB,GAA0B,gCAA1B;AAD+C;AAVjDC,QAAAC,eAAA,CAAsBJ,CAAtB,EAA+B,YAA/B,EAA6C,CAC3CK,MAAO,CAAA,CADoC,CAA7C,CAAA;AAGAL,GAAAC,+BAAA,GAAyCA,CAAzC;AACAD,GAAAM,sBAAA,GAyBAA,QAA8B,CAACC,CAAD,CAAU;AACtC,WAAO,CACLC,SAAUA,QAAiB,CAACC,CAAD,CAAO;AAChCA,OAAAC,YAAAC,QAAA,CAAyB,QAAS,CAACC,CAAD,CAAa;AACzCA,SAAAC,KAAJ,KAAwBC,CAAAC,KAAAC,qBAAxB,IAA4DJ,CAAAC,KAA5D,KAAgFC,CAAAC,KAAAE,oBAAhF,IACEV,CAAAW,YAAA,CAAoB,IAAIC,CAAAC,aAAJ,CAAwBnB,CAAA,CAA+BW,CAAAC,KAAA,KAAoBC,CAAAC,KAAAM,kBAApB,GAAoD,QAApD,GAA+DT,CAAAU,KAAAjB,MAA9F,CAAxB,EAA8I,CAACO,CAAD,CAA9I,CAApB,CADF;AAD6C,OAA/C,CAAA;AAKA,aAAO,CAAA,CAAP;AANgC,KAD7B,CAAP;AADsC,GAzBxC;AAEA,MAAIO,IAASrB,CAAA,CAAQ,yCAAR,CAAb,EAEIgB,IAAShB,CAAA,CAAQ,4CAAR,CAFb;AATuI,CAAvI;;",
"sources":["node_modules/graphql/validation/rules/ExecutableDefinitions.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$validation$rules$ExecutableDefinitions\"] = function(global,process,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.nonExecutableDefinitionMessage = nonExecutableDefinitionMessage;\nexports.ExecutableDefinitions = ExecutableDefinitions;\n\nvar _error = require('../../error');\n\nvar _kinds = require('../../language/kinds');\n\nfunction nonExecutableDefinitionMessage(defName) {\n  return 'The ' + defName + ' definition is not executable.';\n}\n\n/**\n * Executable definitions\n *\n * A GraphQL document is only valid for execution if all definitions are either\n * operation or fragment definitions.\n */\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nfunction ExecutableDefinitions(context) {\n  return {\n    Document: function Document(node) {\n      node.definitions.forEach(function (definition) {\n        if (definition.kind !== _kinds.Kind.OPERATION_DEFINITION && definition.kind !== _kinds.Kind.FRAGMENT_DEFINITION) {\n          context.reportError(new _error.GraphQLError(nonExecutableDefinitionMessage(definition.kind === _kinds.Kind.SCHEMA_DEFINITION ? 'schema' : definition.name.value), [definition]));\n        }\n      });\n      return false;\n    }\n  };\n}\n};"],
"names":["shadow$provide","global","process","require","module","exports","nonExecutableDefinitionMessage","defName","Object","defineProperty","value","ExecutableDefinitions","context","Document","node","definitions","forEach","definition","kind","_kinds","Kind","OPERATION_DEFINITION","FRAGMENT_DEFINITION","reportError","_error","GraphQLError","SCHEMA_DEFINITION","name"]
}
