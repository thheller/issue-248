{
"version":3,
"file":"module$node_modules$graphql$validation$rules$NoUndefinedVariables.js",
"lineCount":23,
"mappings":"AAAAA,cAAA,kEAAA,GAAsF,QAAQ,CAACC,CAAD,EAAQC,CAAR,EAAgBC,CAAhB,EAAwBC,CAAxB,EAA+BC,CAA/B,CAAwC;AAoBtIC,UAASA,EAAmB,CAACC,CAAD,EAAUC,CAAV,CAAkB;AAC5C,WAAOA,CAAA,GAAS,aAAT,GAAyBD,CAAzB,GAAmC,iCAAnC,GAAuEC,CAAvE,GAAgF,IAAhF,GAAuF,aAAvF,GAAuGD,CAAvG,GAAiH,mBAAxH;AAD4C;AAjB9CE,QAAAC,eAAA,CAAsBL,CAAtB,EAA+B,YAA/B,EAA6C,CAC3CM,MAAO,CAAA,CADoC,CAA7C,CAAA;AAGAN,GAAAC,oBAAA,GAA8BA,CAA9B;AACAD,GAAAO,qBAAA,GAuBAA,QAA6B,CAACC,CAAD,CAAU;AACrC,QAAIC,IAAsBL,MAAAM,OAAA,CAAc,IAAd,CAA1B;AAEA,WAAO,CACLC,oBAAqB,CACnBC,MAAOA,QAAc,EAAG;AACtBH,OAAA,GAAsBL,MAAAM,OAAA,CAAc,IAAd,CAAtB;AADsB,KADL,EAInBG,MAAOA,QAAc,CAACC,CAAD,CAAY;AAClBN,OAAAO,2BAAAC,CAAmCF,CAAnCE,CAEbC,QAAA,CAAe,QAAS,CAACC,CAAD,CAAO;AACzBC,SAAAA,GAAOD,CAAAC,KAAPA;AAEJ,YAAIjB,IAAUiB,CAAAC,KAAAd,MAAd;AACqC,SAAA,CAArC,KAAIG,CAAA,CAAoBP,CAApB,CAAJ,IACEM,CAAAa,YAAA,CAAoB,IAAIC,CAAAC,aAAJ,CAAwBtB,CAAA,CAAoBC,CAApB,EAA6BY,CAAAM,KAA7B,IAA+CN,CAAAM,KAAAd,MAA/C,CAAxB,EAA8F,CAACa,CAAD,EAAOL,CAAP,CAA9F,CAApB,CADF;AAJ6B,OAA/B,CAAA;AAH+B,KAJd,CADhB,EAkBLU,mBAAoBA,QAA2B,CAACL,CAAD,CAAO;AACpDV,OAAA,CAAoBU,CAAAM,SAAAL,KAAAd,MAApB,CAAA,GAAgD,CAAA,CAAhD;AADoD,KAlBjD,CAAP;AAHqC,GAvBvC;AAEA,MAAIgB,IAASxB,CAAA,CAAQ,yCAAR,CAAb;AATsI,CAAtI;;",
"sources":["node_modules/graphql/validation/rules/NoUndefinedVariables.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$validation$rules$NoUndefinedVariables\"] = function(global,process,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.undefinedVarMessage = undefinedVarMessage;\nexports.NoUndefinedVariables = NoUndefinedVariables;\n\nvar _error = require('../../error');\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nfunction undefinedVarMessage(varName, opName) {\n  return opName ? 'Variable \"$' + varName + '\" is not defined by operation \"' + opName + '\".' : 'Variable \"$' + varName + '\" is not defined.';\n}\n\n/**\n * No undefined variables\n *\n * A GraphQL operation is only valid if all variables encountered, both directly\n * and via fragment spreads, are defined by that operation.\n */\nfunction NoUndefinedVariables(context) {\n  var variableNameDefined = Object.create(null);\n\n  return {\n    OperationDefinition: {\n      enter: function enter() {\n        variableNameDefined = Object.create(null);\n      },\n      leave: function leave(operation) {\n        var usages = context.getRecursiveVariableUsages(operation);\n\n        usages.forEach(function (_ref) {\n          var node = _ref.node;\n\n          var varName = node.name.value;\n          if (variableNameDefined[varName] !== true) {\n            context.reportError(new _error.GraphQLError(undefinedVarMessage(varName, operation.name && operation.name.value), [node, operation]));\n          }\n        });\n      }\n    },\n    VariableDefinition: function VariableDefinition(node) {\n      variableNameDefined[node.variable.name.value] = true;\n    }\n  };\n}\n};"],
"names":["shadow$provide","global","process","require","module","exports","undefinedVarMessage","varName","opName","Object","defineProperty","value","NoUndefinedVariables","context","variableNameDefined","create","OperationDefinition","enter","leave","operation","getRecursiveVariableUsages","usages","forEach","_ref","node","name","reportError","_error","GraphQLError","VariableDefinition","variable"]
}
