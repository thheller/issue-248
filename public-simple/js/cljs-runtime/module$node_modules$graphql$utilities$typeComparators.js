shadow$provide.module$node_modules$graphql$utilities$typeComparators = function(e, r, b, u, a) {
  function g(a, b) {
    return a === b ? !0 : (0, k.isNonNullType)(a) && (0, k.isNonNullType)(b) || (0, k.isListType)(a) && (0, k.isListType)(b) ? g(a.ofType, b.ofType) : !1;
  }
  function c(a, b, h) {
    return b === h ? !0 : (0, k.isNonNullType)(h) ? (0, k.isNonNullType)(b) ? c(a, b.ofType, h.ofType) : !1 : (0, k.isNonNullType)(b) ? c(a, b.ofType, h) : (0, k.isListType)(h) ? (0, k.isListType)(b) ? c(a, b.ofType, h.ofType) : !1 : (0, k.isListType)(b) ? !1 : (0, k.isAbstractType)(h) && (0, k.isObjectType)(b) && a.isPossibleType(h, b) ? !0 : !1;
  }
  Object.defineProperty(a, "__esModule", {value:!0});
  a.isEqualType = g;
  a.isTypeSubTypeOf = c;
  a.doTypesOverlap = function(a, b, c) {
    return b === c ? !0 : (0, k.isAbstractType)(b) ? (0, k.isAbstractType)(c) ? a.getPossibleTypes(b).some(function(b) {
      return a.isPossibleType(c, b);
    }) : a.isPossibleType(b, c) : (0, k.isAbstractType)(c) ? a.isPossibleType(c, b) : !1;
  };
  var k = b("module$node_modules$graphql$type$definition");
};

//# sourceMappingURL=module$node_modules$graphql$utilities$typeComparators.js.map
