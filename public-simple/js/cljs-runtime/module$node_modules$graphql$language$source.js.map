{
"version":3,
"file":"module$node_modules$graphql$language$source.js",
"lineCount":16,
"mappings":"AAAAA,cAAA,4CAAA,GAAgE,QAAQ,CAACC,CAAD,EAAQC,CAAR,EAAgBC,CAAhB,EAAwBC,CAAxB,EAA+BC,CAA/B,CAAwC;AAGhHC,QAAAC,eAAA,CAAsBF,CAAtB,EAA+B,YAA/B,EAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAAA;AAGAH,GAAAI,OAAA,GAAiBC,IAAAA,EAAjB;AAIA,MAAIC,IAE0C,CAJ1CC,CAI0C,GAJ7BT,CAAA,CAAQ,+CAAR,CAI6B,KAFLS,CAEYC,WAAP,GAFLD,CAEK,GAA8B,CAAEE,QAFrCF,CAEmC,CAF5E;AAqBaP,GAAAI,OAAA,GAAiBM,QAASN,EAAM,CAACO,CAAD,EAAOC,CAAP,EAAaC,CAAb,CAA6B;AAjBxB,QAAI,EAkBpCC,IAlBoC,YAkB9BV,CAlB8B,CAAJ;AAA0C,YAAM,IAAIW,SAAJ,CAAc,mCAAd,CAAN;AAA1C;AAoBhD,QAAAJ,KAAA,GAAYA,CAAZ;AACA,QAAAC,KAAA,GAAYA,CAAZ,IAAoB,iBAApB;AACA,QAAAC,eAAA,GAAsBA,CAAtB,IAAwC,CAAEG,KAAM,CAAR,EAAWC,OAAQ,CAAnB,CAAxC;AAC6B,KAA7B,GAAE,IAAAJ,eAAAG,KAAF,GAA4H,IAAK,EAAjI,GAAkC,CAAC,CAAA,EAAGV,CAAAG,QAAJ,EAAyB,CAAzB,EAA4B,0DAA5B,CAAlC;AAC+B,KAA/B,GAAE,IAAAI,eAAAI,OAAF,GAAgI,IAAK,EAArI,GAAoC,CAAC,CAAA,EAAGX,CAAAG,QAAJ,EAAyB,CAAzB,EAA4B,4DAA5B,CAApC;AAPwE,GAA7D;AA/BmG,CAAhH;;",
"sources":["node_modules/graphql/language/source.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$language$source\"] = function(global,process,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Source = undefined;\n\nvar _invariant = require('../jsutils/invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } } /**\n                                                                                                                                                           * Copyright (c) 2015-present, Facebook, Inc.\n                                                                                                                                                           *\n                                                                                                                                                           * This source code is licensed under the MIT license found in the\n                                                                                                                                                           * LICENSE file in the root directory of this source tree.\n                                                                                                                                                           *\n                                                                                                                                                           *  strict\n                                                                                                                                                           */\n\n/**\n * A representation of source input to GraphQL.\n * `name` and `locationOffset` are optional. They are useful for clients who\n * store GraphQL documents in source files; for example, if the GraphQL input\n * starts at line 40 in a file named Foo.graphql, it might be useful for name to\n * be \"Foo.graphql\" and location to be `{ line: 40, column: 0 }`.\n * line and column in locationOffset are 1-indexed\n */\nvar Source = exports.Source = function Source(body, name, locationOffset) {\n  _classCallCheck(this, Source);\n\n  this.body = body;\n  this.name = name || 'GraphQL request';\n  this.locationOffset = locationOffset || { line: 1, column: 1 };\n  !(this.locationOffset.line > 0) ? (0, _invariant2.default)(0, 'line in locationOffset is 1-indexed and must be positive') : void 0;\n  !(this.locationOffset.column > 0) ? (0, _invariant2.default)(0, 'column in locationOffset is 1-indexed and must be positive') : void 0;\n};\n};"],
"names":["shadow$provide","global","process","require","module","exports","Object","defineProperty","value","Source","undefined","_invariant2","_invariant","__esModule","default","exports.Source","body","name","locationOffset","instance","TypeError","line","column"]
}
