{
"version":3,
"file":"module$node_modules$graphql$validation$rules$NoUnusedFragments.js",
"lineCount":30,
"mappings":"AAAAA,cAAA,+DAAA,GAAmF,QAAQ,CAACC,CAAD,EAAQC,CAAR,EAAgBC,CAAhB,EAAwBC,CAAxB,EAA+BC,CAA/B,CAAwC;AAoBnIC,UAASA,EAAiB,CAACC,CAAD,CAAW;AACnC,WAAO,YAAP,GAAsBA,CAAtB,GAAiC,kBAAjC;AADmC;AAjBrCC,QAAAC,eAAA,CAAsBJ,CAAtB,EAA+B,YAA/B,EAA6C,CAC3CK,MAAO,CAAA,CADoC,CAA7C,CAAA;AAGAL,GAAAC,kBAAA,GAA4BA,CAA5B;AACAD,GAAAM,kBAAA,GAuBAA,QAA0B,CAACC,CAAD,CAAU;AAClC,QAAIC,IAAgB,EAApB,EACIC,IAAe,EADnB;AAGA,WAAO,CACLC,oBAAqBA,QAA4B,CAACC,CAAD,CAAO;AACtDH,OAAAI,KAAA,CAAmBD,CAAnB,CAAA;AACA,aAAO,CAAA,CAAP;AAFsD,KADnD,EAKLE,mBAAoBA,QAA2B,CAACF,CAAD,CAAO;AACpDF,OAAAG,KAAA,CAAkBD,CAAlB,CAAA;AACA,aAAO,CAAA,CAAP;AAFoD,KALjD,EAULG,SAAU,CACRC,MAAOA,QAAc,EAAG;AACtB,UAAIC,IAAmBb,MAAAc,OAAA,CAAc,IAAd,CAAvB;AACAT,OAAAU,QAAA,CAAsB,QAAS,CAACC,CAAD,CAAY;AACzCZ,SAAAa,kCAAA,CAA0CD,CAA1C,CAAAD,QAAA,CAA6D,QAAS,CAACG,CAAD,CAAW;AAC/EL,WAAA,CAAiBK,CAAAC,KAAAjB,MAAjB,CAAA,GAAwC,CAAA,CAAxC;AAD+E,SAAjF,CAAA;AADyC,OAA3C,CAAA;AAMAI,OAAAS,QAAA,CAAqB,QAAS,CAACK,CAAD,CAAc;AAC1C,YAAIrB,IAAWqB,CAAAD,KAAAjB,MAAf;AACmC,SAAA,CAAnC,KAAIW,CAAA,CAAiBd,CAAjB,CAAJ,IACEK,CAAAiB,YAAA,CAAoB,IAAIC,CAAAC,aAAJ,CAAwBzB,CAAA,CAAkBC,CAAlB,CAAxB,EAAqD,CAACqB,CAAD,CAArD,CAApB,CADF;AAF0C,OAA5C,CAAA;AARsB,KADhB,CAVL,CAAP;AAJkC,GAvBpC;AAEA,MAAIE,IAAS3B,CAAA,CAAQ,yCAAR,CAAb;AATmI,CAAnI;;",
"sources":["node_modules/graphql/validation/rules/NoUnusedFragments.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$validation$rules$NoUnusedFragments\"] = function(global,process,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.unusedFragMessage = unusedFragMessage;\nexports.NoUnusedFragments = NoUnusedFragments;\n\nvar _error = require('../../error');\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nfunction unusedFragMessage(fragName) {\n  return 'Fragment \"' + fragName + '\" is never used.';\n}\n\n/**\n * No unused fragments\n *\n * A GraphQL document is only valid if all fragment definitions are spread\n * within operations, or spread within other fragments spread within operations.\n */\nfunction NoUnusedFragments(context) {\n  var operationDefs = [];\n  var fragmentDefs = [];\n\n  return {\n    OperationDefinition: function OperationDefinition(node) {\n      operationDefs.push(node);\n      return false;\n    },\n    FragmentDefinition: function FragmentDefinition(node) {\n      fragmentDefs.push(node);\n      return false;\n    },\n\n    Document: {\n      leave: function leave() {\n        var fragmentNameUsed = Object.create(null);\n        operationDefs.forEach(function (operation) {\n          context.getRecursivelyReferencedFragments(operation).forEach(function (fragment) {\n            fragmentNameUsed[fragment.name.value] = true;\n          });\n        });\n\n        fragmentDefs.forEach(function (fragmentDef) {\n          var fragName = fragmentDef.name.value;\n          if (fragmentNameUsed[fragName] !== true) {\n            context.reportError(new _error.GraphQLError(unusedFragMessage(fragName), [fragmentDef]));\n          }\n        });\n      }\n    }\n  };\n}\n};"],
"names":["shadow$provide","global","process","require","module","exports","unusedFragMessage","fragName","Object","defineProperty","value","NoUnusedFragments","context","operationDefs","fragmentDefs","OperationDefinition","node","push","FragmentDefinition","Document","leave","fragmentNameUsed","create","forEach","operation","getRecursivelyReferencedFragments","fragment","name","fragmentDef","reportError","_error","GraphQLError"]
}
