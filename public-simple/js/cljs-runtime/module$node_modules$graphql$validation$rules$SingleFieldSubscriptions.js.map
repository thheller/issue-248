{
"version":3,
"file":"module$node_modules$graphql$validation$rules$SingleFieldSubscriptions.js",
"lineCount":14,
"mappings":"AAAAA,cAAA,sEAAA,GAA0F,QAAQ,CAACC,CAAD,EAAQC,CAAR,EAAgBC,CAAhB,EAAwBC,CAAxB,EAA+BC,CAA/B,CAAwC;AAoB1IC,UAASA,EAAsB,CAACC,CAAD,CAAO;AACpC,YAAQA,CAAA,GAAO,gBAAP,GAA0BA,CAA1B,GAAiC,IAAjC,GAAwC,yBAAhD,IAA6E,uCAA7E;AADoC;AAjBtCC,QAAAC,eAAA,CAAsBJ,CAAtB,EAA+B,YAA/B,EAA6C,CAC3CK,MAAO,CAAA,CADoC,CAA7C,CAAA;AAGAL,GAAAC,uBAAA,GAAiCA,CAAjC;AACAD,GAAAM,yBAAA,GAsBAA,QAAiC,CAACC,CAAD,CAAU;AACzC,WAAO,CACLC,oBAAqBA,QAA4B,CAACC,CAAD,CAAO;AAC/B,oBAAvB,KAAIA,CAAAC,UAAJ,IAC8C,CAD9C,KACMD,CAAAE,aAAAC,WAAAC,OADN,IAEIN,CAAAO,YAAA,CAAoB,IAAIC,CAAAC,aAAJ,CAAwBf,CAAA,CAAuBQ,CAAAP,KAAvB,IAAoCO,CAAAP,KAAAG,MAApC,CAAxB,EAA8EI,CAAAE,aAAAC,WAAAK,MAAA,CAAmC,CAAnC,CAA9E,CAApB,CAFJ;AADsD,KADnD,CAAP;AADyC,GAtB3C;AAEA,MAAIF,IAASjB,CAAA,CAAQ,yCAAR,CAAb;AAT0I,CAA1I;;",
"sources":["node_modules/graphql/validation/rules/SingleFieldSubscriptions.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$validation$rules$SingleFieldSubscriptions\"] = function(global,process,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.singleFieldOnlyMessage = singleFieldOnlyMessage;\nexports.SingleFieldSubscriptions = SingleFieldSubscriptions;\n\nvar _error = require('../../error');\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nfunction singleFieldOnlyMessage(name) {\n  return (name ? 'Subscription \"' + name + '\" ' : 'Anonymous Subscription ') + 'must select only one top level field.';\n}\n\n/**\n * Subscriptions must only include one field.\n *\n * A GraphQL subscription is valid only if it contains a single root field.\n */\nfunction SingleFieldSubscriptions(context) {\n  return {\n    OperationDefinition: function OperationDefinition(node) {\n      if (node.operation === 'subscription') {\n        if (node.selectionSet.selections.length !== 1) {\n          context.reportError(new _error.GraphQLError(singleFieldOnlyMessage(node.name && node.name.value), node.selectionSet.selections.slice(1)));\n        }\n      }\n    }\n  };\n}\n};"],
"names":["shadow$provide","global","process","require","module","exports","singleFieldOnlyMessage","name","Object","defineProperty","value","SingleFieldSubscriptions","context","OperationDefinition","node","operation","selectionSet","selections","length","reportError","_error","GraphQLError","slice"]
}
