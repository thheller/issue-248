shadow$provide.module$node_modules$graphql$utilities$TypeInfo = function(e, r, b, u, a) {
  function g(a, b, c) {
    c = c.name.value;
    if (c === l.SchemaMetaFieldDef.name && a.getQueryType() === b) {
      return l.SchemaMetaFieldDef;
    }
    if (c === l.TypeMetaFieldDef.name && a.getQueryType() === b) {
      return l.TypeMetaFieldDef;
    }
    if (c === l.TypeNameMetaFieldDef.name && (0, k.isCompositeType)(b)) {
      return l.TypeNameMetaFieldDef;
    }
    if ((0, k.isObjectType)(b) || (0, k.isInterfaceType)(b)) {
      return b.getFields()[c];
    }
  }
  Object.defineProperty(a, "__esModule", {value:!0});
  a.TypeInfo = void 0;
  var c = b("module$node_modules$graphql$language$kinds"), k = b("module$node_modules$graphql$type$definition"), l = b("module$node_modules$graphql$type$introspection"), f = b("module$node_modules$graphql$utilities$typeFromAST"), h = (e = b("module$node_modules$graphql$jsutils$find")) && e.__esModule ? e : {default:e};
  a.TypeInfo = function() {
    function a(b, c, f) {
      if (!(this instanceof a)) {
        throw new TypeError("Cannot call a class as a function");
      }
      this._schema = b;
      this._typeStack = [];
      this._parentTypeStack = [];
      this._inputTypeStack = [];
      this._fieldDefStack = [];
      this._enumValue = this._argument = this._directive = null;
      this._getFieldDef = c || g;
      f && ((0, k.isInputType)(f) && this._inputTypeStack.push(f), (0, k.isCompositeType)(f) && this._parentTypeStack.push(f), (0, k.isOutputType)(f) && this._typeStack.push(f));
    }
    a.prototype.getType = function() {
      if (0 < this._typeStack.length) {
        return this._typeStack[this._typeStack.length - 1];
      }
    };
    a.prototype.getParentType = function() {
      if (0 < this._parentTypeStack.length) {
        return this._parentTypeStack[this._parentTypeStack.length - 1];
      }
    };
    a.prototype.getInputType = function() {
      if (0 < this._inputTypeStack.length) {
        return this._inputTypeStack[this._inputTypeStack.length - 1];
      }
    };
    a.prototype.getParentInputType = function() {
      if (1 < this._inputTypeStack.length) {
        return this._inputTypeStack[this._inputTypeStack.length - 2];
      }
    };
    a.prototype.getFieldDef = function() {
      if (0 < this._fieldDefStack.length) {
        return this._fieldDefStack[this._fieldDefStack.length - 1];
      }
    };
    a.prototype.getDirective = function() {
      return this._directive;
    };
    a.prototype.getArgument = function() {
      return this._argument;
    };
    a.prototype.getEnumValue = function() {
      return this._enumValue;
    };
    a.prototype.enter = function(a) {
      var b = this._schema;
      switch(a.kind) {
        case c.Kind.SELECTION_SET:
          b = (0, k.getNamedType)(this.getType());
          this._parentTypeStack.push((0, k.isCompositeType)(b) ? b : void 0);
          break;
        case c.Kind.FIELD:
          var d = this.getParentType(), e = void 0, g = void 0;
          d && (e = this._getFieldDef(b, d, a)) && (g = e.type);
          this._fieldDefStack.push(e);
          this._typeStack.push((0, k.isOutputType)(g) ? g : void 0);
          break;
        case c.Kind.DIRECTIVE:
          this._directive = b.getDirective(a.name.value);
          break;
        case c.Kind.OPERATION_DEFINITION:
          d = void 0;
          "query" === a.operation ? d = b.getQueryType() : "mutation" === a.operation ? d = b.getMutationType() : "subscription" === a.operation && (d = b.getSubscriptionType());
          this._typeStack.push((0, k.isObjectType)(d) ? d : void 0);
          break;
        case c.Kind.INLINE_FRAGMENT:
        case c.Kind.FRAGMENT_DEFINITION:
          b = (d = a.typeCondition) ? (0, f.typeFromAST)(b, d) : (0, k.getNamedType)(this.getType());
          this._typeStack.push((0, k.isOutputType)(b) ? b : void 0);
          break;
        case c.Kind.VARIABLE_DEFINITION:
          b = (0, f.typeFromAST)(b, a.type);
          this._inputTypeStack.push((0, k.isInputType)(b) ? b : void 0);
          break;
        case c.Kind.ARGUMENT:
          d = b = void 0;
          if (e = this.getDirective() || this.getFieldDef()) {
            if (b = (0, h.default)(e.args, function(b) {
              return b.name === a.name.value;
            })) {
              d = b.type;
            }
          }
          this._argument = b;
          this._inputTypeStack.push((0, k.isInputType)(d) ? d : void 0);
          break;
        case c.Kind.LIST:
          b = (0, k.getNullableType)(this.getInputType());
          b = (0, k.isListType)(b) ? b.ofType : b;
          this._inputTypeStack.push((0, k.isInputType)(b) ? b : void 0);
          break;
        case c.Kind.OBJECT_FIELD:
          d = (0, k.getNamedType)(this.getInputType());
          b = void 0;
          (0, k.isInputObjectType)(d) && (d = d.getFields()[a.name.value]) && (b = d.type);
          this._inputTypeStack.push((0, k.isInputType)(b) ? b : void 0);
          break;
        case c.Kind.ENUM:
          b = (0, k.getNamedType)(this.getInputType()), d = void 0, (0, k.isEnumType)(b) && (d = b.getValue(a.value)), this._enumValue = d;
      }
    };
    a.prototype.leave = function(a) {
      switch(a.kind) {
        case c.Kind.SELECTION_SET:
          this._parentTypeStack.pop();
          break;
        case c.Kind.FIELD:
          this._fieldDefStack.pop();
          this._typeStack.pop();
          break;
        case c.Kind.DIRECTIVE:
          this._directive = null;
          break;
        case c.Kind.OPERATION_DEFINITION:
        case c.Kind.INLINE_FRAGMENT:
        case c.Kind.FRAGMENT_DEFINITION:
          this._typeStack.pop();
          break;
        case c.Kind.VARIABLE_DEFINITION:
          this._inputTypeStack.pop();
          break;
        case c.Kind.ARGUMENT:
          this._argument = null;
          this._inputTypeStack.pop();
          break;
        case c.Kind.LIST:
        case c.Kind.OBJECT_FIELD:
          this._inputTypeStack.pop();
          break;
        case c.Kind.ENUM:
          this._enumValue = null;
      }
    };
    return a;
  }();
};

//# sourceMappingURL=module$node_modules$graphql$utilities$TypeInfo.js.map
