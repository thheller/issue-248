{
"version":3,
"file":"module$node_modules$graphql$language$lexer.js",
"lineCount":305,
"mappings":"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",
"sources":["node_modules/graphql/language/lexer.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$language$lexer\"] = function(global,process,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TokenKind = undefined;\nexports.createLexer = createLexer;\nexports.getTokenDesc = getTokenDesc;\n\nvar _error = require('../error');\n\nvar _blockStringValue = require('./blockStringValue');\n\nvar _blockStringValue2 = _interopRequireDefault(_blockStringValue);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Given a Source object, this returns a Lexer for that source.\n * A Lexer is a stateful stream generator in that every time\n * it is advanced, it returns the next token in the Source. Assuming the\n * source lexes, the final Token emitted by the lexer will be of kind\n * EOF, after which the lexer will repeatedly return the same EOF token\n * whenever called.\n */\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nfunction createLexer(source, options) {\n  var startOfFileToken = new Tok(TokenKind.SOF, 0, 0, 0, 0, null);\n  var lexer = {\n    source: source,\n    options: options,\n    lastToken: startOfFileToken,\n    token: startOfFileToken,\n    line: 1,\n    lineStart: 0,\n    advance: advanceLexer,\n    lookahead: lookahead\n  };\n  return lexer;\n}\n\nfunction advanceLexer() {\n  this.lastToken = this.token;\n  var token = this.token = this.lookahead();\n  return token;\n}\n\nfunction lookahead() {\n  var token = this.token;\n  if (token.kind !== TokenKind.EOF) {\n    do {\n      // Note: next is only mutable during parsing, so we cast to allow this.\n      token = token.next || (token.next = readToken(this, token));\n    } while (token.kind === TokenKind.COMMENT);\n  }\n  return token;\n}\n\n/**\n * The return type of createLexer.\n */\n\n\n/**\n * An exported enum describing the different kinds of tokens that the\n * lexer emits.\n */\nvar TokenKind = exports.TokenKind = Object.freeze({\n  SOF: '<SOF>',\n  EOF: '<EOF>',\n  BANG: '!',\n  DOLLAR: '$',\n  AMP: '&',\n  PAREN_L: '(',\n  PAREN_R: ')',\n  SPREAD: '...',\n  COLON: ':',\n  EQUALS: '=',\n  AT: '@',\n  BRACKET_L: '[',\n  BRACKET_R: ']',\n  BRACE_L: '{',\n  PIPE: '|',\n  BRACE_R: '}',\n  NAME: 'Name',\n  INT: 'Int',\n  FLOAT: 'Float',\n  STRING: 'String',\n  BLOCK_STRING: 'BlockString',\n  COMMENT: 'Comment'\n});\n\n/**\n * The enum type representing the token kinds values.\n */\n\n\n/**\n * A helper function to describe a token as a string for debugging\n */\nfunction getTokenDesc(token) {\n  var value = token.value;\n  return value ? token.kind + ' \"' + value + '\"' : token.kind;\n}\n\nvar charCodeAt = String.prototype.charCodeAt;\nvar slice = String.prototype.slice;\n\n/**\n * Helper function for constructing the Token object.\n */\nfunction Tok(kind, start, end, line, column, prev, value) {\n  this.kind = kind;\n  this.start = start;\n  this.end = end;\n  this.line = line;\n  this.column = column;\n  this.value = value;\n  this.prev = prev;\n  this.next = null;\n}\n\n// Print a simplified form when appearing in JSON/util.inspect.\nTok.prototype.toJSON = Tok.prototype.inspect = function toJSON() {\n  return {\n    kind: this.kind,\n    value: this.value,\n    line: this.line,\n    column: this.column\n  };\n};\n\nfunction printCharCode(code) {\n  return (\n    // NaN/undefined represents access beyond the end of the file.\n    isNaN(code) ? TokenKind.EOF : // Trust JSON for ASCII.\n    code < 0x007f ? JSON.stringify(String.fromCharCode(code)) : // Otherwise print the escaped form.\n    '\"\\\\u' + ('00' + code.toString(16).toUpperCase()).slice(-4) + '\"'\n  );\n}\n\n/**\n * Gets the next token from the source starting at the given position.\n *\n * This skips over whitespace and comments until it finds the next lexable\n * token, then lexes punctuators immediately or calls the appropriate helper\n * function for more complicated tokens.\n */\nfunction readToken(lexer, prev) {\n  var source = lexer.source;\n  var body = source.body;\n  var bodyLength = body.length;\n\n  var pos = positionAfterWhitespace(body, prev.end, lexer);\n  var line = lexer.line;\n  var col = 1 + pos - lexer.lineStart;\n\n  if (pos >= bodyLength) {\n    return new Tok(TokenKind.EOF, bodyLength, bodyLength, line, col, prev);\n  }\n\n  var code = charCodeAt.call(body, pos);\n\n  // SourceCharacter\n  if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n    throw (0, _error.syntaxError)(source, pos, 'Cannot contain the invalid character ' + printCharCode(code) + '.');\n  }\n\n  switch (code) {\n    // !\n    case 33:\n      return new Tok(TokenKind.BANG, pos, pos + 1, line, col, prev);\n    // #\n    case 35:\n      return readComment(source, pos, line, col, prev);\n    // $\n    case 36:\n      return new Tok(TokenKind.DOLLAR, pos, pos + 1, line, col, prev);\n    // &\n    case 38:\n      return new Tok(TokenKind.AMP, pos, pos + 1, line, col, prev);\n    // (\n    case 40:\n      return new Tok(TokenKind.PAREN_L, pos, pos + 1, line, col, prev);\n    // )\n    case 41:\n      return new Tok(TokenKind.PAREN_R, pos, pos + 1, line, col, prev);\n    // .\n    case 46:\n      if (charCodeAt.call(body, pos + 1) === 46 && charCodeAt.call(body, pos + 2) === 46) {\n        return new Tok(TokenKind.SPREAD, pos, pos + 3, line, col, prev);\n      }\n      break;\n    // :\n    case 58:\n      return new Tok(TokenKind.COLON, pos, pos + 1, line, col, prev);\n    // =\n    case 61:\n      return new Tok(TokenKind.EQUALS, pos, pos + 1, line, col, prev);\n    // @\n    case 64:\n      return new Tok(TokenKind.AT, pos, pos + 1, line, col, prev);\n    // [\n    case 91:\n      return new Tok(TokenKind.BRACKET_L, pos, pos + 1, line, col, prev);\n    // ]\n    case 93:\n      return new Tok(TokenKind.BRACKET_R, pos, pos + 1, line, col, prev);\n    // {\n    case 123:\n      return new Tok(TokenKind.BRACE_L, pos, pos + 1, line, col, prev);\n    // |\n    case 124:\n      return new Tok(TokenKind.PIPE, pos, pos + 1, line, col, prev);\n    // }\n    case 125:\n      return new Tok(TokenKind.BRACE_R, pos, pos + 1, line, col, prev);\n    // A-Z _ a-z\n    case 65:\n    case 66:\n    case 67:\n    case 68:\n    case 69:\n    case 70:\n    case 71:\n    case 72:\n    case 73:\n    case 74:\n    case 75:\n    case 76:\n    case 77:\n    case 78:\n    case 79:\n    case 80:\n    case 81:\n    case 82:\n    case 83:\n    case 84:\n    case 85:\n    case 86:\n    case 87:\n    case 88:\n    case 89:\n    case 90:\n    case 95:\n    case 97:\n    case 98:\n    case 99:\n    case 100:\n    case 101:\n    case 102:\n    case 103:\n    case 104:\n    case 105:\n    case 106:\n    case 107:\n    case 108:\n    case 109:\n    case 110:\n    case 111:\n    case 112:\n    case 113:\n    case 114:\n    case 115:\n    case 116:\n    case 117:\n    case 118:\n    case 119:\n    case 120:\n    case 121:\n    case 122:\n      return readName(source, pos, line, col, prev);\n    // - 0-9\n    case 45:\n    case 48:\n    case 49:\n    case 50:\n    case 51:\n    case 52:\n    case 53:\n    case 54:\n    case 55:\n    case 56:\n    case 57:\n      return readNumber(source, pos, code, line, col, prev);\n    // \"\n    case 34:\n      if (charCodeAt.call(body, pos + 1) === 34 && charCodeAt.call(body, pos + 2) === 34) {\n        return readBlockString(source, pos, line, col, prev);\n      }\n      return readString(source, pos, line, col, prev);\n  }\n\n  throw (0, _error.syntaxError)(source, pos, unexpectedCharacterMessage(code));\n}\n\n/**\n * Report a message that an unexpected character was encountered.\n */\nfunction unexpectedCharacterMessage(code) {\n  if (code === 39) {\n    // '\n    return \"Unexpected single quote character ('), did you mean to use \" + 'a double quote (\")?';\n  }\n\n  return 'Cannot parse the unexpected character ' + printCharCode(code) + '.';\n}\n\n/**\n * Reads from body starting at startPosition until it finds a non-whitespace\n * or commented character, then returns the position of that character for\n * lexing.\n */\nfunction positionAfterWhitespace(body, startPosition, lexer) {\n  var bodyLength = body.length;\n  var position = startPosition;\n  while (position < bodyLength) {\n    var code = charCodeAt.call(body, position);\n    // tab | space | comma | BOM\n    if (code === 9 || code === 32 || code === 44 || code === 0xfeff) {\n      ++position;\n    } else if (code === 10) {\n      // new line\n      ++position;\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if (code === 13) {\n      // carriage return\n      if (charCodeAt.call(body, position + 1) === 10) {\n        position += 2;\n      } else {\n        ++position;\n      }\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else {\n      break;\n    }\n  }\n  return position;\n}\n\n/**\n * Reads a comment token from the source file.\n *\n * #[\\u0009\\u0020-\\uFFFF]*\n */\nfunction readComment(source, start, line, col, prev) {\n  var body = source.body;\n  var code = void 0;\n  var position = start;\n\n  do {\n    code = charCodeAt.call(body, ++position);\n  } while (code !== null && (\n  // SourceCharacter but not LineTerminator\n  code > 0x001f || code === 0x0009));\n\n  return new Tok(TokenKind.COMMENT, start, position, line, col, prev, slice.call(body, start + 1, position));\n}\n\n/**\n * Reads a number token from the source file, either a float\n * or an int depending on whether a decimal point appears.\n *\n * Int:   -?(0|[1-9][0-9]*)\n * Float: -?(0|[1-9][0-9]*)(\\.[0-9]+)?((E|e)(+|-)?[0-9]+)?\n */\nfunction readNumber(source, start, firstCode, line, col, prev) {\n  var body = source.body;\n  var code = firstCode;\n  var position = start;\n  var isFloat = false;\n\n  if (code === 45) {\n    // -\n    code = charCodeAt.call(body, ++position);\n  }\n\n  if (code === 48) {\n    // 0\n    code = charCodeAt.call(body, ++position);\n    if (code >= 48 && code <= 57) {\n      throw (0, _error.syntaxError)(source, position, 'Invalid number, unexpected digit after 0: ' + printCharCode(code) + '.');\n    }\n  } else {\n    position = readDigits(source, position, code);\n    code = charCodeAt.call(body, position);\n  }\n\n  if (code === 46) {\n    // .\n    isFloat = true;\n\n    code = charCodeAt.call(body, ++position);\n    position = readDigits(source, position, code);\n    code = charCodeAt.call(body, position);\n  }\n\n  if (code === 69 || code === 101) {\n    // E e\n    isFloat = true;\n\n    code = charCodeAt.call(body, ++position);\n    if (code === 43 || code === 45) {\n      // + -\n      code = charCodeAt.call(body, ++position);\n    }\n    position = readDigits(source, position, code);\n  }\n\n  return new Tok(isFloat ? TokenKind.FLOAT : TokenKind.INT, start, position, line, col, prev, slice.call(body, start, position));\n}\n\n/**\n * Returns the new position in the source after reading digits.\n */\nfunction readDigits(source, start, firstCode) {\n  var body = source.body;\n  var position = start;\n  var code = firstCode;\n  if (code >= 48 && code <= 57) {\n    // 0 - 9\n    do {\n      code = charCodeAt.call(body, ++position);\n    } while (code >= 48 && code <= 57); // 0 - 9\n    return position;\n  }\n  throw (0, _error.syntaxError)(source, position, 'Invalid number, expected digit but got: ' + printCharCode(code) + '.');\n}\n\n/**\n * Reads a string token from the source file.\n *\n * \"([^\"\\\\\\u000A\\u000D]|(\\\\(u[0-9a-fA-F]{4}|[\"\\\\/bfnrt])))*\"\n */\nfunction readString(source, start, line, col, prev) {\n  var body = source.body;\n  var position = start + 1;\n  var chunkStart = position;\n  var code = 0;\n  var value = '';\n\n  while (position < body.length && (code = charCodeAt.call(body, position)) !== null &&\n  // not LineTerminator\n  code !== 0x000a && code !== 0x000d) {\n    // Closing Quote (\")\n    if (code === 34) {\n      value += slice.call(body, chunkStart, position);\n      return new Tok(TokenKind.STRING, start, position + 1, line, col, prev, value);\n    }\n\n    // SourceCharacter\n    if (code < 0x0020 && code !== 0x0009) {\n      throw (0, _error.syntaxError)(source, position, 'Invalid character within String: ' + printCharCode(code) + '.');\n    }\n\n    ++position;\n    if (code === 92) {\n      // \\\n      value += slice.call(body, chunkStart, position - 1);\n      code = charCodeAt.call(body, position);\n      switch (code) {\n        case 34:\n          value += '\"';\n          break;\n        case 47:\n          value += '/';\n          break;\n        case 92:\n          value += '\\\\';\n          break;\n        case 98:\n          value += '\\b';\n          break;\n        case 102:\n          value += '\\f';\n          break;\n        case 110:\n          value += '\\n';\n          break;\n        case 114:\n          value += '\\r';\n          break;\n        case 116:\n          value += '\\t';\n          break;\n        case 117:\n          // u\n          var charCode = uniCharCode(charCodeAt.call(body, position + 1), charCodeAt.call(body, position + 2), charCodeAt.call(body, position + 3), charCodeAt.call(body, position + 4));\n          if (charCode < 0) {\n            throw (0, _error.syntaxError)(source, position, 'Invalid character escape sequence: ' + ('\\\\u' + body.slice(position + 1, position + 5) + '.'));\n          }\n          value += String.fromCharCode(charCode);\n          position += 4;\n          break;\n        default:\n          throw (0, _error.syntaxError)(source, position, 'Invalid character escape sequence: \\\\' + String.fromCharCode(code) + '.');\n      }\n      ++position;\n      chunkStart = position;\n    }\n  }\n\n  throw (0, _error.syntaxError)(source, position, 'Unterminated string.');\n}\n\n/**\n * Reads a block string token from the source file.\n *\n * \"\"\"(\"?\"?(\\\\\"\"\"|\\\\(?!=\"\"\")|[^\"\\\\]))*\"\"\"\n */\nfunction readBlockString(source, start, line, col, prev) {\n  var body = source.body;\n  var position = start + 3;\n  var chunkStart = position;\n  var code = 0;\n  var rawValue = '';\n\n  while (position < body.length && (code = charCodeAt.call(body, position)) !== null) {\n    // Closing Triple-Quote (\"\"\")\n    if (code === 34 && charCodeAt.call(body, position + 1) === 34 && charCodeAt.call(body, position + 2) === 34) {\n      rawValue += slice.call(body, chunkStart, position);\n      return new Tok(TokenKind.BLOCK_STRING, start, position + 3, line, col, prev, (0, _blockStringValue2.default)(rawValue));\n    }\n\n    // SourceCharacter\n    if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n      throw (0, _error.syntaxError)(source, position, 'Invalid character within String: ' + printCharCode(code) + '.');\n    }\n\n    // Escape Triple-Quote (\\\"\"\")\n    if (code === 92 && charCodeAt.call(body, position + 1) === 34 && charCodeAt.call(body, position + 2) === 34 && charCodeAt.call(body, position + 3) === 34) {\n      rawValue += slice.call(body, chunkStart, position) + '\"\"\"';\n      position += 4;\n      chunkStart = position;\n    } else {\n      ++position;\n    }\n  }\n\n  throw (0, _error.syntaxError)(source, position, 'Unterminated string.');\n}\n\n/**\n * Converts four hexidecimal chars to the integer that the\n * string represents. For example, uniCharCode('0','0','0','f')\n * will return 15, and uniCharCode('0','0','f','f') returns 255.\n *\n * Returns a negative number on error, if a char was invalid.\n *\n * This is implemented by noting that char2hex() returns -1 on error,\n * which means the result of ORing the char2hex() will also be negative.\n */\nfunction uniCharCode(a, b, c, d) {\n  return char2hex(a) << 12 | char2hex(b) << 8 | char2hex(c) << 4 | char2hex(d);\n}\n\n/**\n * Converts a hex character to its integer value.\n * '0' becomes 0, '9' becomes 9\n * 'A' becomes 10, 'F' becomes 15\n * 'a' becomes 10, 'f' becomes 15\n *\n * Returns -1 on error.\n */\nfunction char2hex(a) {\n  return a >= 48 && a <= 57 ? a - 48 // 0-9\n  : a >= 65 && a <= 70 ? a - 55 // A-F\n  : a >= 97 && a <= 102 ? a - 87 // a-f\n  : -1;\n}\n\n/**\n * Reads an alphanumeric + underscore name from the source.\n *\n * [_A-Za-z][_0-9A-Za-z]*\n */\nfunction readName(source, start, line, col, prev) {\n  var body = source.body;\n  var bodyLength = body.length;\n  var position = start + 1;\n  var code = 0;\n  while (position !== bodyLength && (code = charCodeAt.call(body, position)) !== null && (code === 95 || // _\n  code >= 48 && code <= 57 || // 0-9\n  code >= 65 && code <= 90 || // A-Z\n  code >= 97 && code <= 122) // a-z\n  ) {\n    ++position;\n  }\n  return new Tok(TokenKind.NAME, start, position, line, col, prev, slice.call(body, start, position));\n}\n};"],
"names":["shadow$provide","global","process","require","module","exports","advanceLexer","lastToken","token","lookahead","kind","TokenKind","EOF","next","readToken","COMMENT","Tok","start","end","line","column","prev","value","printCharCode","code","isNaN","JSON","stringify","String","fromCharCode","slice","toString","toUpperCase","lexer","source","body","bodyLength","length","position","charCodeAt","call","lineStart","col","pos","_error","syntaxError","BANG","DOLLAR","AMP","PAREN_L","PAREN_R","SPREAD","COLON","EQUALS","AT","BRACKET_L","BRACKET_R","BRACE_L","PIPE","BRACE_R","NAME","isFloat","readDigits","FLOAT","INT","chunkStart","rawValue","BLOCK_STRING","_blockStringValue2","default","STRING","char2hex","a","b","c","d","charCode","firstCode","Object","defineProperty","undefined","createLexer","options","startOfFileToken","SOF","advance","getTokenDesc","_blockStringValue","__esModule","freeze","prototype","toJSON","inspect","Tok.prototype.inspect"]
}
