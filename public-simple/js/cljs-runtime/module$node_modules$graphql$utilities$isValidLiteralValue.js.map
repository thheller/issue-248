{
"version":3,
"file":"module$node_modules$graphql$utilities$isValidLiteralValue.js",
"lineCount":13,
"mappings":"AAAAA,cAAA,0DAAA,GAA8E,QAAQ,CAACC,CAAD,EAAQC,CAAR,EAAgBC,CAAhB,EAAwBC,CAAxB,EAA+BC,CAA/B,CAAwC;AAG9HC,QAAAC,eAAA,CAAsBF,CAAtB,EAA+B,YAA/B,EAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAAA;AAGAH,GAAAI,oBAAA,GAgCAA,QAA4B,CAACC,CAAD,EAAOC,CAAP,CAAkB;AAC5C,QAAIC,IAAc,IAAIC,CAAAC,cAAJ,CAA0B,EAA1B,CAAlB,EACIC,IAAW,CAAEC,KAAMC,CAAAC,KAAAC,SAAR,EAA8BC,YAAa,EAA3C,CADf;AAEIC,KAAAA,GAAW,IAAIC,CAAAC,SAAJ,CAAuBX,CAAvB,EAAoCY,IAAAA,EAApC,EAA+Cd,CAA/C,CAAXW;AACAI,KAAAA,GAAU,IAAIC,CAAAC,QAAJ,CAAgCf,CAAhC,EAA6CG,CAA7C,EAAuDM,CAAvD,CAAVI;AACAG,KAAAA,GAAU,CAAC,CAAA,EAAGC,CAAAC,oBAAJ,EAA8CL,CAA9C,CAAVG;AACJ,KAAC,CAAA,EAAGG,CAAAC,MAAJ,EAAoBrB,CAApB,EAA+B,CAAC,CAAA,EAAGoB,CAAAE,kBAAJ,EAAgCZ,CAAhC,EAA0CO,CAA1C,CAA/B,CAAA;AACA,WAAOH,CAAAS,UAAA,EAAP;AAP4C,GAhC9C;AAEA,MAAIZ,IAAYnB,CAAA,CAAQ,gDAAR,CAAhB,EAEIc,IAASd,CAAA,CAAQ,4CAAR,CAFb,EAII4B,IAAW5B,CAAA,CAAQ,8CAAR,CAJf,EAMIU,IAAUV,CAAA,CAAQ,yCAAR,CANd,EAQI0B,IAAuB1B,CAAA,CAAQ,kEAAR,CAR3B,EAYIuB,IAE0C,CAJ1CS,CAI0C,GAJrBhC,CAAA,CAAQ,0DAAR,CAIqB,KAFGgC,CAEIC,WAAP,GAFGD,CAEH,GAA8B,CAAER,QAF7BQ,CAE2B,CAd5E;AAR8H,CAA9H;;",
"sources":["node_modules/graphql/utilities/isValidLiteralValue.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$utilities$isValidLiteralValue\"] = function(global,process,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isValidLiteralValue = isValidLiteralValue;\n\nvar _TypeInfo = require('./TypeInfo');\n\nvar _kinds = require('../language/kinds');\n\nvar _visitor = require('../language/visitor');\n\nvar _schema = require('../type/schema');\n\nvar _ValuesOfCorrectType = require('../validation/rules/ValuesOfCorrectType');\n\nvar _ValidationContext = require('../validation/ValidationContext');\n\nvar _ValidationContext2 = _interopRequireDefault(_ValidationContext);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Utility which determines if a value literal node is valid for an input type.\n *\n * Deprecated. Rely on validation for documents containing literal values.\n */\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nfunction isValidLiteralValue(type, valueNode) {\n  var emptySchema = new _schema.GraphQLSchema({});\n  var emptyDoc = { kind: _kinds.Kind.DOCUMENT, definitions: [] };\n  var typeInfo = new _TypeInfo.TypeInfo(emptySchema, undefined, type);\n  var context = new _ValidationContext2.default(emptySchema, emptyDoc, typeInfo);\n  var visitor = (0, _ValuesOfCorrectType.ValuesOfCorrectType)(context);\n  (0, _visitor.visit)(valueNode, (0, _visitor.visitWithTypeInfo)(typeInfo, visitor));\n  return context.getErrors();\n}\n};"],
"names":["shadow$provide","global","process","require","module","exports","Object","defineProperty","value","isValidLiteralValue","type","valueNode","emptySchema","_schema","GraphQLSchema","emptyDoc","kind","_kinds","Kind","DOCUMENT","definitions","typeInfo","_TypeInfo","TypeInfo","undefined","context","_ValidationContext2","default","visitor","_ValuesOfCorrectType","ValuesOfCorrectType","_visitor","visit","visitWithTypeInfo","getErrors","_ValidationContext","__esModule"]
}
