{
"version":3,
"file":"module$node_modules$graphql$utilities$introspectionFromSchema.js",
"lineCount":13,
"mappings":"AAAAA,cAAA,8DAAA,GAAkF,QAAQ,CAACC,CAAD,EAAQC,CAAR,EAAgBC,CAAhB,EAAwBC,CAAxB,EAA+BC,CAA/B,CAAwC;AAGlIC,QAAAC,eAAA,CAAsBF,CAAtB,EAA+B,YAA/B,EAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAAA;AAGAH,GAAAI,wBAAA,GAyBAA,QAAgC,CAACC,CAAD,EAASC,CAAT,CAAkB;AAC5CC,KAAAA,GAAW,CAAC,CAAA,EAAGC,CAAAC,MAAJ,EAAmB,CAAC,CAAA,EAAGC,CAAAC,sBAAJ,EAA+CL,CAA/C,CAAnB,CAAXC;AACAK,KAAAA,GAAS,CAAC,CAAA,EAAGC,CAAAC,QAAJ,EAAsBT,CAAtB,EAA8BE,CAA9B,CAATK;AACDA,KAAAG,KAAH,IAAmBH,CAAAI,OAAnB,IAAoCC,CAAAL,CAAAK,KAApC,GAAmD,CAAC,CAAA,EAAGC,CAAAC,QAAJ,EAAyB,CAAzB,CAAnD,GAAiF,IAAK,EAAtF;AACA,WAAOP,CAAAK,KAAP;AAJgD,GAzBlD;AAIA,MAAIC,IAU0C,CAZ1CE,CAY0C,GAZ7BtB,CAAA,CAAQ,+CAAR,CAY6B,KAVLsB,CAUYC,WAAP,GAVLD,CAUK,GAA8B,CAAED,QAVrCC,CAUmC,CAV5E,EAEIV,IAAsBZ,CAAA,CAAQ,0DAAR,CAF1B;AAIcA,GAAA,CAAQ,yCAAR,CAAA;AAEd,MAAIe,IAAWf,CAAA,CAAQ,+CAAR,CAAf,EAEIU,IAAUV,CAAA,CAAQ,6CAAR,CAFd;AAhBkI,CAAlI;;",
"sources":["node_modules/graphql/utilities/introspectionFromSchema.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$utilities$introspectionFromSchema\"] = function(global,process,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.introspectionFromSchema = introspectionFromSchema;\n\nvar _invariant = require('../jsutils/invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _introspectionQuery = require('./introspectionQuery');\n\nvar _schema = require('../type/schema');\n\nvar _execute = require('../execution/execute');\n\nvar _parser = require('../language/parser');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Build an IntrospectionQuery from a GraphQLSchema\n *\n * IntrospectionQuery is useful for utilities that care about type and field\n * relationships, but do not need to traverse through those relationships.\n *\n * This is the inverse of buildClientSchema. The primary use case is outside\n * of the server context, for instance when doing schema comparisons.\n */\nfunction introspectionFromSchema(schema, options) {\n  var queryAST = (0, _parser.parse)((0, _introspectionQuery.getIntrospectionQuery)(options));\n  var result = (0, _execute.execute)(schema, queryAST);\n  !(!result.then && !result.errors && result.data) ? (0, _invariant2.default)(0) : void 0;\n  return result.data;\n} /**\n   * Copyright (c) 2015-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   *  strict\n   */\n};"],
"names":["shadow$provide","global","process","require","module","exports","Object","defineProperty","value","introspectionFromSchema","schema","options","queryAST","_parser","parse","_introspectionQuery","getIntrospectionQuery","result","_execute","execute","then","errors","data","_invariant2","default","_invariant","__esModule"]
}
