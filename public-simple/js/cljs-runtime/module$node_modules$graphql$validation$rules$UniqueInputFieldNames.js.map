{
"version":3,
"file":"module$node_modules$graphql$validation$rules$UniqueInputFieldNames.js",
"lineCount":22,
"mappings":"AAAAA,cAAA,mEAAA,GAAuF,QAAQ,CAACC,CAAD,EAAQC,CAAR,EAAgBC,CAAhB,EAAwBC,CAAxB,EAA+BC,CAA/B,CAAwC;AAoBvIC,UAASA,EAA0B,CAACC,CAAD,CAAY;AAC7C,WAAO,2CAAP,GAAqDA,CAArD,GAAiE,IAAjE;AAD6C;AAjB/CC,QAAAC,eAAA,CAAsBJ,CAAtB,EAA+B,YAA/B,EAA6C,CAC3CK,MAAO,CAAA,CADoC,CAA7C,CAAA;AAGAL,GAAAC,2BAAA,GAAqCA,CAArC;AACAD,GAAAM,sBAAA,GAuBAA,QAA8B,CAACC,CAAD,CAAU;AACtC,QAAIC,IAAiB,EAArB,EACIC,IAAaN,MAAAO,OAAA,CAAc,IAAd,CADjB;AAGA,WAAO,CACLC,YAAa,CACXC,MAAOA,QAAc,EAAG;AACtBJ,OAAAK,KAAA,CAAoBJ,CAApB,CAAA;AACAA,OAAA,GAAaN,MAAAO,OAAA,CAAc,IAAd,CAAb;AAFsB,KADb,EAKXI,MAAOA,QAAc,EAAG;AACtBL,OAAA,GAAaD,CAAAO,IAAA,EAAb;AADsB,KALb,CADR,EAULC,YAAaA,QAAoB,CAACC,CAAD,CAAO;AACtC,UAAIf,IAAYe,CAAAC,KAAAb,MAAhB;AACII,OAAA,CAAWP,CAAX,CAAJ,GACEK,CAAAY,YAAA,CAAoB,IAAIC,CAAAC,aAAJ,CAAwBpB,CAAA,CAA2BC,CAA3B,CAAxB,EAA+D,CAACO,CAAA,CAAWP,CAAX,CAAD,EAAwBe,CAAAC,KAAxB,CAA/D,CAApB,CADF,GAGET,CAAA,CAAWP,CAAX,CAHF,GAG0Be,CAAAC,KAH1B;AAKA,aAAO,CAAA,CAAP;AAPsC,KAVnC,CAAP;AAJsC,GAvBxC;AAEA,MAAIE,IAAStB,CAAA,CAAQ,yCAAR,CAAb;AATuI,CAAvI;;",
"sources":["node_modules/graphql/validation/rules/UniqueInputFieldNames.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql$validation$rules$UniqueInputFieldNames\"] = function(global,process,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.duplicateInputFieldMessage = duplicateInputFieldMessage;\nexports.UniqueInputFieldNames = UniqueInputFieldNames;\n\nvar _error = require('../../error');\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nfunction duplicateInputFieldMessage(fieldName) {\n  return 'There can be only one input field named \"' + fieldName + '\".';\n}\n\n/**\n * Unique input field names\n *\n * A GraphQL input object value is only valid if all supplied fields are\n * uniquely named.\n */\nfunction UniqueInputFieldNames(context) {\n  var knownNameStack = [];\n  var knownNames = Object.create(null);\n\n  return {\n    ObjectValue: {\n      enter: function enter() {\n        knownNameStack.push(knownNames);\n        knownNames = Object.create(null);\n      },\n      leave: function leave() {\n        knownNames = knownNameStack.pop();\n      }\n    },\n    ObjectField: function ObjectField(node) {\n      var fieldName = node.name.value;\n      if (knownNames[fieldName]) {\n        context.reportError(new _error.GraphQLError(duplicateInputFieldMessage(fieldName), [knownNames[fieldName], node.name]));\n      } else {\n        knownNames[fieldName] = node.name;\n      }\n      return false;\n    }\n  };\n}\n};"],
"names":["shadow$provide","global","process","require","module","exports","duplicateInputFieldMessage","fieldName","Object","defineProperty","value","UniqueInputFieldNames","context","knownNameStack","knownNames","create","ObjectValue","enter","push","leave","pop","ObjectField","node","name","reportError","_error","GraphQLError"]
}
