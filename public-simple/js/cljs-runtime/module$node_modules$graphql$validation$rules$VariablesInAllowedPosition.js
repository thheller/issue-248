shadow$provide.module$node_modules$graphql$validation$rules$VariablesInAllowedPosition = function(e, r, b, u, a) {
  function g(a, b, c) {
    return 'Variable "$' + a + '" of type "' + String(b) + '" used in ' + ('position expecting type "' + String(c) + '".');
  }
  Object.defineProperty(a, "__esModule", {value:!0});
  a.badVarPosMessage = g;
  a.VariablesInAllowedPosition = function(a) {
    var b = Object.create(null);
    return {OperationDefinition:{enter:function() {
      b = Object.create(null);
    }, leave:function(d) {
      a.getRecursiveVariableUsages(d).forEach(function(d) {
        var e = d.node;
        d = d.type;
        var h = e.name.value, m = b[h];
        if (m && d) {
          var q = a.getSchema(), p = (0, f.typeFromAST)(q, m.type), C;
          if (C = p) {
            C = (0, l.isTypeSubTypeOf);
            var u = !m.defaultValue || (0, k.isNonNullType)(p) ? p : (0, k.GraphQLNonNull)(p);
            C = !C(q, u, d);
          }
          C && a.reportError(new c.GraphQLError(g(h, p, d), [m, e]));
        }
      });
    }}, VariableDefinition:function(a) {
      b[a.variable.name.value] = a;
    }};
  };
  var c = b("module$node_modules$graphql$error$index"), k = b("module$node_modules$graphql$type$definition"), l = b("module$node_modules$graphql$utilities$typeComparators"), f = b("module$node_modules$graphql$utilities$typeFromAST");
};

//# sourceMappingURL=module$node_modules$graphql$validation$rules$VariablesInAllowedPosition.js.map
