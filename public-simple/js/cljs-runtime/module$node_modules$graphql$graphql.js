shadow$provide.module$node_modules$graphql$graphql = function(e, r, b, u, a) {
  function g(a, b, d, e, g, t, y) {
    var h = (0, c.validateSchema)(a);
    if (0 < h.length) {
      return {errors:h};
    }
    h = void 0;
    try {
      h = (0, k.parse)(b);
    } catch (p) {
      return {errors:[p]};
    }
    b = (0, l.validate)(a, h);
    return 0 < b.length ? {errors:b} : (0, f.execute)(a, h, d, e, g, t, y);
  }
  Object.defineProperty(a, "__esModule", {value:!0});
  a.graphql = function(a, b, c, f, e, k, l) {
    var d = arguments;
    return new Promise(function(h) {
      return h(1 === d.length ? g(a.schema, a.source, a.rootValue, a.contextValue, a.variableValues, a.operationName, a.fieldResolver) : g(a, b, c, f, e, k, l));
    });
  };
  a.graphqlSync = function(a, b, c, f, e, k, l) {
    var d = 1 === arguments.length ? g(a.schema, a.source, a.rootValue, a.contextValue, a.variableValues, a.operationName, a.fieldResolver) : g(a, b, c, f, e, k, l);
    if (d.then) {
      throw Error("GraphQL execution failed to complete synchronously.");
    }
    return d;
  };
  var c = b("module$node_modules$graphql$type$validate"), k = b("module$node_modules$graphql$language$parser"), l = b("module$node_modules$graphql$validation$validate"), f = b("module$node_modules$graphql$execution$execute");
};

//# sourceMappingURL=module$node_modules$graphql$graphql.js.map
