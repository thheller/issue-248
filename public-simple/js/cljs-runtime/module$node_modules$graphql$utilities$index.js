shadow$provide.module$node_modules$graphql$utilities$index = function(e, r, b, u, a) {
  Object.defineProperty(a, "__esModule", {value:!0});
  var g = b("module$node_modules$graphql$utilities$introspectionQuery");
  Object.defineProperty(a, "getIntrospectionQuery", {enumerable:!0, get:function() {
    return g.getIntrospectionQuery;
  }});
  Object.defineProperty(a, "introspectionQuery", {enumerable:!0, get:function() {
    return g.introspectionQuery;
  }});
  var c = b("module$node_modules$graphql$utilities$getOperationAST");
  Object.defineProperty(a, "getOperationAST", {enumerable:!0, get:function() {
    return c.getOperationAST;
  }});
  var k = b("module$node_modules$graphql$utilities$introspectionFromSchema");
  Object.defineProperty(a, "introspectionFromSchema", {enumerable:!0, get:function() {
    return k.introspectionFromSchema;
  }});
  var l = b("module$node_modules$graphql$utilities$buildClientSchema");
  Object.defineProperty(a, "buildClientSchema", {enumerable:!0, get:function() {
    return l.buildClientSchema;
  }});
  var f = b("module$node_modules$graphql$utilities$buildASTSchema");
  Object.defineProperty(a, "buildASTSchema", {enumerable:!0, get:function() {
    return f.buildASTSchema;
  }});
  Object.defineProperty(a, "buildSchema", {enumerable:!0, get:function() {
    return f.buildSchema;
  }});
  Object.defineProperty(a, "getDescription", {enumerable:!0, get:function() {
    return f.getDescription;
  }});
  var h = b("module$node_modules$graphql$utilities$extendSchema");
  Object.defineProperty(a, "extendSchema", {enumerable:!0, get:function() {
    return h.extendSchema;
  }});
  var m = b("module$node_modules$graphql$utilities$lexicographicSortSchema");
  Object.defineProperty(a, "lexicographicSortSchema", {enumerable:!0, get:function() {
    return m.lexicographicSortSchema;
  }});
  var d = b("module$node_modules$graphql$utilities$schemaPrinter");
  Object.defineProperty(a, "printSchema", {enumerable:!0, get:function() {
    return d.printSchema;
  }});
  Object.defineProperty(a, "printType", {enumerable:!0, get:function() {
    return d.printType;
  }});
  Object.defineProperty(a, "printIntrospectionSchema", {enumerable:!0, get:function() {
    return d.printIntrospectionSchema;
  }});
  var q = b("module$node_modules$graphql$utilities$typeFromAST");
  Object.defineProperty(a, "typeFromAST", {enumerable:!0, get:function() {
    return q.typeFromAST;
  }});
  var z = b("module$node_modules$graphql$utilities$valueFromAST");
  Object.defineProperty(a, "valueFromAST", {enumerable:!0, get:function() {
    return z.valueFromAST;
  }});
  var t = b("module$node_modules$graphql$utilities$valueFromASTUntyped");
  Object.defineProperty(a, "valueFromASTUntyped", {enumerable:!0, get:function() {
    return t.valueFromASTUntyped;
  }});
  var y = b("module$node_modules$graphql$utilities$astFromValue");
  Object.defineProperty(a, "astFromValue", {enumerable:!0, get:function() {
    return y.astFromValue;
  }});
  var n = b("module$node_modules$graphql$utilities$TypeInfo");
  Object.defineProperty(a, "TypeInfo", {enumerable:!0, get:function() {
    return n.TypeInfo;
  }});
  var p = b("module$node_modules$graphql$utilities$coerceValue");
  Object.defineProperty(a, "coerceValue", {enumerable:!0, get:function() {
    return p.coerceValue;
  }});
  var C = b("module$node_modules$graphql$utilities$isValidJSValue");
  Object.defineProperty(a, "isValidJSValue", {enumerable:!0, get:function() {
    return C.isValidJSValue;
  }});
  var J = b("module$node_modules$graphql$utilities$isValidLiteralValue");
  Object.defineProperty(a, "isValidLiteralValue", {enumerable:!0, get:function() {
    return J.isValidLiteralValue;
  }});
  var H = b("module$node_modules$graphql$utilities$concatAST");
  Object.defineProperty(a, "concatAST", {enumerable:!0, get:function() {
    return H.concatAST;
  }});
  var M = b("module$node_modules$graphql$utilities$separateOperations");
  Object.defineProperty(a, "separateOperations", {enumerable:!0, get:function() {
    return M.separateOperations;
  }});
  var F = b("module$node_modules$graphql$utilities$typeComparators");
  Object.defineProperty(a, "isEqualType", {enumerable:!0, get:function() {
    return F.isEqualType;
  }});
  Object.defineProperty(a, "isTypeSubTypeOf", {enumerable:!0, get:function() {
    return F.isTypeSubTypeOf;
  }});
  Object.defineProperty(a, "doTypesOverlap", {enumerable:!0, get:function() {
    return F.doTypesOverlap;
  }});
  var B = b("module$node_modules$graphql$utilities$assertValidName");
  Object.defineProperty(a, "assertValidName", {enumerable:!0, get:function() {
    return B.assertValidName;
  }});
  Object.defineProperty(a, "isValidNameError", {enumerable:!0, get:function() {
    return B.isValidNameError;
  }});
  var x = b("module$node_modules$graphql$utilities$findBreakingChanges");
  Object.defineProperty(a, "BreakingChangeType", {enumerable:!0, get:function() {
    return x.BreakingChangeType;
  }});
  Object.defineProperty(a, "DangerousChangeType", {enumerable:!0, get:function() {
    return x.DangerousChangeType;
  }});
  Object.defineProperty(a, "findBreakingChanges", {enumerable:!0, get:function() {
    return x.findBreakingChanges;
  }});
  Object.defineProperty(a, "findDangerousChanges", {enumerable:!0, get:function() {
    return x.findDangerousChanges;
  }});
  var v = b("module$node_modules$graphql$utilities$findDeprecatedUsages");
  Object.defineProperty(a, "findDeprecatedUsages", {enumerable:!0, get:function() {
    return v.findDeprecatedUsages;
  }});
};

//# sourceMappingURL=module$node_modules$graphql$utilities$index.js.map
