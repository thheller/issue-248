shadow$provide.module$node_modules$graphql$utilities$index = function($global$$, $process$$, $require$$, $module$$, $exports$$) {
  Object.defineProperty($exports$$, "__esModule", {value:!0});
  var $_introspectionQuery$$ = $require$$("module$node_modules$graphql$utilities$introspectionQuery");
  Object.defineProperty($exports$$, "getIntrospectionQuery", {enumerable:!0, get:function() {
    return $_introspectionQuery$$.getIntrospectionQuery;
  }});
  Object.defineProperty($exports$$, "introspectionQuery", {enumerable:!0, get:function() {
    return $_introspectionQuery$$.introspectionQuery;
  }});
  var $_getOperationAST$$ = $require$$("module$node_modules$graphql$utilities$getOperationAST");
  Object.defineProperty($exports$$, "getOperationAST", {enumerable:!0, get:function() {
    return $_getOperationAST$$.getOperationAST;
  }});
  var $_introspectionFromSchema$$ = $require$$("module$node_modules$graphql$utilities$introspectionFromSchema");
  Object.defineProperty($exports$$, "introspectionFromSchema", {enumerable:!0, get:function() {
    return $_introspectionFromSchema$$.introspectionFromSchema;
  }});
  var $_buildClientSchema$$ = $require$$("module$node_modules$graphql$utilities$buildClientSchema");
  Object.defineProperty($exports$$, "buildClientSchema", {enumerable:!0, get:function() {
    return $_buildClientSchema$$.buildClientSchema;
  }});
  var $_buildASTSchema$$ = $require$$("module$node_modules$graphql$utilities$buildASTSchema");
  Object.defineProperty($exports$$, "buildASTSchema", {enumerable:!0, get:function() {
    return $_buildASTSchema$$.buildASTSchema;
  }});
  Object.defineProperty($exports$$, "buildSchema", {enumerable:!0, get:function() {
    return $_buildASTSchema$$.buildSchema;
  }});
  Object.defineProperty($exports$$, "getDescription", {enumerable:!0, get:function() {
    return $_buildASTSchema$$.getDescription;
  }});
  var $_extendSchema$$ = $require$$("module$node_modules$graphql$utilities$extendSchema");
  Object.defineProperty($exports$$, "extendSchema", {enumerable:!0, get:function() {
    return $_extendSchema$$.extendSchema;
  }});
  var $_lexicographicSortSchema$$ = $require$$("module$node_modules$graphql$utilities$lexicographicSortSchema");
  Object.defineProperty($exports$$, "lexicographicSortSchema", {enumerable:!0, get:function() {
    return $_lexicographicSortSchema$$.lexicographicSortSchema;
  }});
  var $_schemaPrinter$$ = $require$$("module$node_modules$graphql$utilities$schemaPrinter");
  Object.defineProperty($exports$$, "printSchema", {enumerable:!0, get:function() {
    return $_schemaPrinter$$.printSchema;
  }});
  Object.defineProperty($exports$$, "printType", {enumerable:!0, get:function() {
    return $_schemaPrinter$$.printType;
  }});
  Object.defineProperty($exports$$, "printIntrospectionSchema", {enumerable:!0, get:function() {
    return $_schemaPrinter$$.printIntrospectionSchema;
  }});
  var $_typeFromAST$$ = $require$$("module$node_modules$graphql$utilities$typeFromAST");
  Object.defineProperty($exports$$, "typeFromAST", {enumerable:!0, get:function() {
    return $_typeFromAST$$.typeFromAST;
  }});
  var $_valueFromAST$$ = $require$$("module$node_modules$graphql$utilities$valueFromAST");
  Object.defineProperty($exports$$, "valueFromAST", {enumerable:!0, get:function() {
    return $_valueFromAST$$.valueFromAST;
  }});
  var $_valueFromASTUntyped$$ = $require$$("module$node_modules$graphql$utilities$valueFromASTUntyped");
  Object.defineProperty($exports$$, "valueFromASTUntyped", {enumerable:!0, get:function() {
    return $_valueFromASTUntyped$$.valueFromASTUntyped;
  }});
  var $_astFromValue$$ = $require$$("module$node_modules$graphql$utilities$astFromValue");
  Object.defineProperty($exports$$, "astFromValue", {enumerable:!0, get:function() {
    return $_astFromValue$$.astFromValue;
  }});
  var $_TypeInfo$$ = $require$$("module$node_modules$graphql$utilities$TypeInfo");
  Object.defineProperty($exports$$, "TypeInfo", {enumerable:!0, get:function() {
    return $_TypeInfo$$.TypeInfo;
  }});
  var $_coerceValue$$ = $require$$("module$node_modules$graphql$utilities$coerceValue");
  Object.defineProperty($exports$$, "coerceValue", {enumerable:!0, get:function() {
    return $_coerceValue$$.coerceValue;
  }});
  var $_isValidJSValue$$ = $require$$("module$node_modules$graphql$utilities$isValidJSValue");
  Object.defineProperty($exports$$, "isValidJSValue", {enumerable:!0, get:function() {
    return $_isValidJSValue$$.isValidJSValue;
  }});
  var $_isValidLiteralValue$$ = $require$$("module$node_modules$graphql$utilities$isValidLiteralValue");
  Object.defineProperty($exports$$, "isValidLiteralValue", {enumerable:!0, get:function() {
    return $_isValidLiteralValue$$.isValidLiteralValue;
  }});
  var $_concatAST$$ = $require$$("module$node_modules$graphql$utilities$concatAST");
  Object.defineProperty($exports$$, "concatAST", {enumerable:!0, get:function() {
    return $_concatAST$$.concatAST;
  }});
  var $_separateOperations$$ = $require$$("module$node_modules$graphql$utilities$separateOperations");
  Object.defineProperty($exports$$, "separateOperations", {enumerable:!0, get:function() {
    return $_separateOperations$$.separateOperations;
  }});
  var $_typeComparators$$ = $require$$("module$node_modules$graphql$utilities$typeComparators");
  Object.defineProperty($exports$$, "isEqualType", {enumerable:!0, get:function() {
    return $_typeComparators$$.isEqualType;
  }});
  Object.defineProperty($exports$$, "isTypeSubTypeOf", {enumerable:!0, get:function() {
    return $_typeComparators$$.isTypeSubTypeOf;
  }});
  Object.defineProperty($exports$$, "doTypesOverlap", {enumerable:!0, get:function() {
    return $_typeComparators$$.doTypesOverlap;
  }});
  var $_assertValidName$$ = $require$$("module$node_modules$graphql$utilities$assertValidName");
  Object.defineProperty($exports$$, "assertValidName", {enumerable:!0, get:function() {
    return $_assertValidName$$.assertValidName;
  }});
  Object.defineProperty($exports$$, "isValidNameError", {enumerable:!0, get:function() {
    return $_assertValidName$$.isValidNameError;
  }});
  var $_findBreakingChanges$$ = $require$$("module$node_modules$graphql$utilities$findBreakingChanges");
  Object.defineProperty($exports$$, "BreakingChangeType", {enumerable:!0, get:function() {
    return $_findBreakingChanges$$.BreakingChangeType;
  }});
  Object.defineProperty($exports$$, "DangerousChangeType", {enumerable:!0, get:function() {
    return $_findBreakingChanges$$.DangerousChangeType;
  }});
  Object.defineProperty($exports$$, "findBreakingChanges", {enumerable:!0, get:function() {
    return $_findBreakingChanges$$.findBreakingChanges;
  }});
  Object.defineProperty($exports$$, "findDangerousChanges", {enumerable:!0, get:function() {
    return $_findBreakingChanges$$.findDangerousChanges;
  }});
  var $_findDeprecatedUsages$$ = $require$$("module$node_modules$graphql$utilities$findDeprecatedUsages");
  Object.defineProperty($exports$$, "findDeprecatedUsages", {enumerable:!0, get:function() {
    return $_findDeprecatedUsages$$.findDeprecatedUsages;
  }});
};
