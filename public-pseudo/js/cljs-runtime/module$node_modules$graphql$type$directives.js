shadow$provide.module$node_modules$graphql$type$directives = function($GraphQLDeprecatedDirective__scalars_global$$, $GraphQLSkipDirective__definition$jscomp$1_process$$, $GraphQLIncludeDirective_require$$, $_directiveLocation__instanceOf$jscomp$1__invariant$jscomp$1_module$$, $exports$$) {
  Object.defineProperty($exports$$, "__esModule", {value:!0});
  $exports$$.specifiedDirectives = $exports$$.GraphQLDeprecatedDirective = $exports$$.DEFAULT_DEPRECATION_REASON = $exports$$.GraphQLSkipDirective = $exports$$.GraphQLIncludeDirective = $exports$$.GraphQLDirective = void 0;
  $exports$$.isDirective = function($exports$$) {
    return (0, $_instanceOf2$$.default)($exports$$, $GraphQLDirective$$);
  };
  $exports$$.isSpecifiedDirective = function($exports$$) {
    return $specifiedDirectives$$.some(function($GraphQLIncludeDirective_require$$) {
      return $GraphQLIncludeDirective_require$$.name === $exports$$.name;
    });
  };
  $GraphQLSkipDirective__definition$jscomp$1_process$$ = $GraphQLIncludeDirective_require$$("module$node_modules$graphql$type$definition");
  $GraphQLDeprecatedDirective__scalars_global$$ = $GraphQLIncludeDirective_require$$("module$node_modules$graphql$type$scalars");
  var $_instanceOf2$$ = ($_directiveLocation__instanceOf$jscomp$1__invariant$jscomp$1_module$$ = $GraphQLIncludeDirective_require$$("module$node_modules$graphql$jsutils$instanceOf")) && $_directiveLocation__instanceOf$jscomp$1__invariant$jscomp$1_module$$.__esModule ? $_directiveLocation__instanceOf$jscomp$1__invariant$jscomp$1_module$$ : {default:$_directiveLocation__instanceOf$jscomp$1__invariant$jscomp$1_module$$}, $_invariant2$$ = ($_directiveLocation__instanceOf$jscomp$1__invariant$jscomp$1_module$$ = 
  $GraphQLIncludeDirective_require$$("module$node_modules$graphql$jsutils$invariant")) && $_directiveLocation__instanceOf$jscomp$1__invariant$jscomp$1_module$$.__esModule ? $_directiveLocation__instanceOf$jscomp$1__invariant$jscomp$1_module$$ : {default:$_directiveLocation__instanceOf$jscomp$1__invariant$jscomp$1_module$$};
  $_directiveLocation__instanceOf$jscomp$1__invariant$jscomp$1_module$$ = $GraphQLIncludeDirective_require$$("module$node_modules$graphql$language$directiveLocation");
  var $GraphQLDirective$$ = $exports$$.GraphQLDirective = function $GraphQLDirective$$($exports$$) {
    if (!(this instanceof $GraphQLDirective$$)) {
      throw new TypeError("Cannot call a class as a function");
    }
    this.name = $exports$$.name;
    this.description = $exports$$.description;
    this.locations = $exports$$.locations;
    this.astNode = $exports$$.astNode;
    $exports$$.name ? void 0 : (0, $_invariant2$$.default)(0, "Directive must be named.");
    Array.isArray($exports$$.locations) ? void 0 : (0, $_invariant2$$.default)(0, "Must provide locations for directive.");
    var $GraphQLIncludeDirective_require$$ = $exports$$.args;
    $GraphQLIncludeDirective_require$$ ? (Array.isArray($GraphQLIncludeDirective_require$$) ? (0, $_invariant2$$.default)(0, "@" + $exports$$.name + " args must be an object with argument names as keys.") : void 0, this.args = Object.keys($GraphQLIncludeDirective_require$$).map(function($exports$$) {
      var $GraphQLDirective$$ = $GraphQLIncludeDirective_require$$[$exports$$];
      return {name:$exports$$, description:void 0 === $GraphQLDirective$$.description ? null : $GraphQLDirective$$.description, type:$GraphQLDirective$$.type, defaultValue:$GraphQLDirective$$.defaultValue, astNode:$GraphQLDirective$$.astNode};
    })) : this.args = [];
  };
  $GraphQLIncludeDirective_require$$ = $exports$$.GraphQLIncludeDirective = new $GraphQLDirective$$({name:"include", description:"Directs the executor to include this field or fragment only when the `if` argument is true.", locations:[$_directiveLocation__instanceOf$jscomp$1__invariant$jscomp$1_module$$.DirectiveLocation.FIELD, $_directiveLocation__instanceOf$jscomp$1__invariant$jscomp$1_module$$.DirectiveLocation.FRAGMENT_SPREAD, $_directiveLocation__instanceOf$jscomp$1__invariant$jscomp$1_module$$.DirectiveLocation.INLINE_FRAGMENT], 
  args:{if:{type:(0, $GraphQLSkipDirective__definition$jscomp$1_process$$.GraphQLNonNull)($GraphQLDeprecatedDirective__scalars_global$$.GraphQLBoolean), description:"Included when true."}}});
  $GraphQLSkipDirective__definition$jscomp$1_process$$ = $exports$$.GraphQLSkipDirective = new $GraphQLDirective$$({name:"skip", description:"Directs the executor to skip this field or fragment when the `if` argument is true.", locations:[$_directiveLocation__instanceOf$jscomp$1__invariant$jscomp$1_module$$.DirectiveLocation.FIELD, $_directiveLocation__instanceOf$jscomp$1__invariant$jscomp$1_module$$.DirectiveLocation.FRAGMENT_SPREAD, $_directiveLocation__instanceOf$jscomp$1__invariant$jscomp$1_module$$.DirectiveLocation.INLINE_FRAGMENT], 
  args:{if:{type:(0, $GraphQLSkipDirective__definition$jscomp$1_process$$.GraphQLNonNull)($GraphQLDeprecatedDirective__scalars_global$$.GraphQLBoolean), description:"Skipped when true."}}});
  var $DEFAULT_DEPRECATION_REASON$$ = $exports$$.DEFAULT_DEPRECATION_REASON = "No longer supported";
  $GraphQLDeprecatedDirective__scalars_global$$ = $exports$$.GraphQLDeprecatedDirective = new $GraphQLDirective$$({name:"deprecated", description:"Marks an element of a GraphQL schema as no longer supported.", locations:[$_directiveLocation__instanceOf$jscomp$1__invariant$jscomp$1_module$$.DirectiveLocation.FIELD_DEFINITION, $_directiveLocation__instanceOf$jscomp$1__invariant$jscomp$1_module$$.DirectiveLocation.ENUM_VALUE], args:{reason:{type:$GraphQLDeprecatedDirective__scalars_global$$.GraphQLString, 
  description:"Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted in [Markdown](https://daringfireball.net/projects/markdown/).", defaultValue:$DEFAULT_DEPRECATION_REASON$$}}});
  var $specifiedDirectives$$ = $exports$$.specifiedDirectives = [$GraphQLIncludeDirective_require$$, $GraphQLSkipDirective__definition$jscomp$1_process$$, $GraphQLDeprecatedDirective__scalars_global$$];
};
