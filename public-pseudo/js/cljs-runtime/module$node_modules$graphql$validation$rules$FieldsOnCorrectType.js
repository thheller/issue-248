shadow$provide.module$node_modules$graphql$validation$rules$FieldsOnCorrectType = function($_quotedOrList$jscomp$1__suggestionList$jscomp$1_global$$, $process$$, $require$$, $module$$, $exports$$) {
  function $undefinedFieldMessage$$($exports$$, $require$$, $getSuggestedTypeNames$$, $_definition$$) {
    $exports$$ = 'Cannot query field "' + $exports$$ + '" on type "' + $require$$ + '".';
    0 !== $getSuggestedTypeNames$$.length ? ($getSuggestedTypeNames$$ = (0, $_quotedOrList2$$.default)($getSuggestedTypeNames$$), $exports$$ += " Did you mean to use an inline fragment on " + $getSuggestedTypeNames$$ + "?") : 0 !== $_definition$$.length && ($exports$$ += " Did you mean " + (0, $_quotedOrList2$$.default)($_definition$$) + "?");
    return $exports$$;
  }
  function $getSuggestedTypeNames$$($exports$$, $require$$, $getSuggestedTypeNames$$) {
    if ((0, $_definition$$.isAbstractType)($require$$)) {
      var $type$$ = [], $_quotedOrList2$$ = Object.create(null);
      $exports$$.getPossibleTypes($require$$).forEach(function($exports$$) {
        $exports$$.getFields()[$getSuggestedTypeNames$$] && ($type$$.push($exports$$.name), $exports$$.getInterfaces().forEach(function($exports$$) {
          $exports$$.getFields()[$getSuggestedTypeNames$$] && ($_quotedOrList2$$[$exports$$.name] = ($_quotedOrList2$$[$exports$$.name] || 0) + 1);
        }));
      });
      return Object.keys($_quotedOrList2$$).sort(function($exports$$, $require$$) {
        return $_quotedOrList2$$[$require$$] - $_quotedOrList2$$[$exports$$];
      }).concat($type$$);
    }
    return [];
  }
  Object.defineProperty($exports$$, "__esModule", {value:!0});
  $exports$$.undefinedFieldMessage = $undefinedFieldMessage$$;
  $exports$$.FieldsOnCorrectType = function($exports$$) {
    return {Field:function($require$$) {
      var $node$$ = $exports$$.getParentType();
      if ($node$$ && !$exports$$.getFieldDef()) {
        var $_quotedOrList2$$ = $exports$$.getSchema(), $_quotedOrList$jscomp$1__suggestionList$jscomp$1_global$$ = $require$$.name.value;
        $_quotedOrList2$$ = $getSuggestedTypeNames$$($_quotedOrList2$$, $node$$, $_quotedOrList$jscomp$1__suggestionList$jscomp$1_global$$);
        if (0 !== $_quotedOrList2$$.length) {
          var $context$$ = [];
        } else {
          (0, $_definition$$.isObjectType)($node$$) || (0, $_definition$$.isInterfaceType)($node$$) ? ($context$$ = Object.keys($node$$.getFields()), $context$$ = (0, $_suggestionList2$$.default)($_quotedOrList$jscomp$1__suggestionList$jscomp$1_global$$, $context$$)) : $context$$ = [];
        }
        $exports$$.reportError(new $_error$$.GraphQLError($undefinedFieldMessage$$($_quotedOrList$jscomp$1__suggestionList$jscomp$1_global$$, $node$$.name, $_quotedOrList2$$, $context$$), [$require$$]));
      }
    }};
  };
  var $_error$$ = $require$$("module$node_modules$graphql$error$index"), $_suggestionList2$$ = ($_quotedOrList$jscomp$1__suggestionList$jscomp$1_global$$ = $require$$("module$node_modules$graphql$jsutils$suggestionList")) && $_quotedOrList$jscomp$1__suggestionList$jscomp$1_global$$.__esModule ? $_quotedOrList$jscomp$1__suggestionList$jscomp$1_global$$ : {default:$_quotedOrList$jscomp$1__suggestionList$jscomp$1_global$$}, $_quotedOrList2$$ = ($_quotedOrList$jscomp$1__suggestionList$jscomp$1_global$$ = 
  $require$$("module$node_modules$graphql$jsutils$quotedOrList")) && $_quotedOrList$jscomp$1__suggestionList$jscomp$1_global$$.__esModule ? $_quotedOrList$jscomp$1__suggestionList$jscomp$1_global$$ : {default:$_quotedOrList$jscomp$1__suggestionList$jscomp$1_global$$}, $_definition$$ = $require$$("module$node_modules$graphql$type$definition");
};
