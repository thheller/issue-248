shadow$provide.module$node_modules$graphql$validation$rules$FragmentsOnCompositeTypes = function($global$$, $process$$, $require$$, $module$$, $exports$$) {
  function $inlineFragmentOnNonCompositeErrorMessage$$($exports$$) {
    return 'Fragment cannot condition on non composite type "' + String($exports$$) + '".';
  }
  function $fragmentOnNonCompositeErrorMessage$$($exports$$, $require$$) {
    return 'Fragment "' + $exports$$ + '" cannot condition on non composite ' + ('type "' + String($require$$) + '".');
  }
  Object.defineProperty($exports$$, "__esModule", {value:!0});
  $exports$$.inlineFragmentOnNonCompositeErrorMessage = $inlineFragmentOnNonCompositeErrorMessage$$;
  $exports$$.fragmentOnNonCompositeErrorMessage = $fragmentOnNonCompositeErrorMessage$$;
  $exports$$.FragmentsOnCompositeTypes = function($exports$$) {
    return {InlineFragment:function($require$$) {
      if ($require$$ = $require$$.typeCondition) {
        var $node$jscomp$31_typeCondition$$ = (0, $_typeFromAST$$.typeFromAST)($exports$$.getSchema(), $require$$);
        $node$jscomp$31_typeCondition$$ && !(0, $_definition$$.isCompositeType)($node$jscomp$31_typeCondition$$) && $exports$$.reportError(new $_error$$.GraphQLError($inlineFragmentOnNonCompositeErrorMessage$$((0, $_printer$$.print)($require$$)), [$require$$]));
      }
    }, FragmentDefinition:function($require$$) {
      var $node$$ = (0, $_typeFromAST$$.typeFromAST)($exports$$.getSchema(), $require$$.typeCondition);
      $node$$ && !(0, $_definition$$.isCompositeType)($node$$) && $exports$$.reportError(new $_error$$.GraphQLError($fragmentOnNonCompositeErrorMessage$$($require$$.name.value, (0, $_printer$$.print)($require$$.typeCondition)), [$require$$.typeCondition]));
    }};
  };
  var $_error$$ = $require$$("module$node_modules$graphql$error$index"), $_printer$$ = $require$$("module$node_modules$graphql$language$printer"), $_definition$$ = $require$$("module$node_modules$graphql$type$definition"), $_typeFromAST$$ = $require$$("module$node_modules$graphql$utilities$typeFromAST");
};
