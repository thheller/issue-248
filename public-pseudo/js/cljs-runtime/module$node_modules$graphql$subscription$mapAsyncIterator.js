shadow$provide.module$node_modules$graphql$subscription$mapAsyncIterator = function($global$$, $process$$, $require$$, $module$$, $exports$$) {
  function $_defineProperty$$($exports$$, $require$$, $asyncMapValue$$) {
    $require$$ in $exports$$ ? Object.defineProperty($exports$$, $require$$, {value:$asyncMapValue$$, enumerable:!0, configurable:!0, writable:!0}) : $exports$$[$require$$] = $asyncMapValue$$;
    return $exports$$;
  }
  function $asyncMapValue$$($exports$$, $require$$) {
    return new Promise(function($asyncMapValue$$) {
      return $asyncMapValue$$($require$$($exports$$));
    });
  }
  function $iteratorResult$$($exports$$) {
    return {value:$exports$$, done:!1};
  }
  Object.defineProperty($exports$$, "__esModule", {value:!0});
  $exports$$.default = function($exports$$, $require$$, $global$$) {
    function $mapResult$$($exports$$) {
      return $exports$$.done ? $exports$$ : $asyncMapValue$$($exports$$.value, $require$$).then($iteratorResult$$, $rejectCallback$$);
    }
    var $iterable$$ = (0, $_iterall$$.getAsyncIterator)($exports$$), $callback$$ = void 0, $rejectCallback$$ = void 0;
    "function" === typeof $iterable$$.return && ($callback$$ = $iterable$$.return, $rejectCallback$$ = function($exports$$) {
      var $require$$ = function() {
        return Promise.reject($exports$$);
      };
      return $callback$$.call($iterable$$).then($require$$, $require$$);
    });
    var $mapReject$$ = void 0;
    $global$$ && ($mapReject$$ = function($exports$$) {
      return $asyncMapValue$$($exports$$, $global$$).then($iteratorResult$$, $rejectCallback$$);
    });
    return $_defineProperty$$({next:function() {
      return $iterable$$.next().then($mapResult$$, $mapReject$$);
    }, return:function() {
      return $callback$$ ? $callback$$.call($iterable$$).then($mapResult$$, $mapReject$$) : Promise.resolve({value:void 0, done:!0});
    }, throw:function($exports$$) {
      return "function" === typeof $iterable$$.throw ? $iterable$$.throw($exports$$).then($mapResult$$, $mapReject$$) : Promise.reject($exports$$).catch($rejectCallback$$);
    }}, $_iterall$$.$$asyncIterator, function() {
      return this;
    });
  };
  var $_iterall$$ = $require$$("module$node_modules$iterall$index");
};
