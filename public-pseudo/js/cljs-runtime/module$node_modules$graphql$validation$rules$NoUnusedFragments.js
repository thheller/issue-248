shadow$provide.module$node_modules$graphql$validation$rules$NoUnusedFragments = function($global$$, $process$$, $require$$, $module$$, $exports$$) {
  function $unusedFragMessage$$($exports$$) {
    return 'Fragment "' + $exports$$ + '" is never used.';
  }
  Object.defineProperty($exports$$, "__esModule", {value:!0});
  $exports$$.unusedFragMessage = $unusedFragMessage$$;
  $exports$$.NoUnusedFragments = function($exports$$) {
    var $require$$ = [], $fragmentDefs$$ = [];
    return {OperationDefinition:function($exports$$) {
      $require$$.push($exports$$);
      return !1;
    }, FragmentDefinition:function($exports$$) {
      $fragmentDefs$$.push($exports$$);
      return !1;
    }, Document:{leave:function() {
      var $fragmentNameUsed$$ = Object.create(null);
      $require$$.forEach(function($require$$) {
        $exports$$.getRecursivelyReferencedFragments($require$$).forEach(function($exports$$) {
          $fragmentNameUsed$$[$exports$$.name.value] = !0;
        });
      });
      $fragmentDefs$$.forEach(function($require$$) {
        var $fragName$$ = $require$$.name.value;
        !0 !== $fragmentNameUsed$$[$fragName$$] && $exports$$.reportError(new $_error$$.GraphQLError($unusedFragMessage$$($fragName$$), [$require$$]));
      });
    }}};
  };
  var $_error$$ = $require$$("module$node_modules$graphql$error$index");
};
