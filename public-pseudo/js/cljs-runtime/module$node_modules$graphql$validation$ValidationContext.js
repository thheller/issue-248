shadow$provide.module$node_modules$graphql$validation$ValidationContext = function($ValidationContext_global$$, $process$$, $require$$, $module$$, $exports$$) {
  Object.defineProperty($exports$$, "__esModule", {value:!0});
  $require$$("module$node_modules$graphql$error$index");
  var $_visitor$$ = $require$$("module$node_modules$graphql$language$visitor"), $_kinds$$ = $require$$("module$node_modules$graphql$language$kinds");
  $require$$("module$node_modules$graphql$type$schema");
  var $_TypeInfo$$ = $require$$("module$node_modules$graphql$utilities$TypeInfo");
  $ValidationContext_global$$ = function() {
    function $exports$$($require$$, $_kinds$$, $ValidationContext_global$$) {
      if (!(this instanceof $exports$$)) {
        throw new TypeError("Cannot call a class as a function");
      }
      this._schema = $require$$;
      this._ast = $_kinds$$;
      this._typeInfo = $ValidationContext_global$$;
      this._errors = [];
      this._fragmentSpreads = new Map;
      this._recursivelyReferencedFragments = new Map;
      this._variableUsages = new Map;
      this._recursiveVariableUsages = new Map;
    }
    $exports$$.prototype.reportError = function($exports$$) {
      this._errors.push($exports$$);
    };
    $exports$$.prototype.getErrors = function() {
      return this._errors;
    };
    $exports$$.prototype.getSchema = function() {
      return this._schema;
    };
    $exports$$.prototype.getDocument = function() {
      return this._ast;
    };
    $exports$$.prototype.getFragment = function($exports$$) {
      var $require$$ = this._fragments;
      $require$$ || (this._fragments = $require$$ = this.getDocument().definitions.reduce(function($exports$$, $require$$) {
        $require$$.kind === $_kinds$$.Kind.FRAGMENT_DEFINITION && ($exports$$[$require$$.name.value] = $require$$);
        return $exports$$;
      }, Object.create(null)));
      return $require$$[$exports$$];
    };
    $exports$$.prototype.getFragmentSpreads = function($exports$$) {
      var $require$$ = this._fragmentSpreads.get($exports$$);
      if (!$require$$) {
        $require$$ = [];
        for (var $node$$ = [$exports$$]; 0 !== $node$$.length;) {
          for (var $set$$ = $node$$.pop(), $ValidationContext_global$$ = 0; $ValidationContext_global$$ < $set$$.selections.length; $ValidationContext_global$$++) {
            var $_visitor$$ = $set$$.selections[$ValidationContext_global$$];
            $_visitor$$.kind === $_kinds$$.Kind.FRAGMENT_SPREAD ? $require$$.push($_visitor$$) : $_visitor$$.selectionSet && $node$$.push($_visitor$$.selectionSet);
          }
        }
        this._fragmentSpreads.set($exports$$, $require$$);
      }
      return $require$$;
    };
    $exports$$.prototype.getRecursivelyReferencedFragments = function($exports$$) {
      var $require$$ = this._recursivelyReferencedFragments.get($exports$$);
      if (!$require$$) {
        $require$$ = [];
        for (var $_kinds$$ = Object.create(null), $nodesToVisit$$ = [$exports$$.selectionSet]; 0 !== $nodesToVisit$$.length;) {
          var $operation$$ = $nodesToVisit$$.pop();
          $operation$$ = this.getFragmentSpreads($operation$$);
          for (var $ValidationContext_global$$ = 0; $ValidationContext_global$$ < $operation$$.length; $ValidationContext_global$$++) {
            var $_visitor$$ = $operation$$[$ValidationContext_global$$].name.value;
            !0 !== $_kinds$$[$_visitor$$] && ($_kinds$$[$_visitor$$] = !0, $_visitor$$ = this.getFragment($_visitor$$)) && ($require$$.push($_visitor$$), $nodesToVisit$$.push($_visitor$$.selectionSet));
          }
        }
        this._recursivelyReferencedFragments.set($exports$$, $require$$);
      }
      return $require$$;
    };
    $exports$$.prototype.getVariableUsages = function($exports$$) {
      var $require$$ = this._variableUsages.get($exports$$);
      if (!$require$$) {
        var $_kinds$$ = [], $typeInfo$$ = new $_TypeInfo$$.TypeInfo(this._schema);
        (0, $_visitor$$.visit)($exports$$, (0, $_visitor$$.visitWithTypeInfo)($typeInfo$$, {VariableDefinition:function() {
          return !1;
        }, Variable:function($exports$$) {
          $_kinds$$.push({node:$exports$$, type:$typeInfo$$.getInputType()});
        }}));
        $require$$ = $_kinds$$;
        this._variableUsages.set($exports$$, $require$$);
      }
      return $require$$;
    };
    $exports$$.prototype.getRecursiveVariableUsages = function($exports$$) {
      var $require$$ = this._recursiveVariableUsages.get($exports$$);
      if (!$require$$) {
        $require$$ = this.getVariableUsages($exports$$);
        for (var $_kinds$$ = this.getRecursivelyReferencedFragments($exports$$), $i$$ = 0; $i$$ < $_kinds$$.length; $i$$++) {
          Array.prototype.push.apply($require$$, this.getVariableUsages($_kinds$$[$i$$]));
        }
        this._recursiveVariableUsages.set($exports$$, $require$$);
      }
      return $require$$;
    };
    $exports$$.prototype.getType = function() {
      return this._typeInfo.getType();
    };
    $exports$$.prototype.getParentType = function() {
      return this._typeInfo.getParentType();
    };
    $exports$$.prototype.getInputType = function() {
      return this._typeInfo.getInputType();
    };
    $exports$$.prototype.getParentInputType = function() {
      return this._typeInfo.getParentInputType();
    };
    $exports$$.prototype.getFieldDef = function() {
      return this._typeInfo.getFieldDef();
    };
    $exports$$.prototype.getDirective = function() {
      return this._typeInfo.getDirective();
    };
    $exports$$.prototype.getArgument = function() {
      return this._typeInfo.getArgument();
    };
    return $exports$$;
  }();
  $exports$$.default = $ValidationContext_global$$;
};
