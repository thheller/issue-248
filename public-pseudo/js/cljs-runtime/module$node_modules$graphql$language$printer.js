shadow$provide.module$node_modules$graphql$language$printer = function($global$$, $process$$, $require$$, $module$$, $exports$$) {
  function $addDescription$$($exports$$) {
    return function($cb$$) {
      return $join$$([$cb$$.description, $exports$$($cb$$)], "\n");
    };
  }
  function $join$$($exports$$, $require$$) {
    return $exports$$ ? $exports$$.filter(function($exports$$) {
      return $exports$$;
    }).join($require$$ || "") : "";
  }
  function $block$$($exports$$) {
    return $exports$$ && 0 !== $exports$$.length ? "{\n" + $indent$$($join$$($exports$$, "\n")) + "\n}" : "";
  }
  function $wrap$$($exports$$, $require$$, $indent$$) {
    return $require$$ ? $exports$$ + $require$$ + ($indent$$ || "") : "";
  }
  function $indent$$($exports$$) {
    return $exports$$ && "  " + $exports$$.replace(/\n/g, "\n  ");
  }
  Object.defineProperty($exports$$, "__esModule", {value:!0});
  $exports$$.print = function($exports$$) {
    return (0, $_visitor$$.visit)($exports$$, {leave:$printDocASTReducer$$});
  };
  var $_visitor$$ = $require$$("module$node_modules$graphql$language$visitor"), $printDocASTReducer$$ = {Name:function($exports$$) {
    return $exports$$.value;
  }, Variable:function($exports$$) {
    return "$" + $exports$$.name;
  }, Document:function($exports$$) {
    return $join$$($exports$$.definitions, "\n\n") + "\n";
  }, OperationDefinition:function($exports$$) {
    var $node$$ = $exports$$.operation, $require$$ = $exports$$.name, $indent$$ = $wrap$$("(", $join$$($exports$$.variableDefinitions, ", "), ")"), $_visitor$$ = $join$$($exports$$.directives, " ");
    $exports$$ = $exports$$.selectionSet;
    return $require$$ || $_visitor$$ || $indent$$ || "query" !== $node$$ ? $join$$([$node$$, $join$$([$require$$, $indent$$]), $_visitor$$, $exports$$], " ") : $exports$$;
  }, VariableDefinition:function($exports$$) {
    return $exports$$.variable + ": " + $exports$$.type + $wrap$$(" \x3d ", $exports$$.defaultValue);
  }, SelectionSet:function($exports$$) {
    return $block$$($exports$$.selections);
  }, Field:function($exports$$) {
    var $_ref3$$ = $exports$$.name, $require$$ = $exports$$.arguments, $indent$$ = $exports$$.directives, $_visitor$$ = $exports$$.selectionSet;
    return $join$$([$wrap$$("", $exports$$.alias, ": ") + $_ref3$$ + $wrap$$("(", $join$$($require$$, ", "), ")"), $join$$($indent$$, " "), $_visitor$$], " ");
  }, Argument:function($exports$$) {
    return $exports$$.name + ": " + $exports$$.value;
  }, FragmentSpread:function($exports$$) {
    return "..." + $exports$$.name + $wrap$$(" ", $join$$($exports$$.directives, " "));
  }, InlineFragment:function($exports$$) {
    var $require$$ = $exports$$.directives, $_ref6$$ = $exports$$.selectionSet;
    return $join$$(["...", $wrap$$("on ", $exports$$.typeCondition), $join$$($require$$, " "), $_ref6$$], " ");
  }, FragmentDefinition:function($exports$$) {
    var $require$$ = $exports$$.typeCondition, $_ref7$$ = $exports$$.directives, $indent$$ = $exports$$.selectionSet;
    return "fragment " + $exports$$.name + $wrap$$("(", $join$$($exports$$.variableDefinitions, ", "), ")") + " " + ("on " + $require$$ + " " + $wrap$$("", $join$$($_ref7$$, " "), " ")) + $indent$$;
  }, IntValue:function($exports$$) {
    return $exports$$.value;
  }, FloatValue:function($exports$$) {
    return $exports$$.value;
  }, StringValue:function($exports$$, $require$$) {
    var $_ref10_isDescription$$ = $exports$$.value;
    $exports$$.block ? ($exports$$ = "description" === $require$$, $require$$ = $_ref10_isDescription$$.replace(/"""/g, '\\"""'), $_ref10_isDescription$$ = " " !== $_ref10_isDescription$$[0] && "\t" !== $_ref10_isDescription$$[0] || -1 !== $_ref10_isDescription$$.indexOf("\n") ? '"""\n' + ($exports$$ ? $require$$ : $indent$$($require$$)) + '\n"""' : '"""' + $require$$.replace(/"$/, '"\n') + '"""') : $_ref10_isDescription$$ = JSON.stringify($_ref10_isDescription$$);
    return $_ref10_isDescription$$;
  }, BooleanValue:function($exports$$) {
    return $exports$$.value ? "true" : "false";
  }, NullValue:function() {
    return "null";
  }, EnumValue:function($exports$$) {
    return $exports$$.value;
  }, ListValue:function($exports$$) {
    return "[" + $join$$($exports$$.values, ", ") + "]";
  }, ObjectValue:function($exports$$) {
    return "{" + $join$$($exports$$.fields, ", ") + "}";
  }, ObjectField:function($exports$$) {
    return $exports$$.name + ": " + $exports$$.value;
  }, Directive:function($exports$$) {
    return "@" + $exports$$.name + $wrap$$("(", $join$$($exports$$.arguments, ", "), ")");
  }, NamedType:function($exports$$) {
    return $exports$$.name;
  }, ListType:function($exports$$) {
    return "[" + $exports$$.type + "]";
  }, NonNullType:function($exports$$) {
    return $exports$$.type + "!";
  }, SchemaDefinition:function($exports$$) {
    var $require$$ = $exports$$.operationTypes;
    return $join$$(["schema", $join$$($exports$$.directives, " "), $block$$($require$$)], " ");
  }, OperationTypeDefinition:function($exports$$) {
    return $exports$$.operation + ": " + $exports$$.type;
  }, ScalarTypeDefinition:$addDescription$$(function($exports$$) {
    return $join$$(["scalar", $exports$$.name, $join$$($exports$$.directives, " ")], " ");
  }), ObjectTypeDefinition:$addDescription$$(function($exports$$) {
    var $require$$ = $exports$$.directives, $_ref23$$ = $exports$$.fields;
    return $join$$(["type", $exports$$.name, $wrap$$("implements ", $join$$($exports$$.interfaces, " \x26 ")), $join$$($require$$, " "), $block$$($_ref23$$)], " ");
  }), FieldDefinition:$addDescription$$(function($exports$$) {
    var $require$$ = $exports$$.type, $_ref24$$ = $exports$$.directives;
    return $exports$$.name + $wrap$$("(", $join$$($exports$$.arguments, ", "), ")") + ": " + $require$$ + $wrap$$(" ", $join$$($_ref24$$, " "));
  }), InputValueDefinition:$addDescription$$(function($exports$$) {
    var $require$$ = $exports$$.directives;
    return $join$$([$exports$$.name + ": " + $exports$$.type, $wrap$$("\x3d ", $exports$$.defaultValue), $join$$($require$$, " ")], " ");
  }), InterfaceTypeDefinition:$addDescription$$(function($exports$$) {
    var $require$$ = $exports$$.fields;
    return $join$$(["interface", $exports$$.name, $join$$($exports$$.directives, " "), $block$$($require$$)], " ");
  }), UnionTypeDefinition:$addDescription$$(function($exports$$) {
    var $require$$ = $exports$$.types;
    return $join$$(["union", $exports$$.name, $join$$($exports$$.directives, " "), $require$$ && 0 !== $require$$.length ? "\x3d " + $join$$($require$$, " | ") : ""], " ");
  }), EnumTypeDefinition:$addDescription$$(function($exports$$) {
    var $require$$ = $exports$$.values;
    return $join$$(["enum", $exports$$.name, $join$$($exports$$.directives, " "), $block$$($require$$)], " ");
  }), EnumValueDefinition:$addDescription$$(function($exports$$) {
    return $join$$([$exports$$.name, $join$$($exports$$.directives, " ")], " ");
  }), InputObjectTypeDefinition:$addDescription$$(function($exports$$) {
    var $require$$ = $exports$$.fields;
    return $join$$(["input", $exports$$.name, $join$$($exports$$.directives, " "), $block$$($require$$)], " ");
  }), ScalarTypeExtension:function($exports$$) {
    return $join$$(["extend scalar", $exports$$.name, $join$$($exports$$.directives, " ")], " ");
  }, ObjectTypeExtension:function($exports$$) {
    var $require$$ = $exports$$.directives, $indent$$ = $exports$$.fields;
    return $join$$(["extend type", $exports$$.name, $wrap$$("implements ", $join$$($exports$$.interfaces, " \x26 ")), $join$$($require$$, " "), $block$$($indent$$)], " ");
  }, InterfaceTypeExtension:function($exports$$) {
    var $require$$ = $exports$$.fields;
    return $join$$(["extend interface", $exports$$.name, $join$$($exports$$.directives, " "), $block$$($require$$)], " ");
  }, UnionTypeExtension:function($exports$$) {
    var $require$$ = $exports$$.types;
    return $join$$(["extend union", $exports$$.name, $join$$($exports$$.directives, " "), $require$$ && 0 !== $require$$.length ? "\x3d " + $join$$($require$$, " | ") : ""], " ");
  }, EnumTypeExtension:function($exports$$) {
    var $require$$ = $exports$$.values;
    return $join$$(["extend enum", $exports$$.name, $join$$($exports$$.directives, " "), $block$$($require$$)], " ");
  }, InputObjectTypeExtension:function($exports$$) {
    var $require$$ = $exports$$.fields;
    return $join$$(["extend input", $exports$$.name, $join$$($exports$$.directives, " "), $block$$($require$$)], " ");
  }, DirectiveDefinition:$addDescription$$(function($exports$$) {
    var $require$$ = $exports$$.locations;
    return "directive @" + $exports$$.name + $wrap$$("(", $join$$($exports$$.arguments, ", "), ")") + " on " + $join$$($require$$, " | ");
  })};
};
