shadow$provide.module$node_modules$graphql$subscription$subscribe = function($_mapAsyncIterator_global$$, $process$$, $require$$, $module$$, $exports$$) {
  function $reportGraphQLError$$($exports$$) {
    if ($exports$$ instanceof $_GraphQLError$$.GraphQLError) {
      return {errors:[$exports$$]};
    }
    throw $exports$$;
  }
  function $subscribeImpl$$($exports$$, $require$$, $subscribeImpl$$, $_GraphQLError$$, $_mapAsyncIterator_global$$, $_locatedError$$, $module$$, $process$$) {
    var $variableValues$$ = function($subscribeImpl$$) {
      return (0, $_execute$$.execute)($exports$$, $require$$, $subscribeImpl$$, $_GraphQLError$$, $_mapAsyncIterator_global$$, $_locatedError$$, $module$$);
    };
    return $createSourceEventStream$$($exports$$, $require$$, $subscribeImpl$$, $_GraphQLError$$, $_mapAsyncIterator_global$$, $_locatedError$$, $process$$).then(function($exports$$) {
      return (0, $_iterall$$.isAsyncIterable)($exports$$) ? (0, $_mapAsyncIterator2$$.default)($exports$$, $variableValues$$, $reportGraphQLError$$) : $exports$$;
    }, $reportGraphQLError$$);
  }
  function $createSourceEventStream$$($exports$$, $require$$, $subscribeImpl$$, $_mapAsyncIterator2$$, $_mapAsyncIterator_global$$, $reportGraphQLError$$, $createSourceEventStream$$) {
    (0, $_execute$$.assertValidExecutionArguments)($exports$$, $require$$, $_mapAsyncIterator_global$$);
    try {
      var $variableValues$$ = (0, $_execute$$.buildExecutionContext)($exports$$, $require$$, $subscribeImpl$$, $_mapAsyncIterator2$$, $_mapAsyncIterator_global$$, $reportGraphQLError$$, $createSourceEventStream$$);
      if (Array.isArray($variableValues$$)) {
        return Promise.resolve({errors:$variableValues$$});
      }
      var $operationName$$ = (0, $_execute$$.getOperationRootType)($exports$$, $variableValues$$.operation), $schema$$ = (0, $_execute$$.collectFields)($variableValues$$, $operationName$$, $variableValues$$.operation.selectionSet, Object.create(null), Object.create(null)), $rootValue$$ = Object.keys($schema$$)[0], $contextValue$$ = $schema$$[$rootValue$$], $fieldName$$ = $contextValue$$[0].name.value, $fieldDef$$ = (0, $_execute$$.getFieldDef)($exports$$, $operationName$$, $fieldName$$);
      if (!$fieldDef$$) {
        throw new $_GraphQLError$$.GraphQLError('The subscription field "' + $fieldName$$ + '" is not defined.', $contextValue$$);
      }
      var $resolveFn$$ = $fieldDef$$.subscribe || $variableValues$$.fieldResolver, $path$$ = (0, $_execute$$.addPath)(void 0, $rootValue$$), $module$$ = (0, $_execute$$.buildResolveInfo)($variableValues$$, $fieldDef$$, $contextValue$$, $operationName$$, $path$$), $process$$ = (0, $_execute$$.resolveFieldValueOrError)($variableValues$$, $fieldDef$$, $contextValue$$, $resolveFn$$, $subscribeImpl$$, $module$$);
      return Promise.resolve($process$$).then(function($exports$$) {
        if ($exports$$ instanceof Error) {
          throw (0, $_locatedError$$.locatedError)($exports$$, $contextValue$$, (0, $_execute$$.responsePathAsArray)($path$$));
        }
        if ((0, $_iterall$$.isAsyncIterable)($exports$$)) {
          return $exports$$;
        }
        throw Error("Subscription field must return Async Iterable. Received: " + String($exports$$));
      });
    } catch ($error$$) {
      return Promise.reject($error$$);
    }
  }
  Object.defineProperty($exports$$, "__esModule", {value:!0});
  $exports$$.subscribe = function($exports$$, $require$$, $_mapAsyncIterator2$$, $_GraphQLError$$, $_mapAsyncIterator_global$$, $_locatedError$$, $reportGraphQLError$$, $createSourceEventStream$$) {
    return 1 === arguments.length ? $subscribeImpl$$($exports$$.schema, $exports$$.document, $exports$$.rootValue, $exports$$.contextValue, $exports$$.variableValues, $exports$$.operationName, $exports$$.fieldResolver, $exports$$.subscribeFieldResolver) : $subscribeImpl$$($exports$$, $require$$, $_mapAsyncIterator2$$, $_GraphQLError$$, $_mapAsyncIterator_global$$, $_locatedError$$, $reportGraphQLError$$, $createSourceEventStream$$);
  };
  $exports$$.createSourceEventStream = $createSourceEventStream$$;
  var $_iterall$$ = $require$$("module$node_modules$iterall$index"), $_GraphQLError$$ = $require$$("module$node_modules$graphql$error$GraphQLError"), $_locatedError$$ = $require$$("module$node_modules$graphql$error$locatedError"), $_execute$$ = $require$$("module$node_modules$graphql$execution$execute");
  $require$$("module$node_modules$graphql$type$schema");
  var $_mapAsyncIterator2$$ = ($_mapAsyncIterator_global$$ = $require$$("module$node_modules$graphql$subscription$mapAsyncIterator")) && $_mapAsyncIterator_global$$.__esModule ? $_mapAsyncIterator_global$$ : {default:$_mapAsyncIterator_global$$};
};
